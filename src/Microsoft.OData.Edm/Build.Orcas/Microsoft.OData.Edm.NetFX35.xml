<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.OData.Edm.NetFX35</name>
    </assembly>
    <members>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlExpressionBase">
            <summary>
            Common base type for a CSDL expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlElement">
            <summary>
            Common base class for CSDL elements.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsElement">
            <summary>
            Common base class for CsdlSemantics classes that have Annotations.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmElement">
            <summary>
            Common base interface for all EDM elements.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmLocatable">
            <summary>
            Interface for all EDM elements that can be located.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmLocatable.Location">
            <summary>
            Gets the location of this element.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsElement.AllocateAndAdd``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Allocates a new list if needed, and adds the item to the list.
            </summary>
            <typeparam name="T">Type of the list.</typeparam>
            <param name="list">List to add the item to.</param>
            <param name="item">Item being added.</param>
            <returns>List containing then new item.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmExpression">
            <summary>
            Represents an EDM expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmEnumMemberExpression">
            <summary>
            Represents an EDM enumeration member reference expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmEnumMemberExpression.EnumMembers">
            <summary>
            Gets the referenced enum member.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmCheckable">
            <summary>
            Defines an Edm component who is invalid or whose validity is unknown at construction
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmCheckable.Errors">
            <summary>
            Gets an error if one exists with the current object.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmEnumMemberExpression">
            <summary>
            Represents an EDM enumeration member reference expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmElement">
            <summary>
            Common base class for all EDM elements.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmEnumMemberExpression.#ctor(Microsoft.OData.Edm.IEdmEnumMember[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmEnumMemberExpression"/> class.
            </summary>
            <param name="enumMembers">Referenced enum member.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmEnumMemberExpression.EnumMembers">
            <summary>
            Gets the referenced enum member.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmEnumMemberExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.TimeOfDay">
            <summary>
            TimeOfDay type for Edm.TimeOfDay
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.TimeOfDay.MaxTickValue">
            <summary>
            Max value of ticks
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.TimeOfDay.MinTickValue">
            <summary>
            Min value of ticks
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.TimeOfDay.TicksPerHour">
            <summary>
            Represents the number of ticks in 1 hour. This field is constant.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.TimeOfDay.TicksPerMinute">
            <summary>
            Represents the number of ticks in 1 minute. This field is constant.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.TimeOfDay.TicksPerSecond">
            <summary>
            Represents the number of ticks in 1 second.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.TimeOfDay.MinValue">
            <summary>
            Min value of <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.TimeOfDay.MaxValue">
            <summary>
            Max value of <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.TimeOfDay.timeSpan">
            <summary>
            Internal using System.TimeSpan
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Consturctor of <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>
            </summary>
            <param name="hour">Hour value of TimeOfDay</param>
            <param name="minute">Minute value of TimeOfDay</param>
            <param name="second">Second value of TimeOfDay</param>
            <param name="millisecond">Millisecond value of TimeOfDay, whose precision will be millisecond (3 digits).</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.#ctor(System.Int64)">
            <summary>
            Consturctor of <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>
            </summary>
            <param name="ticks">ticks value of TimeOfDay</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.op_Inequality(Microsoft.OData.Edm.Library.TimeOfDay,Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Indicates whether two <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> instances are not equal.
            </summary>
            <param name="firstOperand">The first time interval to compare.</param>
            <param name="secondOperand">The second time interval to compare.</param>
            <returns>true if the values of firstOperand and secondOperand are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.op_Equality(Microsoft.OData.Edm.Library.TimeOfDay,Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Indicates whether two <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> instances are equal.
            </summary>
            <param name="firstOperand">The first time interval to compare.</param>
            <param name="secondOperand">The second time interval to compare.</param>
            <returns>true if the values of firstOperand and secondOperand are equal; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.op_GreaterThanOrEqual(Microsoft.OData.Edm.Library.TimeOfDay,Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Indicates whether a specified <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> is greater equal to 
            another specified <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>.
            </summary>
            <param name="firstOperand">The first time interval to compare.</param>
            <param name="secondOperand">The second time interval to compare.</param>
            <returns>true if the value of firstOperand is greater equal to the value of secondOperand; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.op_GreaterThan(Microsoft.OData.Edm.Library.TimeOfDay,Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Indicates whether a specified <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> is greater than 
            another specified <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>.
            </summary>
            <param name="firstOperand">The first time interval to compare.</param>
            <param name="secondOperand">The second time interval to compare.</param>
            <returns>true if the value of firstOperand is greater than the value of secondOperand; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.op_LessThanOrEqual(Microsoft.OData.Edm.Library.TimeOfDay,Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Indicates whether a specified <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> is less equal to 
            another specified <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>.
            </summary>
            <param name="firstOperand">The first time interval to compare.</param>
            <param name="secondOperand">The second time interval to compare.</param>
            <returns>true if the value of firstOperand is less equal to the value of secondOperand; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.op_LessThan(Microsoft.OData.Edm.Library.TimeOfDay,Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Indicates whether a specified <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> is less than 
            another specified <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>.
            </summary>
            <param name="firstOperand">The first time interval to compare.</param>
            <param name="secondOperand">The second time interval to compare.</param>
            <returns>true if the value of firstOperand is less than the value of secondOperand; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.op_Implicit(Microsoft.OData.Edm.Library.TimeOfDay)~System.TimeSpan">
            <summary>
            Convert TimeOfDay to .Net Clr TimeSpan
            </summary>
            <param name="time">TimeOfDay Value</param>
            <returns>TimeSpan Value which represent the TimeOfDay</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.op_Implicit(System.TimeSpan)~Microsoft.OData.Edm.Library.TimeOfDay">
            <summary>
            Convert .Net Clr TimeSpan to TimeOfDay
            </summary>
            <param name="timeSpan">TimeSpan Value</param>
            <returns>TimeOfDay Value from TimeSpan</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.Equals(Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Compares the value of this instance to a specified TimeOfDay value
            and returns an bool that indicates whether this instance is same as the specified TimeOfDay value.
            </summary>
            <param name="other">The object to compare to the current instance</param>
            <returns>True for equal, false for non-equal.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.Equals(System.Object)">
            <summary>
            Compares the value of this instance to a specified object value
            and returns an bool that indicates whether the specified object is <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> 
            and this instance is same as the specified <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> value.
            </summary>
            <param name="obj">The object to compare to the current instance</param>
            <returns>True for equal, false for non-equal.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.ToString">
            <summary>
            Convert TimeOfDay to String. The precision will 100ns (7 digits).
            </summary>
            <returns>string value of timeofday</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.CompareTo(System.Object)">
            <summary>
            Compares the value of this instance to a object value
            and returns an integer that indicates whether this instance is earlier than,
            the same as, or later than the object if it is a TimeOfDay.
            </summary>
            <param name="obj">The object to compare to the current instance</param>
            <returns>Value Description Less than zero This instance is earlier than value. 
            Zero This instance is the same as value.
            Greater than zero This instance is later than value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.CompareTo(Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Compares the value of this instance to a specified TimeOfDay value
            and returns an integer that indicates whether this instance is earlier than,
            the same as, or later than the specified TimeOfDay value.
            </summary>
            <param name="other">The object to compare to the current instance</param>
            <returns>Value Description Less than zero This instance is earlier than value. 
            Zero This instance is the same as value.
            Greater than zero This instance is later than value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.Parse(System.String)">
            <summary>
            Converts a specified string representation of a date to <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> with CurrentCulture format.
            </summary>
            <param name="text">A string that represent a timeofday to convert.</param>
            <returns>The <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> instance represented by text</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts a specified string representation of a date to <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>.
            </summary>
            <param name="text">A string that represent a timeofday to convert.</param>
            <param name="provider">An object that supplies culture-specific formatting information about text.</param>
            <returns>The <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> instance represented by text</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.TryParse(System.String,Microsoft.OData.Edm.Library.TimeOfDay@)">
            <summary>
            Try converts a specified string representation of a timeofday to <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> with CurrentCulture.
            </summary>
            <param name="text">A string that represent a timeofday to convert.</param>
            <param name="result">A <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> object equivalent to the date input, if the conversion succeeded
            or <see cref="F:Microsoft.OData.Edm.Library.TimeOfDay.MinValue"/>, if the conversion failed.</param>
            <returns>True if the input parameter is successfully converted; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.TimeOfDay.TryParse(System.String,System.IFormatProvider,Microsoft.OData.Edm.Library.TimeOfDay@)">
            <summary>
            Try converts a specified string representation of a timeofday to <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>.
            </summary>
            <param name="text">A string that represent a timeofday to convert.</param>
            <param name="provider">&gt;An object that supplies culture-specific formatting information about text.</param>
            <param name="result">A <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> object equivalent to the date input, if the conversion succeeded
            or <see cref="F:Microsoft.OData.Edm.Library.TimeOfDay.MinValue"/>, if the conversion failed.</param>
            <returns>True if the input parameter is successfully converted; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.TimeOfDay.Now">
            <summary>
            Gets a <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> object that is set to current time on this computer, expressed as the local time.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.TimeOfDay.Hours">
            <summary>
            Gets the hour component of the TimeOfDay represented by this instance.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.TimeOfDay.Minutes">
            <summary>
            Gets the minute component of the TimeOfDay represented by this instance.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.TimeOfDay.Seconds">
            <summary>
            Gets the second component of the TimeOfDay represented by this instance.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.TimeOfDay.Milliseconds">
            <summary>
            Gets the millisecond component of the TimeOfDay represented by this instance.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.TimeOfDay.Ticks">
            <summary>
            Gets the number of ticks that represent the value of the current TimeOfDay structure
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.PrimitiveValueConverters.PassThroughPrimitiveValueConverter">
            <summary>
            An implementation of primitive value converter that directly pass through the primitive value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.PrimitiveValueConverters.IPrimitiveValueConverter">
            <summary>
            Class for defining a primitive value conversion for a type definition.
            Suppose a type definition defines a primitive type X (underlying type) as a new type Y,
            and the type Y has a logically corresponding CLR type Z,
            the ConvertToUnderlyingType method converts value from Z to X
            and the ConvertFromUnderlyingType method converts value from X to Z.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.PrimitiveValueConverters.IPrimitiveValueConverter.ConvertToUnderlyingType(System.Object)">
            <summary>
            Converts the given primitive value from the CLR type to the underlying type defined in a type definition.
            </summary>
            <param name="value">The given CLR value.</param>
            <returns>The converted value of the underlying type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PrimitiveValueConverters.IPrimitiveValueConverter.ConvertFromUnderlyingType(System.Object)">
            <summary>
            Converts the given primitive value from the underlying type to the CLR type defined in a type definition.
            </summary>
            <param name="value">The given value of the CLR type.</param>
            <returns>The converted CLR value.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlLocation">
            <summary>
            Defines a location in a XML file.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmLocation">
            <summary>
            Represents the location of an Edm item.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmLocation.ToString">
            <summary>
            Gets a string representation of the location.
            </summary>
            <returns>A string representation of the location.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlLocation.ToString">
            <summary>
            Gets a string representation of the location.
            </summary>
            <returns>A string representation of the location.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.CsdlLocation.Source">
            <summary>
            Gets the source of the file.
            </summary>
            <remarks>
            Value 'null' means the source is unknown.
            Empty value means there is no source (e.g., constructed from in-memory string).
            Non-empty value indicates there is a certain source.
            </remarks>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.CsdlLocation.LineNumber">
            <summary>
            Gets the line number in the file.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.CsdlLocation.LinePosition">
            <summary>
            Gets the position in the line.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.EdmEnumValueParser">
            <summary>
            Internal parser to parse enum value in csdl.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmEnumValueParser.TryParseEnumMember(System.String,Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.EdmLocation,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmEnumMember}@)">
            <summary>
            Try parse enum members specified in a string value from declared schema types
            </summary>
            <param name="value">Enum value string</param>
            <param name="model">The model for resolving enum type.</param>
            <param name="location">The location of the enum member in csdl</param>
            <param name="result">Parsed enum members</param>
            <returns>True for successfully parsed, false for failed</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmEnumValueParser.IsEnumIntergeType(Microsoft.OData.Edm.IEdmEnumType)">
            <summary>
            Deterine if the underlying type of the enum type is interger type (byte, sbyte, int16, int32, int64).
            </summary>
            <param name="enumType">The enum type.</param>
            <returns>True if the underlying type of enum type is integer type.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.EdmParseException">
            <summary>
            Exception type representing a failure to parse an EDM document. Carries the set of errors along with it.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmParseException.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Csdl.EdmParseException"/> class.
            </summary>
            <param name="parseErrors">The errors encountered while parsing.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmParseException.#ctor(System.Collections.Generic.List{Microsoft.OData.Edm.Validation.EdmError})">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.OData.Edm.Csdl.EdmParseException"/> class from being created.
            </summary>
            <param name="parseErrors">The parse errors.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmParseException.ConstructMessage(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError})">
            <summary>
            Constructs an appropriate exception message from the set of parsing errors.
            </summary>
            <param name="parseErrors">The parse errors.</param>
            <returns>The exception message.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.EdmParseException.Errors">
            <summary>
            Gets the set of errors that were encountered while parsing.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.EdmxReaderSettings">
            <summary>
            Settings used when parsing Edmx document.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReaderSettings.#ctor">
            <summary>
            Default constructor for EdmxReaderSettings
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.EdmxReaderSettings.GetReferencedModelReaderFunc">
            <summary>
            The function to load referenced model xml. If null, will stop loading the referenced models. Normally it should throw no exception.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.EdmxReaderSettings.IgnoreUnexpectedAttributesAndElements">
            <summary>
            Ignore the unexpected attributes and elements in schema.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.EdmxTarget">
            <summary>
            Specifies what target of an EDMX file.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.EdmxTarget.EntityFramework">
            <summary>
            The target is Entity Framework.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.EdmxTarget.OData">
            <summary>
            The target is OData.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.EdmValueParser">
            <summary>
            Contains xml parsing methods for Edm.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.EdmValueParser.DayTimeDurationValidator">
            <summary>
            This pattern eliminates all durations with year or month fields, leaving only those with day, hour, minutes, and/or seconds fields
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.ParseDuration(System.String)">
            <summary>
            Converts a string to a TimeSpan.
            </summary>
            <param name="value">The string to be converted. The string must be an edm:Duration expression</param>
            <returns>A TimeSpan equivalent of the string.</returns>
            <exception cref="T:System.FormatException">Throws if the given string is not an edm:Duration expression</exception>
            <exception cref="T:System.OverflowException">Throws if the given duration is greater than P10675199DT2H48M5.4775807S or less than P10675199DT2H48M5.4775807S</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseBinary(System.String,System.Byte[]@)">
            <summary>
            Attempts to parse a byte[] value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The byte[] resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseBool(System.String,System.Nullable{System.Boolean}@)">
            <summary>
            Attempts to parse a bool value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The bool resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseDuration(System.String,System.Nullable{System.TimeSpan}@)">
            <summary>
            Attempts to parse a TimeSpan value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The TimeSpan resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseDateTimeOffset(System.String,System.Nullable{System.DateTimeOffset}@)">
            <summary>
            Attempts to parse a DateTimeOffset value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The DateTimeOffset resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseInt(System.String,System.Nullable{System.Int32}@)">
            <summary>
            Attempts to parse a int value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The int resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseLong(System.String,System.Nullable{System.Int64}@)">
            <summary>
            Attempts to parse a long value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The long resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseDecimal(System.String,System.Nullable{System.Decimal}@)">
            <summary>
            Attempts to parse a decimal value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The decimal resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseFloat(System.String,System.Nullable{System.Double}@)">
            <summary>
            Attempts to parse a double value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The double resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseGuid(System.String,System.Nullable{System.Guid}@)">
            <summary>
            Attempts to parse a Guid value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The Guid resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseDate(System.String,System.Nullable{Microsoft.OData.Edm.Library.Date}@)">
            <summary>
            Attempts to parse a Date value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The Date resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseTimeOfDay(System.String,System.Nullable{Microsoft.OData.Edm.Library.TimeOfDay}@)">
            <summary>
            Attempts to parse a TimeOfDay value from the specified text.
            </summary>
            <param name="value">Input string</param>
            <param name="result">The TimeOfDay resulting from parsing the string value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueParser.TryParseCharAsBinary(System.Char,System.Byte@)">
            <summary>
            Attempts to parse a byte value from the specified char.
            </summary>
            <param name="c">Input char</param>
            <param name="b">The byte resulting from parsing the char value</param>
            <returns>true if the value was parsed successfully, false otherwise</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.EdmValueWriter">
            <summary>
            Contains methods to convert primitive values to their string representation.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.EdmValueWriter.Hex">
            <summary>
            Characters used in string representations of hexadecimal values
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.PrimitiveValueAsXml(Microsoft.OData.Edm.Values.IEdmPrimitiveValue)">
            <summary>
            Converts the IEdmPrimitiveValue to a String.
            </summary>
            <param name="v">The value to convert.</param>
            <returns>A string representation of the IEdmPrimitiveValue.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.StringAsXml(System.String)">
            <summary>
            Converts the String to a String.
            </summary>
            <param name="s">The value to convert.</param>
            <returns>The value to convert.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.BinaryAsXml(System.Byte[])">
            <summary>
            Converts the Byte[] to a String.
            </summary>
            <param name="binary">The value to convert.</param>
            <returns>A string representation of the Byte[].</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.BooleanAsXml(System.Boolean)">
            <summary>
            Converts the Boolean to a String.
            </summary>
            <param name="b">The value to convert.</param>
            <returns>A string representation of the Boolean, that is, "true" or "false".</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.BooleanAsXml(System.Nullable{System.Boolean})">
            <summary>
            Converts the Boolean? to a String.
            </summary>
            <param name="b">The value to convert.</param>
            <returns>A string representation of the Boolean, that is, "true" or "false".</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.IntAsXml(System.Int32)">
            <summary>
            Converts the Int32 to a String.
            </summary>
            <param name="i">The value to convert</param>
            <returns>A string representation of the Int32.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.IntAsXml(System.Nullable{System.Int32})">
            <summary>
            Converts the Int32? to a String.
            </summary>
            <param name="i">The value to convert</param>
            <returns>A string representation of the Int32.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.LongAsXml(System.Int64)">
            <summary>
            Converts the Int64 to a String.
            </summary>
            <param name="l">The value to convert.</param>
            <returns>A string representation of the Int64.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.FloatAsXml(System.Double)">
            <summary>
            Converts the Double to a String.
            </summary>
            <param name="f">The value to convert.</param>
            <returns>A string representation of the Double.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.DecimalAsXml(System.Decimal)">
            <summary>
            Converts the Decimal to a String.
            </summary>
            <param name="d">The value to convert.</param>
            <returns>A string representation of the Decimal.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.DurationAsXml(System.TimeSpan)">
            <summary>
            Converts the TimeSpan to a String.
            </summary>
            <param name="d">The value to convert.</param>
            <returns>A string representation of the TimeSpan.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.DateTimeOffsetAsXml(System.DateTimeOffset)">
            <summary>
            Converts the DateTimeOffset to a String.
            </summary>
            <param name="d">The System.DateTimeOffset to be converted.</param>
            <returns>A System.String representation of the supplied System.DateTimeOffset.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.DateAsXml(Microsoft.OData.Edm.Library.Date)">
            <summary>
            Converts the Date to a String.
            </summary>
            <param name="d">The <see cref="T:Microsoft.OData.Edm.Library.Date"/> to be converted</param>
            <returns>A System.String representation of the supplied <see cref="T:Microsoft.OData.Edm.Library.Date"/>.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.TimeOfDayAsXml(Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Converts the TimeOfDay to a String.
            </summary>
            <param name="time">The <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> to be converted</param>
            <returns>A System.String representation of the supplied <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/>.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmValueWriter.GuidAsXml(System.Guid)">
            <summary>
            Converts the Guid to a String.
            </summary>
            <param name="g">The value to convert.</param>
            <returns>A string representation of the Guid.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlNavigationPropertyPathExpression">
            <summary>
            Represents a CSDL navigation property Path expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlPathExpression">
            <summary>
            Represents a CSDL Path expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlAbstractNavigationSource">
            <summary>
            Represents an abstract CSDL navigation source.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlNamedElement">
            <summary>
            Common base class for all named CSDL elements.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlElementWithDocumentation">
            <summary>
            Base class for CSDL elements that have documentation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlAction">
            <summary>
            Represents a CSDL Action.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperation">
            <summary>
            Represents a CSDL Operation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlFunctionBase">
            <summary>
            Represents a base class for CSDL functions and operation imports.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperation.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperationParameter},Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlTypeReference,System.Boolean,System.String,Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlDocumentation,Microsoft.OData.Edm.Csdl.CsdlLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlAction"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
            <param name="returnType">Type of the return.</param>
            <param name="isBound">if set to <c>true</c> [is bound].</param>
            <param name="entitySetPath">The entity set path.</param>
            <param name="documentation">The documentation.</param>
            <param name="location">The location.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperation.IsBound">
            <summary>
            Gets a value indicating whether this instance is bound.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperation.EntitySetPath">
            <summary>
            Gets the entity set path.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlAction.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperationParameter},Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlTypeReference,System.Boolean,System.String,Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlDocumentation,Microsoft.OData.Edm.Csdl.CsdlLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlAction"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
            <param name="returnType">The return type of the function.</param>
            <param name="isBound">if set to <c>true</c> [is bound].</param>
            <param name="entitySetPath">The entity set path.</param>
            <param name="documentation">The documentation.</param>
            <param name="location">The location in the csdl document of the function.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlActionImport">
            <summary>
            Represents a CSDL action import.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperationImport">
            <summary>
            Represents a CSDL operation import.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperationImport.SchemaOperationQualifiedTypeName">
            <summary>
            Gets the name of the schema operation qualified type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlCollectionExpression">
            <summary>
            Represents a CSDL Collection expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlEnumMember">
            <summary>
            Represents a CSDL enumeration type member.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlEnumMember.Value">
            <summary>
            Gets or sets the underlying type value of the member.
            Value can be null only during deserialization of the declaring enumeration type.
            When the type's deserialization is complete, all its members get their values assigned.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlEnumType">
            <summary>
            Represents a CSDL enumeration type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlFunction">
            <summary>
            Represents a CSDL Function.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlFunction.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperationParameter},Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlTypeReference,System.Boolean,System.String,System.Boolean,Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlDocumentation,Microsoft.OData.Edm.Csdl.CsdlLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlFunction"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
            <param name="returnType">The return type of the function.</param>
            <param name="isBound">if set to <c>true</c> [is bound].</param>
            <param name="entitySetPath">The entity set path.</param>
            <param name="isComposable">if set to <c>true</c> [is composable].</param>
            <param name="documentation">The documentation.</param>
            <param name="location">The location in the csdl document of the function.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlFunctionImport">
            <summary>
            Represents a CSDL function import.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlPropertyPathExpression">
            <summary>
            Represents a CSDL property Path expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlAnnotation">
            <summary>
            Common type for a CSDL annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlAnnotations">
            <summary>
            Represents a CSDL Annotations element.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlCollectionType">
            <summary>
            Represents a CSDL collection type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.ICsdlTypeExpression">
            <summary>
            Represents an inline type expression, such as <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlCollectionType"/> and <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlEntityReferenceType"/> 
            in the context of <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlExpressionTypeReference"/>.
            Note that nominal type declarations, such as entity, complex and primitive types, are not considered to be type expressions in the context
            of <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlExpressionTypeReference"/> - these types are handled in <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlNamedTypeReference"/>.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlConstantExpression">
            <summary>
            Represents a CSDL constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlPropertyValue">
            <summary>
            Represents a CSDL property value in an annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlRecordExpression">
            <summary>
            Represents a CSDL Record expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlSingleton">
            <summary>
            Represents a CSDL Singleton.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlPrimitiveTypeReference">
            <summary>
            Represents a reference to a CSDL primitive type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlNamedTypeReference">
            <summary>
            Represents a CSDL type reference based on a type referenced by name.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlTypeReference">
            <summary>
            Base type for the two kinds of type reference: <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlNamedTypeReference"/> and <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlExpressionTypeReference"/>.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlTypeDefinition">
            <summary>
            Represents a CSDL type definition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.UnresolvedAction">
            <summary>
            Represents information about an EDM action that failed to resolve.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.UnresolvedOperation">
            <summary>
            Represents information about an EDM operation that failed to resolve.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadElement">
            <summary>
            Represents an invalid EDM element.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmVocabularyAnnotatable">
            <summary>
            Represents an element that can be targeted by Vocabulary Annotations
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmOperation">
            <summary>
            Represents an EDM operation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmSchemaElement">
            <summary>
            Common base interface for all named children of EDM schemata.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmNamedElement">
            <summary>
            Common base interface for all named EDM elements.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmNamedElement.Name">
            <summary>
            Gets the name of this element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmSchemaElement.SchemaElementKind">
            <summary>
            Gets the kind of this schema element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmSchemaElement.Namespace">
            <summary>
            Gets the namespace this schema element belongs to.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmOperation.FindParameter(System.String)">
            <summary>
            Searches for a parameter with the given name, and returns null if no such parameter exists.
            </summary>
            <param name="name">The name of the parameter being found.</param>
            <returns>The requested parameter or null if no such parameter exists.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmOperation.ReturnType">
            <summary>
            Gets the return type of this function.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmOperation.Parameters">
            <summary>
            Gets the collection of parameters for this function.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmOperation.IsBound">
            <summary>
            Gets a value indicating whether this instance is bound.
            </summary>
            <value>
              <c>true</c> if this instance is bound; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmOperation.EntitySetPath">
            <summary>
            Gets the entity set path expression.
            </summary>
            <value>
            The entity set path expression.
            </value>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmAction">
            <summary>
            Represents an EDM action.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadEnumType">
            <summary>
            Represents a semantically invalid EDM enumeration type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmType">
            <summary>
            Represents the definition of an EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmType.TypeKind">
            <summary>
            Gets the kind of this type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEnumType">
            <summary>
            Represents a definition of an EDM enumeration type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmSchemaType">
            <summary>
            Represents an EDM type defined in an EDM schema.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEnumType.UnderlyingType">
            <summary>
            Gets the underlying type of this enumeration type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEnumType.Members">
            <summary>
            Gets the members of this enumeration type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEnumType.IsFlags">
            <summary>
            Gets a value indicating whether the enumeration type can be treated as a bit field.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.UnresolvedFunction">
            <summary>
            Represents information about an EDM function that failed to resolve.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmFunction">
            <summary>
            Represents an EDM function.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmFunction.IsComposable">
            <summary>
            Gets a value indicating whether this instance is composable.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmTerm">
            <summary>
            Term to which an annotation can bind.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmTerm.TermKind">
            <summary>
            Gets the kind of a term.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEntityType">
            <summary>
            Represents a definition of an EDM entity type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmStructuredType">
            <summary>
            Common base interface for definitions of EDM structured types.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmStructuredType.FindProperty(System.String)">
            <summary>
            Searches for a structural or navigation property with the given name in this type and all base types and returns null if no such property exists.
            </summary>
            <param name="name">The name of the property being found.</param>
            <returns>The requested property, or null if no such property exists.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmStructuredType.IsAbstract">
            <summary>
            Gets a value indicating whether this type is abstract.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmStructuredType.IsOpen">
            <summary>
            Gets a value indicating whether this type is open.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmStructuredType.BaseType">
            <summary>
            Gets the base type of this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmStructuredType.DeclaredProperties">
            <summary>
            Gets the properties declared immediately within this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEntityType.DeclaredKey">
            <summary>
            Gets the structural properties of the entity type that make up the entity key.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEntityType.HasStream">
            <summary>
            Gets the value indicating whether or not this type is a media entity.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsNavigationPropertyPathExpression">
            <summary>
            Provides semantics for a Csdl Navigation Property Path expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsPathExpression">
            <summary>
            Provides semantics for a Csdl Path expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmPathExpression">
            <summary>
            Represents an EDM path expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmPathExpression.Path">
            <summary>
            Gets the path as a decomposed qualified name. "A.B/C/D.E" is { "A.B", "C", "D.E" }.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsTypeDefinitionDefinition">
            <summary>
            Provides semantics for CsdlTypeDefinition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsTypeDefinition">
            <summary>
            Common base class for the semantics of EDM types.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmTypeDefinition">
            <summary>
            Represents a definition of an EDM type definition.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmTypeDefinition.UnderlyingType">
            <summary>
            Gets the underlying type of this type definition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsAction">
            <summary>
            Provides semantics for a CsdlAction
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsOperation">
            <summary>
            Provides semantics for a CsdlOperation
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmPathExpression">
            <summary>
            Represents an EDM path expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmPathExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmPathExpression"/> class.
            </summary>
            <param name="path">Path string containing segments seperated by '/'. For example: "A.B/C/D.E/Func1(NS.T,NS.T2)/P1".</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmPathExpression.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmPathExpression"/> class.
            </summary>
            <param name="path">Path segments.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmPathExpression.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmPathExpression"/> class.
            </summary>
            <param name="path">Path segments.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmPathExpression.Path">
            <summary>
            Gets the path as a decomposed qualified name. "A.B/C/D.E/Func1(NS.T,NS.T2)/P1" is { "A.B", "C", "D.E", "Func1(NS.T,NS.T2)", "P1" }.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmPathExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsAction.#ctor(Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsSchema,Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsAction"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="action">The action.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmOperationImport">
            <summary>
            Represents an EDM operation import.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEntityContainerElement">
            <summary>
            Represents the common elements of all EDM entity container elements.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEntityContainerElement.ContainerElementKind">
            <summary>
            Gets the kind of element of this container element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEntityContainerElement.Container">
            <summary>
            Gets the container that contains this element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmOperationImport.Operation">
            <summary>
            Gets the operation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmOperationImport.EntitySet">
            <summary>
            Gets the entity set containing entities returned by this operation import.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmEntitySetReferenceExpression">
            <summary>
            Represents an EDM entity set reference expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmEntitySetReferenceExpression">
            <summary>
            Represents an EDM entity set reference expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmEntitySetReferenceExpression.ReferencedEntitySet">
            <summary>
            Gets the referenced entity set.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmEntitySetReferenceExpression.#ctor(Microsoft.OData.Edm.IEdmEntitySet)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmEntitySetReferenceExpression"/> class.
            </summary>
            <param name="referencedEntitySet">Referenced entity set.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmEntitySetReferenceExpression.ReferencedEntitySet">
            <summary>
            Gets the referenced entity set.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmEntitySetReferenceExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmActionImport">
            <summary>
            Represents an EDM action import.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmActionImport.Action">
            <summary>
            Gets the action type of the import.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmApplyExpression">
            <summary>
            Represents an EDM function application expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmApplyExpression.AppliedOperation">
            <summary>
            Gets the applied function.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmApplyExpression.Arguments">
            <summary>
            Gets the arguments to the function.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmCastExpression">
            <summary>
            Represents an EDM type assertion expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmCastExpression.Operand">
            <summary>
            Gets the expression for which the type is asserted.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmCastExpression.Type">
            <summary>
            Gets the asserted type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsCollectionExpression">
            <summary>
            Provides semantics for a Csdl collection expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmCollectionExpression">
            <summary>
            Represents an EDM multi-value construction expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmCollectionExpression.DeclaredType">
            <summary>
            Gets the declared type of the collection, or null if there is no declared type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmCollectionExpression.Elements">
            <summary>
            Gets the constructed element values.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsDateConstantExpression">
            <summary>
            Provides semantics for a Csdl date constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmDateConstantExpression">
            <summary>
            Represents an EDM date constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmDateValue">
            <summary>
            Represents an EDM date.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmPrimitiveValue">
            <summary>
            Represents an EDM primitive value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmValue">
            <summary>
            Represents an EDM value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmValue.Type">
            <summary>
            Gets the type of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmValue.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmDateValue.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsDateTimeOffsetConstantExpression">
            <summary>
            Provides semantics for a Csdl datetime with offset constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmDateTimeOffsetConstantExpression">
            <summary>
            Represents an EDM datetime with offset constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmDateTimeOffsetValue">
            <summary>
            Represents an EDM datetime with offset value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmDateTimeOffsetValue.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsDirectValueAnnotationsManager">
            <summary>
            Provides a CSDL-specific annotations manager.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager">
            <summary>
            Direct-value annotations manager provides services for setting and getting transient annotations on elements.
            </summary>
            <remarks>
            An object representing transient annotations is in one of these states:
               1) Null, if the element has no transient annotations.
               2) An EdmAnnotation, if the element has exactly one annotation.
               3) A list of EdmAnnotation, if the element has more than one annotation.
            If the speed of annotation lookup for elements with many annotations becomes a concern, another option
            including a dictionary is possible.
            </remarks>
        </member>
        <member name="T:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager">
            <summary>
            Manages getting and setting direct value annotations on EDM elements.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager.GetDirectValueAnnotations(Microsoft.OData.Edm.IEdmElement)">
            <summary>
            Gets annotations associated with an element.
            </summary>
            <param name="element">The annotated element.</param>
            <returns>The direct value annotations for the element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager.SetAnnotationValue(Microsoft.OData.Edm.IEdmElement,System.String,System.String,System.Object)">
            <summary>
            Sets an annotation value for an EDM element. If the value is null, no annotation is added and an existing annotation with the same name is removed.
            </summary>
            <param name="element">The annotated element.</param>
            <param name="namespaceName">Namespace that the annotation belongs to.</param>
            <param name="localName">Name of the annotation within the namespace.</param>
            <param name="value">The value of the annotation.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager.SetAnnotationValues(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding})">
            <summary>
            Sets a set of annotation values. If a supplied value is null, no annotation is added and an existing annotation with the same name is removed.
            </summary>
            <param name="annotations">The annotations to set</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager.GetAnnotationValue(Microsoft.OData.Edm.IEdmElement,System.String,System.String)">
            <summary>
            Retrieves an annotation value for an EDM element. Returns null if no annotation with the given name exists for the given element.
            </summary>
            <param name="element">The annotated element.</param>
            <param name="namespaceName">Namespace that the annotation belongs to.</param>
            <param name="localName">Local name of the annotation.</param>
            <returns>Returns the annotation value that corresponds to the provided name. Returns null if no annotation with the given name exists for the given element. </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager.GetAnnotationValues(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding})">
            <summary>
            Retrieves a set of annotation values. For each requested value, returns null if no annotation with the given name exists for the given element.
            </summary>
            <param name="annotations">The set of requested annotations</param>
            <returns>Returns values that correspond to the provided annotations. A value is null if no annotation with the given name exists for the given element.</returns>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.annotationsDictionary">
            <summary>
            Keeps track of transient annotations on elements.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.annotationsDictionaryLock">
            <summary>
            Used for locking during updates to the annotations dictionary;
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.unsortedElements">
            <summary>
            Elements for which normal comparison failed to produce a valid result, arbitrarily ordered to enable stable comparisons.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.unsortedElementsLock">
            <summary>
            Used for locking during updates to the unsorted elements list.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.GetDirectValueAnnotations(Microsoft.OData.Edm.IEdmElement)">
            <summary>
            Gets annotations associated with an element.
            </summary>
            <param name="element">The annotated element.</param>
            <returns>The immediate value annotations for the element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.SetAnnotationValue(Microsoft.OData.Edm.IEdmElement,System.String,System.String,System.Object)">
            <summary>
            Sets an annotation value for an EDM element. If the value is null, no annotation is added and an existing annotation with the same name is removed.
            </summary>
            <param name="element">The annotated element.</param>
            <param name="namespaceName">Namespace that the annotation belongs to.</param>
            <param name="localName">Name of the annotation within the namespace.</param>
            <param name="value">New annotation to set.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.SetAnnotationValues(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding})">
            <summary>
            Sets a set of annotation values. If a supplied value is null, no annotation is added and an existing annotation with the same name is removed.
            </summary>
            <param name="annotations">The annotations to set</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.GetAnnotationValue(Microsoft.OData.Edm.IEdmElement,System.String,System.String)">
            <summary>
            Retrieves an annotation value for an EDM element. Returns null if no annotation with the given name exists for the given element.
            </summary>
            <param name="element">The annotated element.</param>
            <param name="namespaceName">Namespace that the annotation belongs to.</param>
            <param name="localName">Local name of the annotation.</param>
            <returns>Returns the annotation that corresponds to the provided name. Returns null if no annotation with the given name exists for the given element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.GetAnnotationValues(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding})">
            <summary>
            Retrieves a set of annotation values. For each requested value, returns null if no annotation with the given name exists for the given element.
            </summary>
            <param name="annotations">The set of requested annotations</param>
            <returns>Returns values that correspond to the provided annotations. A value is null if no annotation with the given name exists for the given element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.GetAttachedAnnotations(Microsoft.OData.Edm.IEdmElement)">
            <summary>
            Retrieves the annotations that are directly attached to an element.
            </summary>
            <param name="element">The element in question.</param>
            <returns>The annotations that are directly attached to an element (outside the control of the manager).</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationsManager.GetTransientAnnotations(Microsoft.OData.Edm.IEdmElement,Microsoft.OData.Edm.VersioningDictionary{Microsoft.OData.Edm.IEdmElement,System.Object})">
            <summary>
            Retrieves the transient annotations for an EDM element.
            </summary>
            <param name="element">The annotated element.</param>
            <param name="annotationsDictionary">The dictionary for looking up the element's annotations.</param>
            <returns>The transient annotations for the element, in a form managed by the annotations manager.</returns>
            <remarks>This method is static to guarantee that the annotations dictionary is not fetched more than once per lookup operation.</remarks>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsFunction">
            <summary>
            Provides semantics for a CsdlAction
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmFunctionImport">
            <summary>
            Represents an EDM function import.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmFunctionImport.IncludeInServiceDocument">
            <summary>
            Gets a value indicating whether [include in service document].
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmFunctionImport.Function">
            <summary>
            Gets the function that defines the function import.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsNavigationSource">
            <summary>
            Provides semantics for CsdlAbstractNavigationSource.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmNavigationSource">
            <summary>
            Represents an EDM navigation source.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmNavigationSource.FindNavigationTarget(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Finds the navigation source that a navigation property targets.
            </summary>
            <param name="navigationProperty">The navigation property.</param>
            <returns>The navigation source that the navigation propertion targets</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmNavigationSource.NavigationPropertyBindings">
            <summary>
            Gets the navigation property bindings of this navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmNavigationSource.Path">
            <summary>
            Gets the path of this navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmNavigationSource.Type">
            <summary>
            Gets the type of this navigation source.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmOperationReferenceExpression">
            <summary>
            Represents an EDM operation reference expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmOperationReferenceExpression.ReferencedOperation">
            <summary>
            Gets the referenced operation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsGuidConstantExpression">
            <summary>
            Provides semantics for a Csdl guid constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmGuidConstantExpression">
            <summary>
            Represents an EDM guid constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmGuidValue">
            <summary>
            Represents an EDM integer value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmGuidValue.Value">
            <summary>
            Gets the definition of this guid value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsBinaryConstantExpression">
            <summary>
            Provides semantics for a Csdl binary constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmBinaryConstantExpression">
            <summary>
            Represents an EDM binary constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmBinaryValue">
            <summary>
            Represents an EDM binary value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmBinaryValue.Value">
            <summary>
            Gets the definition of this binary value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmIfExpression">
            <summary>
            Represents an EDM if expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmIfExpression.TestExpression">
            <summary>
            Gets the test expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmIfExpression.TrueExpression">
            <summary>
            Gets the expression to evaluate if <see cref="P:Microsoft.OData.Edm.Expressions.IEdmIfExpression.TestExpression"/> evaluates to true.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmIfExpression.FalseExpression">
            <summary>
            Gets the expression to evaluate if <see cref="P:Microsoft.OData.Edm.Expressions.IEdmIfExpression.TestExpression"/> evaluates to false.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmIsTypeExpression">
            <summary>
            Represents an EDM type test expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmIsTypeExpression.Operand">
            <summary>
            Gets the expression whose type is to be tested.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmIsTypeExpression.Type">
            <summary>
            Gets the type to be tested against.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmLabeledExpression">
            <summary>
            Represents an EDM labeled expression element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmLabeledExpression.Expression">
            <summary>
            Gets the underlying expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmLabeledExpressionReferenceExpression">
            <summary>
            Represents a reference to an EDM labeled expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmLabeledExpressionReferenceExpression.ReferencedLabeledExpression">
            <summary>
            Gets the referenced expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsDirectValueAnnotation">
            <summary>
            Provides semantics for a CsdlDirectValueAnnotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotation">
            <summary>
            Represents an EDM annotation with an immediate value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotation.NamespaceUri">
            <summary>
            Gets the namespace Uri of the annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotation.Value">
            <summary>
            Gets the value of this annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsEnumMember">
            <summary>
            Provides semantics for a CsdlEnumMember.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEnumMember">
            <summary>
            Represents a definition of an EDM enumeration type member.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEnumMember.Value">
            <summary>
            Gets the value of this enumeration type member.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEnumMember.DeclaringType">
            <summary>
            Gets the type that this member belongs to.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsEnumTypeDefinition">
            <summary>
            Provides semantics for CsdlEnumType.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlTerm">
            <summary>
            Represents a CSDL term.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsAnnotations">
            <summary>
            Provides semantics for an out-of-line CSDL Annotations.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsBooleanConstantExpression">
            <summary>
            Provides semantics for a Csdl Bool constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmBooleanConstantExpression">
            <summary>
            Represents an EDM boolean constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmBooleanValue">
            <summary>
            Represents an EDM boolean value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmBooleanValue.Value">
            <summary>
            Gets a value indicating whether the value of this boolean value is true or false.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsCollectionTypeDefinition">
            <summary>
            Provides semantics for CsdlCollectionType.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmCollectionType">
            <summary>
            Represents a definition of an EDM collection type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmCollectionType.ElementType">
            <summary>
            Gets the element type of this collection.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsTypeExpression">
            <summary>
            Provides semantics for <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlExpressionTypeReference"/>.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmTypeReference">
            <summary>
            Represents a references to a type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmTypeReference.IsNullable">
            <summary>
            Gets a value indicating whether this type is nullable.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmTypeReference.Definition">
            <summary>
            Gets the definition to which this type refers.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmCollectionTypeReference">
            <summary>
            Represents references to EDM Collection types.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsDecimalConstantExpression">
            <summary>
            Provides semantics for a Csdl Decimal constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmDecimalConstantExpression">
            <summary>
            Represents an EDM decimal constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmDecimalValue">
            <summary>
            Represents an EDM decimal value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmDecimalValue.Value">
            <summary>
            Gets the definition of this decimal value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsFloatingConstantExpression">
            <summary>
            Provides semantics for a Csdl Float constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmFloatingConstantExpression">
            <summary>
            Represents an EDM floating constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmFloatingValue">
            <summary>
            Represents an EDM floating point value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmFloatingValue.Value">
            <summary>
            Gets the definition of this floating value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsIntConstantExpression">
            <summary>
            Provides semantics for a Csdl Int constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmIntegerConstantExpression">
            <summary>
            Represents an EDM integer constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmIntegerValue">
            <summary>
            Represents an EDM integer value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmIntegerValue.Value">
            <summary>
            Gets the definition of this integer value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsNamedTypeReference">
            <summary>
            Provides semantics for CsdlNamedTypeReference.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsNullExpression">
            <summary>
            Provides semantics for a Csdl null constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmNullExpression">
            <summary>
            Represents an EDM null expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmNullValue">
            <summary>
            Represents an EDM null value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmParameterReferenceExpression">
            <summary>
            Represents an EDM parameter reference expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmParameterReferenceExpression.ReferencedParameter">
            <summary>
            Gets the referenced parameter.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsPropertyConstructor">
            <summary>
            Provides semantics for a CsdlPropertyValue used in a record expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmPropertyConstructor">
            <summary>
            Represents an EDM property constructor specified as part of a EDM construction record expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmPropertyConstructor.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmPropertyConstructor.Value">
            <summary>
            Gets the expression for the value of the property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsPropertyPathExpression">
            <summary>
            Provides semantics for a Csdl Property Path expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmPropertyReferenceExpression">
            <summary>
            Represents an EDM property reference expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmPropertyReferenceExpression.Base">
            <summary>
            Gets the expression for the structured value containing the referenced property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmPropertyReferenceExpression.ReferencedProperty">
            <summary>
            Gets the referenced property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsRecordExpression">
            <summary>
            Provides semantics for a Csdl Record expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmRecordExpression">
            <summary>
            Represents an EDM record construction expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmRecordExpression.DeclaredType">
            <summary>
            Gets the declared type of the record, or null if there is no declared type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmRecordExpression.Properties">
            <summary>
            Gets the constructed property values.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsSingleton">
            <summary>
            Provides semantics for CsdlSingleton.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmSingleton">
            <summary>
            Represents an EDM singleton.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsPrimitiveTypeReference">
            <summary>
            Provides the semantics of a reference to an EDM primitive type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmPrimitiveTypeReference">
            <summary>
            Represents references to primitive types.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsPrimitiveTypeReference.definition">
            <summary>
            This doesn't need the full caching mechanism because the computation is cheap, and the likelyhood of computing a primitive type reference without needing its definition is remote.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmSpatialTypeReference">
            <summary>
            Represents a reference to an EDM spatial type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmSpatialTypeReference.SpatialReferenceIdentifier">
            <summary>
            Gets the Spatial Reference Identifier of this spatial type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsStringConstantExpression">
            <summary>
            Provides semantics for a Csdl String constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmStringConstantExpression">
            <summary>
            Represents an EDM string constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmStringValue">
            <summary>
            Represents an EDM string value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmStringValue.Value">
            <summary>
            Gets the definition of this string value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsTimeOfDayConstantExpression">
            <summary>
            Provides semantics for a Csdl TimeOfDay constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmTimeOfDayConstantExpression">
            <summary>
            Represents an EDM TimeOfDay constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmTimeOfDayValue">
            <summary>
            Represents an EDM TimeOfDay value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmTimeOfDayValue.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsDurationConstantExpression">
            <summary>
            Provides semantics for a Csdl duration constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmDurationConstantExpression">
            <summary>
            Represents an EDM duration constant expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmDurationValue">
            <summary>
            Represents an EDM duration value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmDurationValue.Value">
            <summary>
            Gets the definition of this duration value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsVocabularyAnnotation">
            <summary>
            Common base class for CsdlSemanticsTypeAnnotation and CsdlSemanticsValueAnnotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation">
            <summary>
            Represents an EDM vocabulary annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation.Qualifier">
            <summary>
            Gets the qualifier used to discriminate between multiple bindings of the same property or type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation.Term">
            <summary>
            Gets the term bound by the annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation.Target">
            <summary>
            Gets the element the annotation applies to.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsVocabularyAnnotation.TargetBindingContext">
            <summary>
            Gets the type to use as a binding context for expressions in the annotation. If the target of the annotation
            is an entity type, that is the binding context. If the target is an entity set or singleton, the binding context is the
            element type of the set or singleton.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsValueAnnotation">
            <summary>
            Provides semantics for a CsdlAnnotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Annotations.IEdmValueAnnotation">
            <summary>
            Represents an EDM value annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmValueAnnotation.Value">
            <summary>
            Gets the expression producing the value of the annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsValueTerm">
            <summary>
            Provides semantics for a CsdlTerm.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmValueTerm">
            <summary>
            Represents an EDM value term.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmValueTerm.Type">
            <summary>
            Gets the type of this term.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmValueTerm.AppliesTo">
            <summary>
            Gets the AppliesTo of this term.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmValueTerm.DefaultValue">
            <summary>
            Gets the DefaultValue of this term.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Serialization.EdmModelReferenceElementsVisitor">
            <summary>
            The visitor for outputing &lt;edmx:referneced&gt; elements for referenced model.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.Serialization.SerializationValidator.TypeReferenceTargetMustHaveValidName">
            <summary>
            Validates that a type reference refers to a type that can be represented in CSDL.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.Serialization.SerializationValidator.EntityReferenceTargetMustHaveValidName">
            <summary>
            Validates that a type reference refers to a type that can be represented in CSDL.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.Serialization.SerializationValidator.EntitySetTypeMustHaveValidName">
            <summary>
            Validates that an entity set refers to a type that can be represented in CSDL.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.Serialization.SerializationValidator.StructuredTypeBaseTypeMustHaveValidName">
            <summary>
            Validates that a structured type's base type can be represented in CSDL.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.Serialization.SerializationValidator.VocabularyAnnotationOutOfLineMustHaveValidTargetName">
            <summary>
            Validates that vocabulary annotations serialized out of line have a serializable target name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.Serialization.SerializationValidator.VocabularyAnnotationMustHaveValidTermName">
            <summary>
            Validates that vocabulary annotations have a serializable term name.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.EdmVocabularyAnnotationSerializationLocation">
            <summary>
            Represents whether a vocabulary annotation should be serialized within the element it applies to or in a seperate section of the CSDL.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.EdmVocabularyAnnotationSerializationLocation.Inline">
            <summary>
            The annotation should be serialized within the element being annotated.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.EdmVocabularyAnnotationSerializationLocation.OutOfLine">
            <summary>
            The annotation should be serialized in a seperate section.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods">
            <summary>
            Contains extension methods for <see cref="T:Microsoft.OData.Edm.IEdmModel"/> interfaces that are useful to serialization.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.GetEdmxVersion(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets the value for the EDMX version of the <paramref name="model"/>.
            </summary>
            <param name="model">Model the version has been set for.</param>
            <returns>The version.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.SetEdmxVersion(Microsoft.OData.Edm.IEdmModel,System.Version)">
            <summary>
            Sets a value of EDMX version attribute of the <paramref name="model"/>.
            </summary>
            <param name="model">The model the version should be set for.</param>
            <param name="version">The version.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.SetNamespacePrefixMappings(Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Sets an annotation on the IEdmModel to notify the serializer of preferred prefix mappings for xml namespaces.
            </summary>
            <param name="model">Reference to the calling object.</param>
            <param name="mappings">XmlNamespaceManage containing mappings between namespace prefixes and xml namespaces.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.GetNamespacePrefixMappings(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets the preferred prefix mappings for xml namespaces from an IEdmModel
            </summary>
            <param name="model">Reference to the calling object.</param>
            <returns>Namespace prefixes that exist on the model.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.SetSerializationLocation(Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation,Microsoft.OData.Edm.IEdmModel,System.Nullable{Microsoft.OData.Edm.Csdl.EdmVocabularyAnnotationSerializationLocation})">
            <summary>
            Sets the location an annotation should be serialized in.
            </summary>
            <param name="annotation">The annotation the location is being specified for.</param>
            <param name="model">Model containing the annotation.</param>
            <param name="location">The location the annotation should appear.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.GetSerializationLocation(Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets the location an annotation should be serialized in.
            </summary>
            <param name="annotation">Reference to the calling annotation.</param>
            <param name="model">Model containing the annotation.</param>
            <returns>The location the annotation should be serialized at.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.SetSchemaNamespace(Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation,Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Sets the schema an annotation should appear in.
            </summary>
            <param name="annotation">The annotation the schema should be set for.</param>
            <param name="model">Model containing the annotation.</param>
            <param name="schemaNamespace">The schema the annotation belongs in.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.GetSchemaNamespace(Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets the schema an annotation should be serialized in.
            </summary>
            <param name="annotation">Reference to the calling annotation.</param>
            <param name="model">Model containing the annotation.</param>
            <returns>Name of the schema the annotation belongs to.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.SetIsValueExplicit(Microsoft.OData.Edm.IEdmEnumMember,Microsoft.OData.Edm.IEdmModel,System.Nullable{System.Boolean})">
            <summary>
            Sets an annotation indicating whether the value of an enum member should be explicitly serialized.
            </summary>
            <param name="member">Member to set the annotation on.</param>
            <param name="model">Model containing the member.</param>
            <param name="isExplicit">If the value of the enum member should be explicitly serialized</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.IsValueExplicit(Microsoft.OData.Edm.IEdmEnumMember,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets an annotation indicating whether the value of an enum member should be explicitly serialized.
            </summary>
            <param name="member">The member the annotation is on.</param>
            <param name="model">Model containing the member.</param>
            <returns>Whether the member should have its value serialized.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.SetIsSerializedAsElement(Microsoft.OData.Edm.Values.IEdmValue,Microsoft.OData.Edm.IEdmModel,System.Boolean)">
            <summary>
            Sets an annotation indicating if the value should be serialized as an element.
            </summary>
            <param name="value">Value to set the annotation on.</param>
            <param name="model">Model containing the value.</param>
            <param name="isSerializedAsElement">Value indicating if the value should be serialized as an element.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.IsSerializedAsElement(Microsoft.OData.Edm.Values.IEdmValue,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets an annotation indicating if the value should be serialized as an element.
            </summary>
            <param name="value">Value the annotation is on.</param>
            <param name="model">Model containing the value.</param>
            <returns>Value indicating if the string should be serialized as an element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.SetNamespaceAlias(Microsoft.OData.Edm.IEdmModel,System.String,System.String)">
            <summary>
            Sets the serialization alias for a given namespace(including current model's schemas namespace-alias, and referenced models' schemas namespace-alias)
            TODO: REF make sure no duplicated alias.
            </summary>
            <param name="model">Model that will be serialized.</param>
            <param name="namespaceName">The namespace to set the alias for.</param>
            <param name="alias">The alias for that namespace.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.GetNamespaceAlias(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Gets the serialization alias for a given namespace.
            </summary>
            <param name="model">Model that will be serialized.</param>
            <param name="namespaceName">Namespace the alias is needed for.</param>
            <returns>The alias of the given namespace, or null if one does not exist.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.SerializationExtensionMethods.GetUsedNamespacesHavingAlias(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets the namespaces in all schemas having alias, excluding those without alias.
            </summary>
            <param name="model">The IEdmModel.</param>
            <returns>The namespaces in all schemas having alias.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperationReturnType">
            <summary>
            Represents a CSDL function return type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.EdmxReader">
            <summary>
            Provides EDMX parsing services for EDM models.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.EdmxReader.targetParsed">
            <summary>
            True when either Runtime or DataServices node have been processed.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.EdmxReader.ignoreUnexpectedAttributesAndElements">
            <summary>
            Ignore the unexpected attributes and elements.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.EdmxReader.source">
            <summary>
            Indicates where the document comes from.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.#ctor(System.Xml.XmlReader,System.Func{System.Uri,System.Xml.XmlReader})">
            <summary>
            Construcotr
            </summary>
            <param name="reader">the XmlReader for current Edm doc</param>
            <param name="getReferencedModelReaderFunc">The function to load referenced model xml. If null, will stop loading the referenced model.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.TryParse(System.Xml.XmlReader,Microsoft.OData.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Tries parsing the given EDMX artifact for an IEdmModel.
            </summary>
            <param name="reader">XmlReader containing the EDMX artifact.</param>
            <param name="model">The model generated by parsing</param>
            <param name="errors">Errors reported while parsing.</param>
            <returns>Success of the parse operation.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.TryParse(System.Xml.XmlReader,System.Boolean,Microsoft.OData.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Tries parsing the given EDMX artifact for an IEdmModel.
            </summary>
            <param name="reader">XmlReader containing the EDMX artifact.</param>
            <param name="ignoreUnexpectedAttributesAndElements">Ignore the unexpected attributes and elements in schema.</param>
            <param name="model">The model generated by parsing</param>
            <param name="errors">Errors reported while parsing.</param>
            <returns>Success of the parse operation.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.Parse(System.Xml.XmlReader)">
            <summary>
            Returns an IEdmModel for the given EDMX artifact.
            </summary>
            <param name="reader">XmlReader containing the EDMX artifact.</param>
            <returns>The model generated by parsing.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.TryParse(System.Xml.XmlReader,System.Func{System.Uri,System.Xml.XmlReader},Microsoft.OData.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Tries parsing the given EDMX artifact for an IEdmModel.
            </summary>
            <param name="reader">XmlReader containing the EDMX artifact.</param>
            <param name="getReferencedModelReaderFunc">The function to load referenced model xml. If null, will stop loading the referenced models. Normally it should throw no exception.</param>
            <param name="model">The model generated by parsing</param>
            <param name="errors">Errors reported while parsing.</param>
            <remarks>If getReferencedModelReaderFunc throws exception, it won't be caught internally but will be thrown out for caller to handle.</remarks>
            <returns>Success of the parse operation.</returns>
            <remarks>
            User should handle the disposal of XmlReader created by getReferencedModelReaderFunc.
            </remarks>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.TryParse(System.Xml.XmlReader,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmModel},Microsoft.OData.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Tries parsing the given EDMX artifact for an IEdmModel.
            </summary>
            <param name="reader">XmlReader containing the EDMX artifact.</param>
            <param name="references">Models to be referenced by the created model.</param>
            <param name="model">The model generated by parsing</param>
            <param name="errors">Errors reported while parsing.</param>
            <returns>Success of the parse operation.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.TryParse(System.Xml.XmlReader,Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Tries parsing the given EDMX artifact for an IEdmModel.
            </summary>
            <param name="reader">XmlReader containing the EDMX artifact.</param>
            <param name="reference">Model to be referenced by the created model.</param>
            <param name="model">The model generated by parsing</param>
            <param name="errors">Errors reported while parsing.</param> 
            <returns>Success of the parse operation.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.Parse(System.Xml.XmlReader,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmModel})">
            <summary>
            Returns an IEdmModel for the given EDMX artifact.
            </summary>
            <param name="reader">XmlReader containing the EDMX artifact.</param>
            <param name="referencedModels">Models to be referenced by the created model.</param>
            <returns>The model generated by parsing.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.Parse(System.Xml.XmlReader,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Returns an IEdmModel for the given EDMX artifact.
            </summary>
            <param name="reader">XmlReader containing the EDMX artifact.</param>
            <param name="referencedModel">Model to be referenced by the created model.</param>
            <returns>The model generated by parsing.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.Parse(System.Xml.XmlReader,System.Func{System.Uri,System.Xml.XmlReader})">
            <summary>
            Returns an IEdmModel for the given EDMX artifact.
            </summary>
            <param name="reader">XmlReader containing the EDMX artifact.</param>
            <param name="getReferencedModelReaderFunc">The function to load referenced model xml. If null, will stop loading the referenced model.</param>
            <returns>The model generated by parsing.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.TryParse(System.Xml.XmlReader,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmModel},Microsoft.OData.Edm.Csdl.EdmxReaderSettings,Microsoft.OData.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Tries parsing the given EDMX artifact for an IEdmModel.
            </summary>
            <param name="reader">XmlReader containing the EDMX artifact.</param>
            <param name="references">Models to be referenced by the created model.</param>
            <param name="settings">EdmxReader settings for current parser.</param>
            <param name="model">The model generated by parsing</param>
            <param name="errors">Errors reported while parsing.</param>
            <remarks>If getReferencedModelReaderFunc throws exception, it won't be caught internally but will be thrown out for caller to handle.</remarks>
            <returns>Success of the parse operation.</returns>
            <remarks>
            User should handle the disposal of XmlReader created by getReferencedModelReaderFunc.
            </remarks>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.TryParseVersion(System.String,System.Version@)">
            <summary>
            <see cref="T:System.Version"/>TryParse does not exist on all platforms, so implementing it here.
            </summary>
            <param name="input">Input string.</param>
            <param name="version">Parsed version.</param>
            <returns>False in case of failure.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.LoadAndParseReferencedEdmxFiles(System.Version)">
            <summary>
            Load and parse the referenced model but ignored any further referenced model.
            </summary>
            <param name="mainEdmxVersion">The main edm version.</param>
            <returns>A list of CsdlModel (no semantics) of the referenced models.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.TryParseEdmxFileToCsdlModel(System.Version@,Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlModel@)">
            <summary>
            Parse Edm xml doc into CsdlModel, error messages are stored in this.errors.
            </summary>
            <param name="edmxVersion">The edmxVersion out.</param>
            <param name="csdlModel">The CsdlModel out.</param>
            <returns>Ture if succeeded.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.HasIntolerableError">
            <summary>
            Determine if there is any error that could not be ignored.
            </summary>
            <returns>True if there is any error that could not be ignored.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.ParseElement(System.String,System.Collections.Generic.Dictionary{System.String,System.Action})">
            <summary>
            All parse functions start with the reader pointing at the start tag of an element, and end after consuming the ending tag for the element.
            </summary>
            <param name="elementName">The current element name to be parsed.</param>
            <param name="elementParsers">The parsers for child elements of the current element.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxReader.ParseReferenceElement">
            <summary>
            TODO: use XmlDocumentParser
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.EdmxWriter">
            <summary>
            Provides EDMX serialization services for EDM models.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.EdmxWriter.TryWriteEdmx(Microsoft.OData.Edm.IEdmModel,System.Xml.XmlWriter,Microsoft.OData.Edm.Csdl.EdmxTarget,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Outputs an EDMX artifact to the provided XmlWriter.
            </summary>
            <param name="model">Model to be written.</param>
            <param name="writer">XmlWriter the generated EDMX will be written to.</param>
            <param name="target">Target implementation of the EDMX being generated.</param>
            <param name="errors">Errors that prevented successful serialization, or no errors if serialization was successfull. </param>
            <returns>A value indicating whether serialization was successful.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEntityReferenceTypeReference">
            <summary>
            Represents references to entity reference types.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.Serialization.EdmModelSchemaSeparationSerializationVisitor.ProcessEntityContainer(Microsoft.OData.Edm.IEdmEntityContainer)">
            <summary>
            When we see an entity container, we see if it has <see cref="F:Microsoft.OData.Edm.Csdl.CsdlConstants.SchemaNamespaceAnnotation"/>.
            If it does, then we attach it to that schema, otherwise we attached to the first existing schema.
            If there are no schemas, we create the one named "Default" and attach container to it.
            </summary>
            <param name="element">The entity container being processed.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.PrimitiveValueConverters.DefaultPrimitiveValueConverter">
            <summary>
            The default implementation of primitive value converter for unsigned ints, which:
                converts UInt16 to Int32,
                converts UInt32 to Int64,
                converts UInt64 to Decimal.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmToClrConversion.TryCreateObjectInstance">
            <summary>
            Represents a delegate for creating an instance of CLR type based on <see cref="T:Microsoft.OData.Edm.Values.IEdmValue"/> and <see cref="T:System.Type"/>.
            The delegate can be used to create CLR instances of polymorphic types.
            </summary>
            <param name="edmValue">The <see cref="T:Microsoft.OData.Edm.Values.IEdmStructuredValue"/> for which the <paramref name="objectInstance"/> needs to be created.</param>
            <param name="clrType">The expected CLR type of the object instance. In case of polymorphic properties and collections this may be a base type.</param>
            <param name="converter">The converter instance calling this delegate.</param>
            <param name="objectInstance">The output parameter returning a CLR object instance created for the <paramref name="edmValue"/>.</param>
            <param name="objectInstanceInitialized">The output parameter returning true if all properties of the created <paramref name="objectInstance"/> are initialized.
            False if properties of the created instance should be initialized using the default <see cref="T:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter"/> logic.</param>
            <returns>True if the delegate produced a desired <paramref name="objectInstance"/>.
            If delegate returns false, the default <see cref="T:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter"/> logic will be applied to create and populate a CLR object instance.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmToClrConversion.TryGetClrPropertyInfo">
            <summary>
            Represents a delegate to get property info of a CLR type based on the property name and <see cref="T:System.Type"/>.
            </summary>
            <param name="clrType">The CLR type which contains the property info.</param>
            <param name="edmName">The property name which might be server side name or client side name.</param>
            <param name="propertyInfo">The output parameter returning a PropertyInfo.</param>
            <returns>True if the delegate find the property, else false.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmToClrConversion.TryGetClrTypeName">
            <summary>
            Represents a delegate to get CLR type name based on the edm type name and <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.
            </summary>
            <param name="edmModel">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> used to find the type name.</param>
            <param name="edmTypeName">The edm type name.</param>
            <param name="clrTypeName">The output parameter returning a CLR type name.</param>
            <returns>True if the delegate find the type name, else false.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter">
            <summary>
            <see cref="T:Microsoft.OData.Edm.Values.IEdmValue"/> to CLR value converter.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.#ctor(Microsoft.OData.Edm.EdmToClrConversion.TryCreateObjectInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter"/> class.
            </summary>
            <param name="tryCreateObjectInstanceDelegate">The delegate customizing conversion of structured values.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.#ctor(Microsoft.OData.Edm.EdmToClrConversion.TryCreateObjectInstance,Microsoft.OData.Edm.EdmToClrConversion.TryGetClrPropertyInfo,Microsoft.OData.Edm.EdmToClrConversion.TryGetClrTypeName)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter"/> class.
            </summary>
            <param name="tryCreateObjectInstanceDelegate">The delegate customizing conversion of structured values.</param>
            <param name="tryGetClrPropertyInfoDelegate">The delegate customizing the behavior to get client CLR property info</param>
            <param name="tryGetClrTypeNameDelegate">The delegate customizing the behavior to get client CLR type name</param>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrValue``1(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a CLR value of the specified type.
            Supported values for <typeparamref name="T"/> are: 
                CLR primitive types such as <see cref="T:System.String"/> and <see cref="T:System.Int32"/>,
                CLR enum types,
                <see cref="T:System.Collections.Generic.IEnumerable`1"/>,
                <see cref="T:System.Collections.Generic.ICollection`1"/>,
                <see cref="T:System.Collections.Generic.IList`1"/>,
                CLR classes with default constructors and public properties with setters and collection properties of the following shapes:
                <see cref="T:System.Collections.Generic.IEnumerable`1"/> EnumerableProperty  { get; set; },
                <see cref="T:System.Collections.Generic.ICollection`1"/> CollectionProperty  { get; set; },
                <see cref="T:System.Collections.Generic.IList`1"/> ListProperty  { get; set; },
                <see cref="T:System.Collections.Generic.ICollection`1"/> CollectionProperty { get { return this.nonNullCollection; } },
                <see cref="T:System.Collections.Generic.IList`1"/> ListProperty { get { return this.nonNullList; } }.
            </summary>
            <typeparam name="T">The CLR type.</typeparam>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>A CLR value converted from <paramref name="edmValue"/>.</returns>
            <remarks>This method performs boxing and unboxing for value types. Use value-type specific methods such as <see cref="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrString(Microsoft.OData.Edm.Values.IEdmValue)"/> to avoid boxing and unboxing.</remarks>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrValue(Microsoft.OData.Edm.Values.IEdmValue,System.Type)">
            <summary>
            Converts <paramref name="edmValue"/> to a CLR value of the specified type.
            Supported values for <paramref name="clrType"/> are: 
                CLR primitive types such as <see cref="T:System.String"/> and <see cref="T:System.Int32"/>,
                CLR enum types,
                <see cref="T:System.Collections.Generic.IEnumerable`1"/>,
                <see cref="T:System.Collections.Generic.ICollection`1"/>,
                <see cref="T:System.Collections.Generic.IList`1"/>,
                CLR classes with default constructors and public properties with setters and collection properties of the following shapes:
                <see cref="T:System.Collections.Generic.IEnumerable`1"/> EnumerableProperty  { get; set; },
                <see cref="T:System.Collections.Generic.ICollection`1"/> CollectionProperty  { get; set; },
                <see cref="T:System.Collections.Generic.IList`1"/> ListProperty  { get; set; },
                <see cref="T:System.Collections.Generic.ICollection`1"/> CollectionProperty { get { return this.nonNullCollection; } },
                <see cref="T:System.Collections.Generic.IList`1"/> ListProperty { get { return this.nonNullList; } }.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <param name="clrType">The CLR type.</param>
            <returns>A CLR value converted from <paramref name="edmValue"/>.</returns>
            <remarks>This method performs boxing and unboxing for value types. Use value-type specific methods such as <see cref="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrString(Microsoft.OData.Edm.Values.IEdmValue)"/> to avoid boxing and unboxing.</remarks>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.RegisterConvertedObject(Microsoft.OData.Edm.Values.IEdmStructuredValue,System.Object)">
            <summary>
            Registers the <paramref name="clrObject"/> corresponding to the <paramref name="edmValue"/>.
            All subsequent conversions from this <paramref name="edmValue"/> performed by this instance of <see cref="T:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter"/> will return the specified
            <paramref name="clrObject"/>. Registration is required to support graph consistency and loops during conversion process. 
            This method should be called inside the <see cref="T:Microsoft.OData.Edm.EdmToClrConversion.TryCreateObjectInstance"/> delegate if the delegate is calling back into <see cref="T:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter"/>
            in order to populate properties of the <paramref name="clrObject"/>.
            </summary>
            <param name="edmValue">The EDM value.</param>
            <param name="clrObject">The CLR object.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrByteArray(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a CLR byte array value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted byte array.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmBinaryValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrString(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.String"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted string.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmStringValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrBoolean(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted boolean.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmBooleanValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrInt64(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted integer.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmIntegerValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrChar(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.Char"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted char.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmIntegerValue"/>.</exception>
            <exception cref="T:System.OverflowException">Exception is thrown if <paramref name="edmValue"/> cannot be converted to <see cref="T:System.Char"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrByte(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted byte.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmIntegerValue"/>.</exception>
            <exception cref="T:System.OverflowException">Exception is thrown if <paramref name="edmValue"/> cannot be converted to <see cref="T:System.Byte"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrInt16(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted integer.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmIntegerValue"/>.</exception>
            <exception cref="T:System.OverflowException">Exception is thrown if <paramref name="edmValue"/> cannot be converted to <see cref="T:System.Int16"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrInt32(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted integer.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmIntegerValue"/>.</exception>
            <exception cref="T:System.OverflowException">Exception is thrown if <paramref name="edmValue"/> cannot be converted to <see cref="T:System.Int32"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrDouble(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.Double"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted double.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmFloatingValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrSingle(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.Single"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted single.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmFloatingValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrTimeOfDay(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:Microsoft.OData.Edm.Library.TimeOfDay"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted TimeOfDay.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmTimeOfDayValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrDate(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:Microsoft.OData.Edm.Library.Date"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted date.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmDateValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrDecimal(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted decimal.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmDecimalValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrDuration(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted Duration.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmDurationValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrGuid(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.Guid"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted Guid.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmGuidValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.AsClrDateTimeOffset(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Converts <paramref name="edmValue"/> to a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="edmValue">The EDM value to be converted.</param>
            <returns>Converted DateTimeOffset.</returns>
            <exception cref="T:System.InvalidCastException">Exception is thrown if <paramref name="edmValue"/> is not <see cref="T:Microsoft.OData.Edm.Values.IEdmDateTimeOffsetValue"/>.</exception>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.FindProperty(System.Type,System.String)">
            <summary>
            Searches the <paramref name="clrObjectType"/> for a property with the <paramref name="propertyName"/>.
            Handles the case of multiple properties with the same name (declared via C# "new") by choosing the one on the deepest derived type.
            </summary>
            <param name="clrObjectType">The clr object type.</param>
            <param name="propertyName">The property name.</param>
            <returns>The property or null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.GetEdmValueInterfaceName(Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Used for error messages only.
            </summary>
            <param name="edmValue">The EDM value.</param>
            <returns>The EDM value interface name.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.TryGetClrTypeNameDelegate">
            <summary>
            The delegate to get the CLR type name.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmToClrConversion.EdmToClrConverter.CastHelper">
            <summary>
            The class contains method that are called thru reflection to produce values of correct CLR types.
            For example if one has an int value and a clr type represnting an enum : int, there is no other way to convert the int
            to the enum type object.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator">
            <summary>
            Expression evaluator capable of producing CLR values.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator">
            <summary>
            Expression evaluator.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator.#ctor(System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmOperation,System.Func{Microsoft.OData.Edm.Values.IEdmValue[],Microsoft.OData.Edm.Values.IEdmValue}})">
            <summary>
            Initializes a new instance of the EdmExpressionEvaluator class.
            </summary>
            <param name="builtInFunctions">Builtin functions dictionary to the evaluators for the functions.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator.#ctor(System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmOperation,System.Func{Microsoft.OData.Edm.Values.IEdmValue[],Microsoft.OData.Edm.Values.IEdmValue}},System.Func{System.String,Microsoft.OData.Edm.Values.IEdmValue[],Microsoft.OData.Edm.Values.IEdmValue})">
            <summary>
            Initializes a new instance of the EdmExpressionEvaluator class.
            </summary>
            <param name="builtInFunctions">Builtin functions dictionary to the evaluators for the functions.</param>
            <param name="lastChanceOperationApplier">Function to call to evaluate an application of a function with no static binding.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator.Evaluate(Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Evaluates an expression with no value context.
            </summary>
            <param name="expression">Expression to evaluate. The expression must not contain paths, because no context for evaluating a path is supplied.</param>
            <returns>The value that results from evaluating the expression in the context of the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator.Evaluate(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.Values.IEdmStructuredValue)">
            <summary>
            Evaluates an expression in the context of a value.
            </summary>
            <param name="expression">Expression to evaluate.</param>
            <param name="context">Value to use as context in evaluating the expression. Cannot be null if the expression contains paths.</param>
            <returns>The value that results from evaluating the expression in the context of the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator.Evaluate(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.Values.IEdmStructuredValue,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Evaluates an expression in the context of a value and a target type.
            </summary>
            <param name="expression">Expression to evaluate.</param>
            <param name="context">Value to use as context in evaluating the expression. Cannot be null if the expression contains paths.</param>
            <param name="targetType">Type to which the result value is expected to conform.</param>
            <returns>The value that results from evaluating the expression in the context of the supplied value, asserted to be of the target type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator.FindEdmType(System.String,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Get the <see cref="T:Microsoft.OData.Edm.IEdmType"/> of a specified edm type name from an <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.
            </summary>
            <param name="edmTypeName">The specified edm type name.</param>
            <param name="edmModel">The edm model.</param>
            <returns>The requested type, or null if no such type exists.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator.ResolveTypeFromName">
            <summary>
            Function used to get edm type based on <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and the type name.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmDelayedValue">
            <summary>
            Represents a lazily computed value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmDelayedValue.Value">
            <summary>
            Gets the data stored in this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmPropertyValue">
            <summary>
            Represents a value of an EDM property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmPropertyValue.Name">
            <summary>
            Gets the name of the property this value is associated with.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmCollectionValue">
            <summary>
            Represents an EDM collection value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmCollectionValue.Elements">
            <summary>
            Gets the values stored in this collection.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator.#ctor(System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmOperation,System.Func{Microsoft.OData.Edm.Values.IEdmValue[],Microsoft.OData.Edm.Values.IEdmValue}})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator"/> class.
            </summary>
            <param name="builtInFunctions">Builtin functions dictionary to the evaluators for the functions.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator.#ctor(System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmOperation,System.Func{Microsoft.OData.Edm.Values.IEdmValue[],Microsoft.OData.Edm.Values.IEdmValue}},System.Func{System.String,Microsoft.OData.Edm.Values.IEdmValue[],Microsoft.OData.Edm.Values.IEdmValue})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator"/> class.
            </summary>
            <param name="builtInFunctions">Builtin functions dictionary to the evaluators for the functions.</param>
            <param name="lastChanceOperationApplier">Function to call to evaluate an application of a function with no static binding.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator.EvaluateToClrValue``1(Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Evaluates an expression with no value context.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="expression">Expression to evaluate. The expression must not contain paths, because no context for evaluating a path is supplied.</param>
            <returns>The value that results from evaluating the expression in the context of the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator.EvaluateToClrValue``1(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.Values.IEdmStructuredValue)">
            <summary>
            Evaluates an expression in the context of a value.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="expression">Expression to evaluate.</param>
            <param name="context">Value to use as context in evaluating the expression.</param>
            <returns>The value that results from evaluating the expression in the context of the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator.EvaluateToClrValue``1(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.Values.IEdmStructuredValue,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Evaluates an expression in the context of a value and a target type.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="expression">Expression to evaluate.</param>
            <param name="context">Value to use as context in evaluating the expression.</param>
            <param name="targetType">Type to which the result value is expected to conform.</param>
            <returns>The value that results from evaluating the expression in the context of the supplied value, asserted to be of the targetType.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator.ResolveEdmTypeFromName(System.String,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Find the Edm type from an <see cref="T:Microsoft.OData.Edm.IEdmModel"/> by edm type name.
            </summary>
            <param name="edmTypeName">The edm type name.</param>
            <param name="edmModel">The edm model.</param>
            <returns>If the <see cref="T:Microsoft.OData.Edm.IEdmType"/> exists, return it. Or return false.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator.EdmToClrConverter">
            <summary>
            Gets or sets an instance of <see cref="P:Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator.EdmToClrConverter"/> that is used to produce CLR values during evaluation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmElementComparer">
            <summary>
            Contains IsEquivalentTo() extension methods.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmElementComparer.IsEquivalentTo(Microsoft.OData.Edm.IEdmType,Microsoft.OData.Edm.IEdmType)">
            <summary>
            Returns true if the compared type is semantically equivalent to this type.
            Schema types (<see cref="T:Microsoft.OData.Edm.IEdmSchemaType"/>) are compared by their object refs.
            </summary>
            <param name="thisType">Type being compared.</param>
            <param name="otherType">Type being compared to.</param>
            <returns>Equivalence of the two types.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmElementComparer.IsEquivalentTo(Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if the compared type reference is semantically equivalent to this type reference.
            Schema types (<see cref="T:Microsoft.OData.Edm.IEdmSchemaType"/>) are compared by their object refs.
            </summary>
            <param name="thisType">Type reference being compared.</param>
            <param name="otherType">Type referenced being compared to.</param>
            <returns>Equivalence of the two type references.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmTypeDefinitionReference">
            <summary>
            Represents references to EDM type definitions.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmContainedEntitySet">
            <summary>
            Represents an EDM contained entity set.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEntitySetBase">
            <summary>
            Represents an EDM base entity set.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmContainedEntitySet.ParentNavigationSource">
            <summary>The parent navigation source of this contained entity set.</summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmContainedEntitySet.NavigationProperty">
            <summary>The navigation property of this contained entity set.</summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmInclude">
            <summary>
            The interface of include information for referenced model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmInclude.Alias">
            <summary>
            Gets the alias.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmInclude.Namespace">
            <summary>
            Gets the namespace to include.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmIncludeAnnotations">
            <summary>
            The interface of includeAnnotation information for referenced model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmIncludeAnnotations.TermNamespace">
            <summary>
            Gets the term namespace to include.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmIncludeAnnotations.Qualifier">
            <summary>
            Gets the Qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmIncludeAnnotations.TargetNamespace">
            <summary>
            Getst the target namespace.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmNavigationPropertyBinding">
            <summary>
            Represents a binding from an EDM navigation property to a navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmNavigationPropertyBinding.NavigationProperty">
            <summary>
            Gets the navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmNavigationPropertyBinding.Target">
            <summary>
            Gets the target navigation source.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmNavigationSourceKind">
            <summary>
            Defines the kind of navigation source
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmNavigationSourceKind.None">
            <summary>
            Represents a value with an unknown or error kind.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmNavigationSourceKind.EntitySet">
            <summary>
            Represents EntitySet
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmNavigationSourceKind.Singleton">
            <summary>
            Represents Singleton
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmNavigationSourceKind.ContainedEntitySet">
            <summary>
            Represents ContainedEntitySet
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmNavigationSourceKind.UnknownEntitySet">
            <summary>
            Represents UnknownEntitySet
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmReference">
            <summary>
            Represents a definition of an edmx:reference element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmReference.Uri">
            <summary>
            Uri
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmReference.Includes">
            <summary>
            The Includes information.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmReference.IncludeAnnotations">
            <summary>
            The IncludeAnnotations information.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmReferentialConstraint">
            <summary>
            Represents an EDM referential constraint on a navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmReferentialConstraint.PropertyPairs">
            <summary>
            Gets the set of property pairs from the referential constraint. No particular ordering should be assumed.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmReferentialConstraintPropertyPair">
            <summary>
            Represents a pair of properties as part of a referential constraint.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmReferentialConstraintPropertyPair.#ctor(Microsoft.OData.Edm.IEdmStructuralProperty,Microsoft.OData.Edm.IEdmStructuralProperty)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.OData.Edm.EdmReferentialConstraintPropertyPair"/>.
            </summary>
            <param name="dependentProperty">The local or dependent property in the referential constraint property pair. A null value is not allowed.</param>
            <param name="principalProperty">The foreign or principal property in the referential constraint property pair. A null value is not allowed.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either of the properties given are null.</exception>
        </member>
        <member name="P:Microsoft.OData.Edm.EdmReferentialConstraintPropertyPair.DependentProperty">
            <summary>
            The local or dependent property in the referential constraint property pair. Will never be null.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.EdmReferentialConstraintPropertyPair.PrincipalProperty">
            <summary>
            The foreign or principal property in the referential constraint property pair. Will never be null.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmUnknownEntitySet">
            <summary>
            Represents an EDM unknown entity set.
            Unknown entity set can appear in following scenarios:
            1. The target of navigation property is contained in other entity.
            2. The target of navigation property comes from more than one entity set.
            3. Other scenarios that the entity set is unknown.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding">
            <summary>
            Represents the combination of an EDM annotation with an immediate value and the element to which it is attached.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding.Element">
            <summary>
            Gets the element to which the annotation is attached
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding.NamespaceUri">
            <summary>
            Gets the namespace URI of the annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding.Name">
            <summary>
            Gets the local name of this annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding.Value">
            <summary>
            Gets the value of this annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EnumHelper">
            <summary>
            Enum helper
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.EnumHelper.TryParseEnum(Microsoft.OData.Edm.IEdmEnumType,System.String,System.Boolean,System.Int64@)">
            <summary>
            Parse an enum literal value to integer. The literal value can be Enum member name (e.g. "Red"), underlying value (e.g. "2"), or combined values (e.g. "Red, Green, Blue", "1,2,4").
            </summary>
            <param name="enumType">edm enum type</param>
            <param name="value">input string value</param>
            <param name="ignoreCase">true if case insensitive, false if case sensitive</param>
            <param name="parseResult">parse result</param>
            <returns>true if parse succeeds, false if parse fails</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EnumHelper.ToStringLiteral(Microsoft.OData.Edm.IEdmEnumTypeReference,System.Int64)">
            <summary>
            Convert enum int value to string
            </summary>
            <param name="type">edm enum type reference</param>
            <param name="value">input int value</param>
            <returns>string literal of the enum value</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EnumHelper.ToStringWithFlags(Microsoft.OData.Edm.IEdmEnumType,System.Int64)">
            <summary>
            For enum with flags, use a sequential search for bit masks, and then check if any residual
            </summary>
            <param name="enumType">edm enum type</param>
            <param name="value">input integer value</param>
            <returns>string seperated by comma</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EnumHelper.ToStringNoFlags(Microsoft.OData.Edm.IEdmEnumType,System.Int64)">
            <summary>
            For enum without flags, use a binary search
            </summary>
            <param name="enumType">edm enum type</param>
            <param name="value">input integer value</param>
            <returns>string</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EnumHelper.GetCachedValuesAndNames(Microsoft.OData.Edm.IEdmEnumType,System.UInt64[]@,System.String[]@,System.Boolean,System.Boolean)">
            <summary>
            Get cached values and names from hash table
            </summary>
            <param name="enumType">edm enum type</param>
            <param name="values">output values</param>
            <param name="names">output names</param>
            <param name="getValues">true if get values, false otherwise</param>
            <param name="getNames">true if get names, false otherwise</param>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.AmbiguousBinding`1">
            <summary>
            Represents a name binding to more than one item.
            </summary>
            <typeparam name="TElement">Type of the ambiguous element.</typeparam>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadTypeDefinition">
            <summary>
            Represents a semantically invalid EDM type definition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmTypeDefinition">
            <summary>
            Represents the definition of an Edm type definition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmType">
            <summary>
            Represents the definition of an EDM type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmType.ToString">
            <summary>
            Returns the text representation of the current object.
            </summary>
            <returns>The text representation of the current object.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmType.TypeKind">
            <summary>
            Gets the kind of this type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTypeDefinition.#ctor(System.String,System.String,Microsoft.OData.Edm.EdmPrimitiveTypeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmTypeDefinition"/> class with <see cref="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Int32"/> underlying type.
            </summary>
            <param name="namespaceName">Namespace this type definition belongs to.</param>
            <param name="name">Name of this type definition.</param>
            <param name="underlyingType">The underlying type of this type definition.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTypeDefinition.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmPrimitiveType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmTypeDefinition"/> class.
            </summary>
            <param name="namespaceName">Namespace this type definition belongs to.</param>
            <param name="name">Name of this type definition.</param>
            <param name="underlyingType">The underlying type of this type definition.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTypeDefinition.TypeKind">
            <summary>
            Gets the kind of this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTypeDefinition.SchemaElementKind">
            <summary>
            Gets the kind of this schema element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTypeDefinition.Namespace">
            <summary>
            Gets the namespace this schema element belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTypeDefinition.Name">
            <summary>
            Gets the name of this type definition.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTypeDefinition.UnderlyingType">
            <summary>
            Gets the underlying type of this type definition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmTypeDefinitionReference">
            <summary>
            Represents a reference to an EDM type definition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmTypeReference">
            <summary>
            Represents a reference to an EDM type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTypeReference.#ctor(Microsoft.OData.Edm.IEdmType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmTypeReference"/> class.
            </summary>
            <param name="definition">Type that describes this value.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTypeReference.ToString">
            <summary>
            Returns the text representation of the current object.
            </summary>
            <returns>The text representation of the current object.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTypeReference.IsNullable">
            <summary>
            Gets a value indicating whether this type is nullable.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTypeReference.Definition">
            <summary>
            Gets the definition to which this type refers.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTypeDefinitionReference.#ctor(Microsoft.OData.Edm.IEdmTypeDefinition,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmTypeDefinitionReference"/> class.
            </summary>
            <param name="typeDefinition">The definition refered to by this reference.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmContainedEntitySet">
            <summary>
            Represents an EDM contained entity set.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmEntitySetBase">
            <summary>
            Represents an abstract EDM entity set base.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmNavigationSource">
            <summary>
            Represents an abstract EDM navigation source.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmNamedElement">
            <summary>
            Common base class for all named EDM elements.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmNamedElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmNamedElement"/> class.
            </summary>
            <param name="name">Name of the element.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNamedElement.Name">
            <summary>
            Gets the name of this element.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmNavigationSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmNavigationSource"/> class.
            </summary>
            <param name="name">Name of the navigation source.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmNavigationSource.AddNavigationTarget(Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Adds a navigation target, specifying the destination entity set of a navigation property of an entity in this navigation source.
            </summary>
            <param name="property">The navigation property the target is being set for.</param>
            <param name="target">The destination navigation source of the specified navigation property.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmNavigationSource.FindNavigationTarget(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Finds the navigation source that a navigation property targets.
            </summary>
            <param name="property">The navigation property.</param>
            <returns>The navigation source that the navigation propertion targets, or null if no such navigation source exists.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationSource.NavigationPropertyBindings">
            <summary>
            Gets the navigation targets of this navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationSource.Type">
            <summary>
            Gets the type of this navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationSource.Path">
            <summary>
            Gets the path that a navigation property targets.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntitySetBase.#ctor(System.String,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEntitySetBase"/> class.
            </summary>
            <param name="name">Name of the entity set base.</param>
            <param name="elementType">The entity type of the elements in this entity set base.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntitySetBase.Type">
            <summary>
            Gets the type of this navigation source.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmContainedEntitySet.#ctor(Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmContainedEntitySet"/> class.
            </summary>
            <param name="parentNavigationSource">The <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> that container element belongs to</param>
            <param name="navigationProperty">An <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/> containing the navagation property definition of the contained element</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmContainedEntitySet.FindNavigationTarget(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Finds the entity set that a navigation property targets.
            </summary>
            <param name="property">The navigation property.</param>
            <returns>The entity set that the navigation property targets</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmContainedEntitySet.Path">
            <summary>
            Gets the path that a navigation property targets. This property is not thread safe.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmContainedEntitySet.ParentNavigationSource">
            <summary>The parent navigation source of this contained entity set.</summary>
            <returns>The parent navigation source of this contained entity set.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmContainedEntitySet.NavigationProperty">
            <summary>The navigation property of this contained entity set.</summary>
            <returns>The navigation property of this contained entity set.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmInclude">
            <summary>
            The include information for referenced model.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmInclude.#ctor(System.String,System.String)">
            <summary>
            constructor.
            </summary>
            <param name="alias">The alias.</param>
            <param name="namespaceIncluded">The namespace.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmInclude.Alias">
            <summary>
            Gets the alias.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmInclude.Namespace">
            <summary>
            Gets the namespace to include.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmIncludeAnnotations">
            <summary>
            The includeAnnotation information for referenced model.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmIncludeAnnotations.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="termNamespace">The term namespace.</param>
            <param name="qualifier">The qualifier.</param>
            <param name="targetNamespace">The target namespace.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmIncludeAnnotations.TermNamespace">
            <summary>
            Get the term namespace.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmIncludeAnnotations.Qualifier">
            <summary>
            Gets the qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmIncludeAnnotations.TargetNamespace">
            <summary>
            Gets the target namespace.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmReference">
            <summary>
            Represents edmx:reference element in CSDL doc.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmReference.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="uri">The Uri to load referneced model.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmReference.AddInclude(Microsoft.OData.Edm.IEdmInclude)">
            <summary>
            Add include information.
            </summary>
            <param name="edmInclude">The IEdmInclude.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmReference.AddIncludeAnnotations(Microsoft.OData.Edm.IEdmIncludeAnnotations)">
            <summary>
            Add IncludeAnnotations information.
            </summary>
            <param name="edmIncludeAnnotations">The IEdmIncludeAnnotations.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmReference.Uri">
            <summary>
            Gets the Uri to load referneced model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmReference.Includes">
            <summary>
            Gets the Includes for referneced model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmReference.IncludeAnnotations">
            <summary>
            Gets the IncludeAnnotations for referneced model.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmSingleton">
            <summary>
            Represents an EDM singleton.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmSingleton.#ctor(Microsoft.OData.Edm.IEdmEntityContainer,System.String,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmSingleton"/> class.
            </summary>
            <param name="container">An <see cref="T:Microsoft.OData.Edm.IEdmEntityContainer"/> containing this entity set.</param>
            <param name="name">Name of the singleton.</param>
            <param name="entityType">The entity type of the element of this singleton.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmSingleton.ContainerElementKind">
            <summary>
            Gets the kind of element of this container element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmSingleton.Container">
            <summary>
            Gets the container of this singleton.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmSingleton.Type">
            <summary>
            Gets the type of this navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmSingleton.Path">
            <summary>
            Gets the path that a navigation property targets.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmUnknownEntitySet">
            <summary>
            Represents an EDM unknown entity set
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmUnknownEntitySet.#ctor(Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmUnknownEntitySet"/> class.
            </summary>
            <param name="parentNavigationSource">The <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> that container element belongs to</param>
            <param name="navigationProperty">An <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/> containing the navagation property definition of the contained element</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmUnknownEntitySet.FindNavigationTarget(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Finds the entity set that a navigation property targets.
            </summary>
            <param name="property">The navigation property.</param>
            <returns>The entity set that the navigation propertion targets, or null if no such entity set exists.</returns>
            TODO: change null logic to using UnknownEntitySet
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmUnknownEntitySet.Path">
            <summary>
            Gets the path that a navigation property targets. This property is not thread safe.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmNavigationPropertyPathExpression">
            <summary>
            Represents an EDM navigation property path expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmNavigationPropertyPathExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmNavigationPropertyPathExpression"/> class.
            </summary>
            <param name="path">Path string containing segments seperated by '/'. For example: "A.B/C/D.E/Func1(NS.T,NS.T2)/P1".</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmNavigationPropertyPathExpression.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmNavigationPropertyPathExpression"/> class.
            </summary>
            <param name="path">Path segments.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmNavigationPropertyPathExpression.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmNavigationPropertyPathExpression"/> class.
            </summary>
            <param name="path">Path segments.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmNavigationPropertyPathExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Memoizer`2">
            <summary>
            Remembers the result of evaluating an expensive function so that subsequent
            evaluations are faster. Thread-safe.
            </summary>
            <typeparam name="TArg">Type of the argument to the function.</typeparam>
            <typeparam name="TResult">Type of the function result.</typeparam>
        </member>
        <member name="M:Microsoft.OData.Edm.Memoizer`2.#ctor(System.Func{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Constructs the memoizer.
            </summary>
            <param name="function">Required. Function whose values are being cached.</param>
            <param name="argComparer">Optional. Comparer used to determine if two functions arguments are the same.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Memoizer`2.Evaluate(`0)">
            <summary>
            Evaluates the wrapped function for the given argument. If the function has already
            been evaluated for the given argument, returns cached value. Otherwise, the value
            is computed and returned.
            </summary>
            <param name="arg">Function argument.</param>
            <returns>Function result.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Memoizer`2.Result">
            <summary>
            Encapsulates a 'deferred' result. The result is constructed with a delegate (must not 
            be null) and when the user requests a value the delegate is invoked and stored.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmFunctionImport">
            <summary>
            Represents an EDM function import.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmOperationImport">
            <summary>
            Represents an EDM operation import.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmOperationImport.#ctor(Microsoft.OData.Edm.IEdmEntityContainer,Microsoft.OData.Edm.IEdmOperation,System.String,Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.OData.Edm.Library.EdmOperationImport"/> class.
            </summary>
            <param name="container">An <see cref="T:Microsoft.OData.Edm.IEdmEntityContainer"/> containing this operation import.</param>
            <param name="operation">The operation of the import.</param>
            <param name="name">Name of the operation import.</param>
            <param name="entitySet">An entity set containing entities returned by this operation import. 
            The two expression kinds supported are <see cref="T:Microsoft.OData.Edm.Expressions.IEdmEntitySetReferenceExpression"/> and <see cref="T:Microsoft.OData.Edm.Expressions.IEdmPathExpression"/>.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmOperationImport.OperationArgumentNullParameterName">
            <summary>
            Operations the name of the argument null parameter.
            </summary>
            <returns>A string that is the name of the operation parameter in the derived operation class.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperationImport.Operation">
            <summary>
            Gets the operation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperationImport.EntitySet">
            <summary>
            Gets the entity set containing entities returned by this operation import.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperationImport.ContainerElementKind">
            <summary>
            Gets the kind of this operation, which is always FunctionImport.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperationImport.Container">
            <summary>
            Gets the container of this operation.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmFunctionImport.#ctor(Microsoft.OData.Edm.IEdmEntityContainer,System.String,Microsoft.OData.Edm.IEdmFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmFunctionImport"/> class.
            </summary>
            <param name="container">The container.</param>
            <param name="name">The name.</param>
            <param name="function">The function.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmFunctionImport.#ctor(Microsoft.OData.Edm.IEdmEntityContainer,System.String,Microsoft.OData.Edm.IEdmFunction,Microsoft.OData.Edm.Expressions.IEdmExpression,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmFunctionImport"/> class.
            </summary>
            <param name="container">The container.</param>
            <param name="name">The name.</param>
            <param name="function">The function.</param>
            <param name="entitySetExpression">The entity set expression.</param>
            <param name="includeInServiceDocument">The value indicates if the function is to be include in the service document or not.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmFunctionImport.OperationArgumentNullParameterName">
            <summary>
            Operations the name of the argument null parameter.
            </summary>
            <returns>Returns the name of the operation from this import.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmFunctionImport.Function">
            <summary>
            Gets the function that defines the function import.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmFunctionImport.ContainerElementKind">
            <summary>
            Gets the kind of this operation, which is always FunctionImport.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmFunctionImport.IncludeInServiceDocument">
            <summary>
            Gets a value indicating whether [include in service document].
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmActionImport">
            <summary>
            Represents an EDM action import.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmActionImport.#ctor(Microsoft.OData.Edm.IEdmEntityContainer,System.String,Microsoft.OData.Edm.IEdmAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmActionImport"/> class.
            </summary>
            <param name="container">The container.</param>
            <param name="name">The name.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmActionImport.#ctor(Microsoft.OData.Edm.IEdmEntityContainer,System.String,Microsoft.OData.Edm.IEdmAction,Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmActionImport"/> class.
            </summary>
            <param name="container">The container.</param>
            <param name="name">The name.</param>
            <param name="action">The action.</param>
            <param name="entitySetExpression">The entity set expression.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmActionImport.OperationArgumentNullParameterName">
            <summary>
            Indicates the name of the constructor argument that is passed to EdmOperationImport.
            </summary>
            <returns>Returns the name of the operation from this import.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmActionImport.Action">
            <summary>
            Gets the action type of the import.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmActionImport.ContainerElementKind">
            <summary>
            Gets the kind of this actionimport, which is always ActionImport.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmFunction">
            <summary>
            Represents an EDM function.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmOperation">
            <summary>
            Represents an EDM operation.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmOperation.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmTypeReference,System.Boolean,Microsoft.OData.Edm.Expressions.IEdmPathExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmAction"/> class.
            </summary>
            <param name="namespaceName">Name of the namespace.</param>
            <param name="name">The name.</param>
            <param name="returnType">Type of the return.</param>
            <param name="isBound">if set to <c>true</c> [is bound].</param>
            <param name="entitySetPathExpression">The entity set path expression.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmOperation.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmAction"/> class.
            </summary>
            <param name="namespaceName">Name of the namespace.</param>
            <param name="name">The name.</param>
            <param name="returnType">Type of the return.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmOperation.FindParameter(System.String)">
            <summary>
            Searches for a parameter with the given name in this function and returns null if no such parameter exists.
            </summary>
            <param name="name">The name of the parameter to be found.</param>
            <returns>The requested parameter, or null if no such parameter exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmOperation.AddParameter(System.String,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Creates and adds a parameter to this function (as the last parameter).
            </summary>
            <param name="name">The name of the parameter being added.</param>
            <param name="type">The type of the parameter being added.</param>
            <returns>Created parameter.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmOperation.AddParameter(Microsoft.OData.Edm.IEdmOperationParameter)">
            <summary>
            Adds a parameter to this function (as the last parameter).
            </summary>
            <param name="parameter">The parameter being added.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperation.IsBound">
            <summary>
            Gets a value indicating whether this instance is bound.
            </summary>
            <value>
              <c>true</c> if this instance is bound; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperation.EntitySetPath">
            <summary>
            Gets the entity set path expression.
            </summary>
            <value>
            The entity set path expression.
            </value>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperation.SchemaElementKind">
            <summary>
            Gets the element kind of this operation, which is always Operation.
            virtual will be removed in the near future, stop gap to enable testing for now.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperation.Namespace">
            <summary>
            Gets the namespace of this function.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperation.ReturnType">
            <summary>
            Gets the return type of this function.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperation.Parameters">
            <summary>
            Gets the parameters of this function.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmFunction.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmTypeReference,System.Boolean,Microsoft.OData.Edm.Expressions.IEdmPathExpression,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmFunction"/> class.
            </summary>
            <param name="namespaceName">Name of the namespace.</param>
            <param name="name">The name.</param>
            <param name="returnType">Type of the return.</param>
            <param name="isBound">if set to <c>true</c> [is bound].</param>
            <param name="entitySetPathExpression">The entity set path expression.</param>
            <param name="isComposable">A value indicating if the function is composable or not.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmFunction.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmFunction"/> class.
            </summary>
            <param name="namespaceName">Namespace of the function.</param>
            <param name="name">Name of the function.</param>
            <param name="returnType">Return type of the function.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmFunction.SchemaElementKind">
            <summary>
            Gets the element kind of this operation, which is always Operation.
            virtual will be removed in the near future, stop gap to enable testing for now.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmFunction.IsComposable">
            <summary>
            Gets a value indicating whether this instance is composable.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmAction">
            <summary>
            Represents an EDM action.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmAction.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmTypeReference,System.Boolean,Microsoft.OData.Edm.Expressions.IEdmPathExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmAction"/> class.
            </summary>
            <param name="namespaceName">Name of the namespace.</param>
            <param name="name">The name.</param>
            <param name="returnType">Type of the return.</param>
            <param name="isBound">if set to <c>true</c> [is bound].</param>
            <param name="entitySetPathExpression">The entity set path expression.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmAction.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmAction"/> class.
            </summary>
            <param name="namespaceName">Name of the namespace.</param>
            <param name="name">The name.</param>
            <param name="returnType">Type of the return.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmAction.SchemaElementKind">
            <summary>
            Gets the element kind of this schema element kind which is an Action.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo">
            <summary>
            Represents an EDM navigation property info used during construction of navigation properties.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo.Clone">
            <summary>
            Clones this object.
            </summary>
            <returns>A copy of this object.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo.Name">
            <summary>
            Gets or sets the name of this navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo.Target">
            <summary>
            Gets or sets the entity type that this navigation property belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo.TargetMultiplicity">
            <summary>
            Gets or sets multiplicity of the navigation target.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo.DependentProperties">
            <summary>
            Gets or sets the dependent properties of the association this navigation property expresses.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo.PrincipalProperties">
            <summary>
            Gets or sets the principal properties of the association this navigation property expresses.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo.ContainsTarget">
            <summary>
            Gets or sets a value indicating whether the navigation target is contained inside the navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo.OnDelete">
            <summary>
            Gets or sets the action to take when an instance of the declaring type is deleted.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmNavigationPropertyBinding">
            <summary>
            Represents a mapping from an EDM navigation property to a navigation source.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmNavigationPropertyBinding.#ctor(Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Creates a new navigation property binding.
            </summary>
            <param name="navigationProperty">The navigation property.</param>
            <param name="target">The navigation source that the navigation property targets.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationPropertyBinding.NavigationProperty">
            <summary>
            Gets the navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationPropertyBinding.Target">
            <summary>
            Gets the target navigation source.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmReferentialConstraint">
            <summary>
            Represents an EDM referential constraint on a navigation property.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmReferentialConstraint.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.EdmReferentialConstraintPropertyPair})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.OData.Edm.Library.EdmReferentialConstraint"/>.
            </summary>
            <param name="propertyPairs">The set of property pairs from the referential constraint.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmReferentialConstraint.Create(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmStructuralProperty},System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmStructuralProperty})">
            <summary>
            Creates a new <see cref="T:Microsoft.OData.Edm.Library.EdmReferentialConstraint"/> using the provided <paramref name="dependentProperties"/> and <paramref name="principalProperties"/> to form the pairs.
            </summary>
            <param name="dependentProperties">The dependent properties that participate in the referential constraint. Assumed to be in the correct order relative to the principal entity's properties.</param>
            <param name="principalProperties">The principal properties that participate in the referential constraint. Assumed to be in the correct order relative to the dependent entity's properties.</param>
            <returns>The newly created referential constraint.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the number of dependent properties given does not match the number of key properties in the principal entity type.</exception>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmReferentialConstraint.PropertyPairs">
            <summary>
            Gets the set of property pairs from the referential constraint. No particular ordering should be assumed.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmDurationConstant">
            <summary>
            Represents an EDM duration constant.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmValue">
            <summary>
            Represents an EDM value.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmValue.#ctor(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the EdmValue class.
            </summary>
            <param name="type">Type of the value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmValue.Type">
            <summary>
            Gets the type of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmValue.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmDurationConstant.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmDurationConstant"/> class.
            </summary>
            <param name="value">Duration value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmDurationConstant.#ctor(Microsoft.OData.Edm.IEdmTemporalTypeReference,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmDurationConstant"/> class.
            </summary>
            <param name="type">Type of the Duration.</param>
            <param name="value">Duration value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDurationConstant.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDurationConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDurationConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEntityContainer">
            <summary>
            Represents an EDM entity container.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmEntityContainer.FindEntitySet(System.String)">
            <summary>
            Searches for an entity set with the given name in this entity container and returns null if no such set exists.
            </summary>
            <param name="setName">The name of the element being found.</param>
            <returns>The requested element, or null if the element does not exist.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmEntityContainer.FindSingleton(System.String)">
            <summary>
            Searches for a singleton with the given name in this entity container and returns null if no such singleton exists.
            </summary>
            <param name="singletonName">The name of the singleton to search.</param>
            <returns>The requested singleton, or null if the singleton does not exist.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmEntityContainer.FindOperationImports(System.String)">
            <summary>
            Searches for operation imports with the given name in this entity container and returns null if no such operation import exists.
            </summary>
            <param name="operationName">The name of the operations to find.</param>
            <returns>A group of the requested operation imports, or an empty enumerable  if no such operation import exists.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEntityContainer.Elements">
            <summary>
            Gets a collection of the elements of this entity container.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEntitySet">
            <summary>
            Represents an EDM entity set.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.AmbiguousOperationImportBinding">
            <summary>
            Class that represents an unresolved operation import binding to two or more operation imports.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.AmbiguousLabeledExpressionBinding">
            <summary>
            Represents a labeled expression binding to more than one item.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmProperty">
            <summary>
            Represents an EDM property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmProperty.PropertyKind">
            <summary>
            Gets the kind of this property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmProperty.Type">
            <summary>
            Gets the type of this property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmProperty.DeclaringType">
            <summary>
            Gets the type that this property belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.AmbiguousPropertyBinding.PropertyKind">
            <summary>
            Gets the kind of this property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.AmbiguousPropertyBinding.DeclaringType">
            <summary>
            Gets the type that this property belongs to.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.AmbiguousTypeBinding">
            <summary>
            Represents a name binding to more than one item.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.AmbiguousValueTermBinding">
            <summary>
            Represents a name binding to more than one item.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadBinaryTypeReference">
            <summary>
            Represents a reference to a semantically invalid EDM binary type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmBinaryTypeReference">
            <summary>
            Represents a reference to an EDM binary type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmPrimitiveTypeReference">
            <summary>
            Represents a reference to an EDM primitive type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmPrimitiveTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmPrimitiveTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmBinaryTypeReference">
            <summary>
            Represents a reference to an EDM binary type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmBinaryTypeReference.IsUnbounded">
            <summary>
            Gets a value indicating whether this type specifies the maximum allowed length.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmBinaryTypeReference.MaxLength">
            <summary>
            Gets the maximum length of this type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmBinaryTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmBinaryTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmBinaryTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmBinaryTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
            <param name="isUnbounded">Denotes whether the max length is the maximum allowed value.</param>
            <param name="maxLength">Maximum length of a value of this type.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmBinaryTypeReference.IsUnbounded">
            <summary>
            Gets a value indicating whether this type specifies the maximum allowed length.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmBinaryTypeReference.MaxLength">
            <summary>
            Gets the maximum length of this type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadCollectionType">
            <summary>
            Represents a semantically invalid EDM collection type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadComplexType">
            <summary>
            Represents a semantically invalid EDM complex type definition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadNamedStructuredType">
            <summary>
            Represents a semantically invalid EDM named structured type definition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadStructuredType">
            <summary>
            Represents a semantically invalid EDM structured type definition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmComplexType">
            <summary>
            Represents a definition of an EDM complex type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmComplexTypeReference">
            <summary>
            Represents a reference to an EDM complex type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmComplexTypeReference">
            <summary>
            Represents references to EDM complex types.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmStructuredTypeReference">
            <summary>
            Represents references to EDM structured types.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmComplexTypeReference.#ctor(Microsoft.OData.Edm.IEdmComplexType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmComplexTypeReference"/> class.
            </summary>
            <param name="complexType">The type definition this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadDecimalTypeReference">
            <summary>
            Represents a reference to a semantically invalid EDM decimal type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmDecimalTypeReference">
            <summary>
            Represents a reference to an EDM decimal type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmDecimalTypeReference">
            <summary>
            Represents a reference to an EDM decimal type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmDecimalTypeReference.Precision">
            <summary>
            Gets the precision of this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmDecimalTypeReference.Scale">
            <summary>
            Gets the scale of this type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmDecimalTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmDecimalTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmDecimalTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmDecimalTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
            <param name="precision">Precision of values with this type.</param>
            <param name="scale">Scale of values with this type.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmDecimalTypeReference.Precision">
            <summary>
            Gets the precision of this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmDecimalTypeReference.Scale">
            <summary>
            Gets the scale of this type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadEntityContainer">
            <summary>
            Represents a semantically invalid EDM entity container.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.BadEntityContainer.SchemaElementKind">
            <summary>
            Gets the kind of this schema element.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadEntityReferenceType">
            <summary>
            Represents a semantically invalid EDM entity reference type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEntityReferenceType">
            <summary>
            Represents a definition of an EDM entity reference type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmEntityReferenceType.EntityType">
            <summary>
            Gets the entity type pointed to by this entity reference.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadEntitySet">
            <summary>
            Represents a semantically invalid EDM entity set.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadEntityType">
            <summary>
            Represents a semantically invalid EDM entity type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmEntityTypeReference">
            <summary>
            Represents a reference to an EDM entity type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEntityTypeReference">
            <summary>
            Represents references to entity types.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityTypeReference.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEntityTypeReference"/> class.
            </summary>
            <param name="entityType">The definition refered to by this reference.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadEnumMember">
            <summary>
            Represents a semantically invalid EDM enumeration type member.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadLabeledExpression">
            <summary>
            Represents a semantically invalid EDM labeled expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadPrimitiveType">
            <summary>
            Represents a semantically invalid EDM primitive type definition.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmPrimitiveType">
            <summary>
            Represents a definition of an EDM primitive type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmPrimitiveType.PrimitiveKind">
            <summary>
            Gets the primitive kind of this type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadPrimitiveTypeReference">
            <summary>
            Represents a reference to a semantically invalid EDM primitive type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.BadPrimitiveValue.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadProperty">
            <summary>
            Represents a semantically invalid EDM property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmStructuralProperty">
            <summary>
            Represents an EDM structural (i.e. non-navigation) property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmStructuralProperty.DefaultValueString">
            <summary>
            Gets the default value of this property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmStructuralProperty.ConcurrencyMode">
            <summary>
            Gets the concurrency mode of this property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadNavigationProperty">
            <summary>
            Represents a semantically invalid EDM navigation property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmNavigationProperty">
            <summary>
            Represents an EDM navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmNavigationProperty.Partner">
            <summary>
            Gets the partner of this navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmNavigationProperty.OnDelete">
            <summary>
            Gets the action to execute on the deletion of this end of a bidirectional association.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmNavigationProperty.ContainsTarget">
            <summary>
            Gets a value indicating whether the navigation target is contained inside the navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmNavigationProperty.ReferentialConstraint">
            <summary>
            Gets the referential constraint for this navigation, returning null if this is the principal end or if there is no referential constraint.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadSpatialTypeReference">
            <summary>
            Represents a reference to a semantically invalid EDM spatial type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmSpatialTypeReference">
            <summary>
            Represents a reference to an EDM spatial type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmSpatialTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmSpatialTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmSpatialTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmSpatialTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
            <param name="spatialReferenceIdentifier">Spatial Reference Identifier for the spatial type being created.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmSpatialTypeReference.SpatialReferenceIdentifier">
            <summary>
            Gets the precision of this temporal type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadStringTypeReference">
            <summary>
            Represents a reference to a semantically invalid EDM string type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmStringTypeReference">
            <summary>
            Represents a reference to an EDM string type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmStringTypeReference">
            <summary>
            Represents a reference to an EDM string type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmStringTypeReference.IsUnbounded">
            <summary>
            Gets a value indicating whether this string type specifies the maximum allowed length.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmStringTypeReference.MaxLength">
            <summary>
            Gets the maximum length of this string type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmStringTypeReference.IsUnicode">
            <summary>
            Gets a value indicating whether this string type supports unicode encoding.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStringTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmStringTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStringTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmStringTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
            <param name="isUnbounded">Denotes whether the max length is the maximum allowed value.</param>
            <param name="maxLength">Maximum length of a value of this type.</param>
            <param name="isUnicode">Denotes if string is encoded using Unicode.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStringTypeReference.IsUnbounded">
            <summary>
            Gets a value indicating whether this string type specifies the maximum allowed length.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStringTypeReference.MaxLength">
            <summary>
            Gets the maximum length of this string type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStringTypeReference.IsUnicode">
            <summary>
            Gets a value indicating whether this string type supports unicode encoding.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.BadTemporalTypeReference">
            <summary>
            Represents a reference to a semantically invalid EDM temporal (Duration, DateTime, DateTimeOffset) type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmTemporalTypeReference">
            <summary>
            Represents a reference to an EDM temporal (Duration, DateTime, DateTimeOffset) type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmTemporalTypeReference">
            <summary>
            Represents a reference to an EDM temporal (Duration, DateTime, DateTimeOffset) type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmTemporalTypeReference.Precision">
            <summary>
            Gets the precision of this temporal type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTemporalTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmTemporalTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTemporalTypeReference.#ctor(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmTemporalTypeReference"/> class.
            </summary>
            <param name="definition">The type this reference refers to.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
            <param name="precision">Precision of values with this type.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTemporalTypeReference.Precision">
            <summary>
            Gets the precision of this temporal type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.CyclicComplexType">
            <summary>
            Represents an EDM complex type that cannot be determined due to a cyclic reference.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.CyclicEntityContainer">
            <summary>
            Represents an EDM entity container that cannot be determined due to a cyclic reference.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.CyclicEntityType">
            <summary>
            Represents an EDM entity type that cannot be determined due to a cyclic reference.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants">
            <summary>
            The constants for primitive value converters.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants.UInt16TypeName">
            <summary>
            The name of the type definition for UInt16.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants.UInt32TypeName">
            <summary>
            The name of the type definition for UInt32.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants.UInt64TypeName">
            <summary>
            The name of the type definition for UInt64.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants.DefaultUInt16UnderlyingType">
            <summary>
            The default underlying type of the type definition for UInt16.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants.DefaultUInt32UnderlyingType">
            <summary>
            The default underlying type of the type definition for UInt32.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants.DefaultUInt64UnderlyingType">
            <summary>
            The default underlying type of the type definition for UInt64.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Vocabularies.V1.CapabilitiesVocabularyConstants">
            <summary>
            Constant values for Capabilities Vocabulary
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CapabilitiesVocabularyConstants.ChangeTracking">
            <summary>Org.OData.Capabilities.V1.ChangeTracking</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CapabilitiesVocabularyConstants.ChangeTrackingSupported">
            <summary>Property Supported of Org.OData.Capabilities.V1.ChangeTracking</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CapabilitiesVocabularyConstants.ChangeTrackingFilterableProperties">
            <summary>Property FilterableProperties of Org.OData.Capabilities.V1.ChangeTracking</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CapabilitiesVocabularyConstants.ChangeTrackingExpandableProperties">
            <summary>Property ExpandableProperties of Org.OData.Capabilities.V1.ChangeTracking</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CapabilitiesVocabularyConstants.VocabularyUrlSuffix">
            <summary>Org.OData.Capabilities.V1.xml file suffix</summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Vocabularies.V1.CapabilitiesVocabularyModel">
            <summary>
            Representing Capabilities Vocabulary Model.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CapabilitiesVocabularyModel.Instance">
            <summary>
            The EDM model with capabilities vocabularies.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CapabilitiesVocabularyModel.ChangeTrackingTerm">
            <summary>
            The change tracking term.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Vocabularies.V1.CapabilitiesVocabularyModel.#cctor">
            <summary>
            Parse Capabilities Vocabulary Model from CapabilitiesVocabularies.xml
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants">
            <summary>
            Constant values for Core Vocabulary
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.OptimisticConcurrency">
            <summary>Org.OData.Core.V1.OptimisticConcurrency </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.OptimisticConcurrencyControl">
            <summary>Org.OData.Core.V1.OptimisticConcurrencyControl </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.Description">
            <summary>Org.OData.Core.V1.Description </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.LongDescription">
            <summary>Org.OData.Core.V1.LongDescription </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.IsLanguageDependent">
            <summary>Org.OData.Core.V1.IsLanguageDependent </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.RequiresType">
            <summary>Org.OData.Core.V1.RequiresType </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.ResourcePath">
            <summary>Org.OData.Core.V1.ResourcePath</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.DereferenceableIDs">
            <summary>Org.OData.Core.V1.DereferenceableIDs</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.ConventionalIDs">
            <summary>Org.OData.Core.V1.ConventionalIDs</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.Immutable">
            <summary>Org.OData.Core.V1.Immutable</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.Computed">
            <summary>Org.OData.Core.V1.Computed</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.IsURL">
            <summary>Org.OData.Core.V1.IsURL</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.AcceptableMediaTypes">
            <summary>Org.OData.Core.V1.AcceptableMediaTypes</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.MediaType">
            <summary>Org.OData.Core.V1.MediaType</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.IsMediaType">
            <summary>Org.OData.Core.V1.IsMediaType</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyConstants.VocabularyUrlSuffix">
            <summary>Org.OData.Core.V1.xml file suffix</summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel">
            <summary>
            Representing Core Vocabulary Model.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.Instance">
            <summary>
            The EDM model with core vocabularies.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.ConcurrencyTerm">
            <summary>
            The concurrency term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.ConcurrencyControlTerm">
            <summary>
            The concurrency control term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.DescriptionTerm">
            <summary>
            The description term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.LongDescriptionTerm">
            <summary>
            The description term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.IsLanguageDependentTerm">
            <summary>
            The IsLanguageDependent term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.RequiresTypeTerm">
            <summary>
            The RequiresType term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.ResourcePathTerm">
            <summary>
            The ResourcePath term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.DereferenceableIDsTerm">
            <summary>
            The DereferenceableIDs term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.ConventionalIDsTerm">
            <summary>
            The ConventionalIDs term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.ImmutableTerm">
            <summary>
            The Immutable term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.ComputedTerm">
            <summary>
            The Computed term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.IsURLTerm">
            <summary>
            The IsURL term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.AcceptableMediaTypesTerm">
            <summary>
            The AcceptableMediaTypes term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.MediaTypeTerm">
            <summary>
            The MediaType term.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.IsMediaTypeTerm">
            <summary>
            The IsMediaType term.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Vocabularies.V1.CoreVocabularyModel.#cctor">
            <summary>
            Parse Core Vocabulary Model from CoreVocabularies.xml
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Vocabularis.CapabilitiesVocabularyConstants">
            <summary>
            Constant values for Capabilities Vocabulary
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularis.CapabilitiesVocabularyConstants.CapabilitiesChangeTracking">
            <summary>Org.OData.Capabilities.V1.ChangeTracking</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularis.CapabilitiesVocabularyConstants.CapabilitiesChangeTrackingSupported">
            <summary>Property Supported of Org.OData.Capabilities.V1.ChangeTracking</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularis.CapabilitiesVocabularyConstants.CapabilitiesChangeTrackingFilterableProperties">
            <summary>Property FilterableProperties of Org.OData.Capabilities.V1.ChangeTracking</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularis.CapabilitiesVocabularyConstants.CapabilitiesChangeTrackingExpandableProperties">
            <summary>Property ExpandableProperties of Org.OData.Capabilities.V1.ChangeTracking</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularis.CapabilitiesVocabularyConstants.CapabilitiesVocabularyUrlSuffix">
            <summary>Org.OData.Capabilities.V1.xml file suffix</summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Vocabularis.CoreVocabularyConstants">
            <summary>
            Constant values for Core Vocabulary
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularis.CoreVocabularyConstants.CoreOptimisticConcurrency">
            <summary>Org.OData.Core.V1.OptimisticConcurrency </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularis.CoreVocabularyConstants.CoreOptimisticConcurrencyControl">
            <summary>Org.OData.Core.V1.OptimisticConcurrencyControl </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularis.CoreVocabularyConstants.CoreDescription">
            <summary>Org.OData.Core.V1.Description </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularis.CoreVocabularyConstants.CoreLongDescription">
            <summary>Org.OData.Core.V1.LongDescription </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Vocabularis.CoreVocabularyConstants.CoreVocabularyUrlSuffix">
            <summary>Org.OData.Core.V1.xml file suffix</summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.DuplicateOperationValidator.BuildInternalUniqueParameterNameFunctionString(Microsoft.OData.Edm.IEdmFunction)">
            <summary>
            Creates a unique function name based on the type. Used to find duplicates of functions.
            - The combination of function name, binding parameter type, and unordered set of non-binding parameter names MUST be unique within a namespace. 
            - An unbound function MAY have the same name as a bound function. (Note this is why IsBound is added into the string)
            </summary>
            <param name="function">function to create the hash for.</param>
            <returns>A unique string that identifies a function.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.DuplicateOperationValidator.BuildInternalUniqueParameterTypeFunctionString(Microsoft.OData.Edm.IEdmFunction)">
            <summary>
            Creates a unique function name based on the type. Used to validate duplicates of functions. Rules this is validating
            - The combination of function name, binding parameter type, and ordered set of parameter types MUST be unique within a namespace.
            - An unbound function MAY have the same name as a bound function. (Note this is why IsBound is added into the string)
            </summary>
            <param name="function">function to use to create the hash. </param>
            <returns>A unique string that identifies a function.</returns>  
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.DuplicateOperationValidator.BuildInternalUniqueActionString(Microsoft.OData.Edm.IEdmAction)">
            <summary>
            Creates a unique function name based on the type. Used to find duplicates of functions.
            - Bound actions support overloading (multiple actions having the same name within the same namespace) by binding parameter type. The combination of action name and the binding parameter type MUST be unique within a namespace.
            - Unbound actions do not support overloads. The names of all unbound actions MUST be unique within a namespace. An unbound action MAY have the same name as a bound action.
            </summary>
            <param name="action">action to build the hash from.</param>
            <returns>A unique string that identifies a function.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.VersioningDictionary`2">
            <summary>
            Provides a dictionary that is thread safe by virtue of being immutable.
            Any update returns a new dictionary (which, for efficiency, may share some of the state of the old one).
            </summary>
            <typeparam name="TKey">Key type of the dictionary.</typeparam>
            <typeparam name="TValue">Value type of the dictionary.</typeparam>
        </member>
        <member name="T:Microsoft.OData.Edm.VersioningList`1">
            <summary>
            Provides a list that is thread safe by virtue of being immutable.
            "Mutating" operations return a new list (which, for efficiency, may share some of the state of the old one).
            </summary>
            <typeparam name="TElement">Element type of the list.</typeparam>
        </member>
        <member name="T:Microsoft.OData.Edm.VersioningTree`2">
            <summary>
            Provides an approximately-balanced binary search tree that is thread safe by virtue of being immutable.
            Updates return a new tree (which, for efficiency, may share some state with the old one).
            </summary>
            <typeparam name="TKey">Key type of the tree.</typeparam>
            <typeparam name="TValue">Value type of the tree.</typeparam>
        </member>
        <member name="M:Microsoft.OData.Edm.VersioningTree`2.#ctor(`0,`1,Microsoft.OData.Edm.VersioningTree{`0,`1},Microsoft.OData.Edm.VersioningTree{`0,`1})">
            <summary>
            Initializes a new instance of VersioningTree.
            </summary>
            <param name="key">The key of the tree node.</param>
            <param name="value">The value of the tree node.</param>
            <param name="leftChild">A tree with all keys less than the key of the tree node. May be null.</param>
            <param name="rightChild">A tree with all keys greater than the key of the tree node. May be null.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationBinding">
            <summary>
            Represents the combination of an EDM annotation with an immediate value and the element to which it is attached.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationBinding.#ctor(Microsoft.OData.Edm.IEdmElement,System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationBinding"/> class.
            </summary>
            <param name="element">Element to which the annotation is attached.</param>
            <param name="namespaceUri">Namespace URI of the annotation.</param>
            <param name="name">Name of the annotation within the namespace.</param>
            <param name="value">Value of the annotation</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationBinding.#ctor(Microsoft.OData.Edm.IEdmElement,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationBinding"/> class.
            </summary>
            <param name="element">Element to which the annotation is attached.</param>
            <param name="namespaceUri">Namespace URI of the annotation.</param>
            <param name="name">Name of the annotation within the namespace.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationBinding.Element">
            <summary>
            Gets the element to which the annotation is attached.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationBinding.NamespaceUri">
            <summary>
            Gets the namespace Uri of the annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationBinding.Name">
            <summary>
            Gets the local name of the annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotationBinding.Value">
            <summary>
            Gets the value of this annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Annotations.EdmTypedDirectValueAnnotationBinding`1">
            <summary>
            Represents the combination of an EDM annotation with an immediate value and the element to which it is attached.
            </summary>
            <typeparam name="T">Type of the annotation value.</typeparam>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmTypedDirectValueAnnotationBinding`1.#ctor(Microsoft.OData.Edm.IEdmElement,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Annotations.EdmTypedDirectValueAnnotationBinding`1"/> class.
            </summary>
            <param name="element">Element to which the annotation is attached.</param>
            <param name="value">Value of the annotation</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmTypedDirectValueAnnotationBinding`1.Element">
            <summary>
            Gets the element to which the annotation is attached.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmTypedDirectValueAnnotationBinding`1.NamespaceUri">
            <summary>
            Gets the namespace Uri of the annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmTypedDirectValueAnnotationBinding`1.Value">
            <summary>
            Gets the value of this annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.ObjectLocation">
            <summary>
            Defines an object as a location of itself.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ObjectLocation.ToString">
            <summary>
            Gets a string representation of the location.
            </summary>
            <returns>A string representation of the location.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Validation.ObjectLocation.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.ExpressionTypeChecker">
            <summary>
            Collection of extension methods to assert that an expression is of the required type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ExpressionTypeChecker.TryCast(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.IEdmTypeReference,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Determines if the type of an expression is compatible with the provided type
            </summary>
            <param name="expression">The expression to assert the type of.</param>
            <param name="type">The type to assert the expression as.</param>
            <param name="discoveredErrors">Errors produced if the expression does not match the specified type.</param>
            <returns>A value indicating whether the expression is valid for the given type or not.</returns>
            <remarks>If the expression has an associated type, this function will check that it matches the expected type and stop looking further. 
            If an expression claims a type, it must be validated that the type is valid for the expression. If the expression does not claim a type
            this method will attempt to check the validity of the expression itself with the asserted type.</remarks>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ExpressionTypeChecker.TryCast(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Edm.IEdmType,System.Boolean,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Determines if the type of an expression is compatible with the provided type
            </summary>
            <param name="expression">The expression to assert the type of.</param>
            <param name="type">The type to assert the expression as.</param>
            <param name="context">The context paths are to be evaluated in.</param>
            <param name="matchExactly">A value indicating whether the expression must match the asserted type exactly, or simply be compatible.</param>
            <param name="discoveredErrors">Errors produced if the expression does not match the specified type.</param>
            <returns>A value indicating whether the expression is valid for the given type or not.</returns>
            <remarks>If the expression has an associated type, this function will check that it matches the expected type and stop looking further. 
            If an expression claims a type, it must be validated that the type is valid for the expression. If the expression does not claim a type
            this method will attempt to check the validity of the expression itself with the asserted type.</remarks>
        </member>
        <member name="T:Microsoft.OData.Edm.ToTraceStringExtensionMethods">
            <summary>
            Contains ToTraceString() extension methods.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.ToTraceStringExtensionMethods.ToTraceString(Microsoft.OData.Edm.IEdmSchemaType)">
            <summary>
            Returns the text representation of the current object.
            </summary>
            <param name="schemaType">Reference to the calling object.</param>
            <returns>The text representation of the current object.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ToTraceStringExtensionMethods.ToTraceString(Microsoft.OData.Edm.IEdmSchemaElement)">
            <summary>
            Returns the text representation of the current object.
            </summary>
            <param name="schemaElement">Reference to the calling object.</param>
            <returns>The text representation of the current object.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ToTraceStringExtensionMethods.ToTraceString(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Returns the text representation of the current object.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The text representation of the current object.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ToTraceStringExtensionMethods.ToTraceString(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns the text representation of the current object.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The text representation of the current object.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ToTraceStringExtensionMethods.ToTraceString(Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            Returns the text representation of the current object.
            </summary>
            <param name="property">Reference to the calling object.</param>
            <returns>The text representation of the current object.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmEnumMemberReferenceExpression">
            <summary>
            Represents an EDM enumeration member reference expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmEnumMemberReferenceExpression.ReferencedEnumMember">
            <summary>
            Gets the referenced enum member.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmEnumValue">
            <summary>
            Represents an EDM enumeration type value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmEnumValue.Value">
            <summary>
            Gets the underlying type value of the enumeration type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmEnumTypeReference">
            <summary>
            Represents references to EDM enumeration types.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.IEdmValueTermReferenceExpression">
            <summary>
            Represents an EDM value term reference expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmValueTermReferenceExpression.Base">
            <summary>
            Gets the expression for the structured value containing the referenced term property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmValueTermReferenceExpression.Term">
            <summary>
            Gets the referenced value term.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Expressions.IEdmValueTermReferenceExpression.Qualifier">
            <summary>
            Gets the optional qualifier.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmTermKind">
            <summary>
            Defines EDM term kinds.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTermKind.None">
            <summary>
            Represents a term with unknown or error kind.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTermKind.Type">
            <summary>
            Represents a term implementing <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> and <see cref="T:Microsoft.OData.Edm.IEdmSchemaType"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTermKind.Value">
            <summary>
            Represents a term implementing <see cref="T:Microsoft.OData.Edm.IEdmValueTerm"/>.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Annotations.IEdmPropertyValueBinding">
            <summary>
            Represents a property binding specified as part of an EDM type annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmPropertyValueBinding.BoundProperty">
            <summary>
            Gets the property that is given a value by the annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Annotations.IEdmPropertyValueBinding.Value">
            <summary>
            Gets the expression producing the value of the annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.IEdmStructuredValue">
            <summary>
            Represents an EDM structured value.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Values.IEdmStructuredValue.FindPropertyValue(System.String)">
            <summary>
            Finds the value corresponding to the provided property name.
            </summary>
            <param name="propertyName">Property to find the value of.</param>
            <returns>The found property, or null if no property was found.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Values.IEdmStructuredValue.PropertyValues">
            <summary>
            Gets the property values of this structured value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Values.EdmValueKind">
            <summary>
            Defines Edm values
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.None">
            <summary>
            Represents a value with an unknown or error kind.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Binary">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmBinaryValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Boolean">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmBooleanValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Collection">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmCollectionValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.DateTimeOffset">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmDateTimeOffsetValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Decimal">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmDecimalValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Enum">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmEnumValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Floating">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmFloatingValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Guid">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmGuidValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Integer">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmIntegerValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Null">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmNullValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.String">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmStringValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Structured">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmStructuredValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Duration">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmDurationValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.Date">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmDateValue"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Values.EdmValueKind.TimeOfDay">
            <summary>
            Represents a value implementing <see cref="T:Microsoft.OData.Edm.Values.IEdmTimeOfDayValue"/>. 
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Expressions.EdmExpressionKind">
            <summary>
            Defines EDM expression kinds.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.None">
            <summary>
            Represents an expression with unknown or error kind.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.BinaryConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmBinaryConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.BooleanConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmBooleanConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.DateTimeOffsetConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmDateTimeOffsetConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.DecimalConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmDecimalConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.FloatingConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmFloatingConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.GuidConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmGuidConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.IntegerConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmIntegerConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.StringConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmStringConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.DurationConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmDurationConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.Null">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmNullExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.Record">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmRecordExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.Collection">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmCollectionExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.Path">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmPathExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.ParameterReference">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmParameterReferenceExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.OperationReference">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmOperationReferenceExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.PropertyReference">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmPropertyReferenceExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.ValueTermReference">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmValueTermReferenceExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.EntitySetReference">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmEntitySetReferenceExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.EnumMemberReference">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmEnumMemberReferenceExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.If">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmIfExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.Cast">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmCastExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.IsType">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmIsTypeExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.OperationApplication">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmApplyExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.LabeledExpressionReference">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmLabeledExpressionReferenceExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.Labeled">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmLabeledExpression"/>
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.PropertyPath">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmPathExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.NavigationPropertyPath">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmPathExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.DateConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmDateConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.TimeOfDayConstant">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmTimeOfDayConstantExpression"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Expressions.EdmExpressionKind.EnumMember">
            <summary>
            Represents an expression implementing <see cref="T:Microsoft.OData.Edm.Expressions.IEdmEnumMemberExpression"/>.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlConstants">
            <summary>
            Constants for CSDL XML.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.CsdlConstants.EdmxVersionAnnotation">
            <summary>
            The local name of the annotation that stores EDMX version of a model.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.CsdlConstants.EdmxVersion4">
            <summary>
            Version 4.0 of EDMX. Corresponds to EDMX namespace "http://docs.oasis-open.org/odata/ns/edmx".
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Csdl.CsdlConstants.EdmxVersionLatest">
            <summary>
            The current latest version of EDMX.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlDirectValueAnnotation">
            <summary>
            Represents a CSDL annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlBinaryTypeReference">
            <summary>
            Represents a reference to a CSDL Binary type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlComplexType">
            <summary>
            Represents a CSDL complex type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlNamedStructuredType">
            <summary>
            Common base class for CSDL entity and complex types.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlStructuredType">
            <summary>
            Common base class for CSDL entity and complex Types.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlDecimalTypeReference">
            <summary>
            Represents a reference to a CSDL decimal type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlDocumentation">
            <summary>
            Represents a CSDL documentation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlEntityContainer">
            <summary>
            Represents a CSDL entity container.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlEntityReferenceType">
            <summary>
            Represents a CSDL entity reference type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlEntitySet">
            <summary>
            Represents a CSDL Entity Set.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlEntityType">
            <summary>
            Represents a CSDL entity type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlExpressionTypeReference">
            <summary>
            Represents a CSDL type reference based on a type expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOperationParameter">
            <summary>
            Represents a CSDL operation parameter.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlKey">
            <summary>
            Represents a CSDL key.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlModel">
            <summary>
            Represents a CSDL model.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlModel.AddCurrentModelReferences(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmReference})">
            <summary>
            Adds from current model.
            </summary>
            <param name="referencesToAdd">The items to add.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlModel.AddParentModelReferences(Microsoft.OData.Edm.IEdmReference)">
            <summary>
            Adds from main model.
            </summary>
            <param name="referenceToAdd">The IEdmReference to add.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlModel.CurrentModelReferences">
            <summary>
            Represents current model's $lt;edmx:Reference /&gt;
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlModel.ParentModelReferences">
            <summary>
            Represents parent model's $lt;edmx:Reference ... /&gt;
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlNavigationProperty">
            <summary>
            Represents a CSDL navigation property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlNavigationPropertyBinding">
            <summary>
            Represents a CSDL Navigation Property Binding.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlOnDelete">
            <summary>
            Represents a CSDL "on delete" action.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlProperty">
            <summary>
            Represents a CSDL property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlPropertyReference">
            <summary>
            Represents a CSDL property reference.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlReferentialConstraint">
            <summary>
            Represents a CSDL referential constraint.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlReferentialConstraintRole">
            <summary>
            Represents a CSDL referential constraint role.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlSchema">
            <summary>
            Represents a CSDL schema.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlStringTypeReference">
            <summary>
            Represents a reference to a CSDL String type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlTemporalTypeReference">
            <summary>
            Represents a reference to a CSDL temporal type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.Common.XmlDocumentParser">
            <summary>
            Base class for parsers of XML documents
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.CsdlDocumentParser">
            <summary>
            CSDL document parser.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.Parsing.CsdlParser">
            <summary>
            Provides for the loading and conversion of one or more CSDL XML readers into Entity Data Model.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsBinaryTypeReference">
            <summary>
            Provides the semantics of a reference to an EDM Binary type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsComplexTypeDefinition">
            <summary>
            Provides semantics for CsdlComplexType.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsStructuredTypeDefinition">
            <summary>
            Provides semantics for CsdlStructuredType.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsDecimalTypeReference">
            <summary>
            Provides the semantics of a reference to an EDM Decimal type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsDocumentation">
            <summary>
            Provides semantics for CsdlDocumentation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmDocumentation">
            <summary>
            Represents an EDM documentation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmDocumentation.Summary">
            <summary>
            Gets a summary of this documentation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmDocumentation.Description">
            <summary>
            Gets a long description of this documentation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsEntityContainer">
            <summary>
            Provides semantics for CsdlEntityContainer.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsEntityReferenceTypeDefinition">
            <summary>
            Provides semantics for CsdlEntityTypeReference.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsEntitySet">
            <summary>
            Provides semantics for CsdlEntitySet.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsEntityTypeDefinition">
            <summary>
            Provides semantics for CsdlEntityType.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsOperationParameter">
            <summary>
            Provides semantics for a CsdlOperationParameter.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmOperationParameter">
            <summary>
            Represents a parameter of an EDM operation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmOperationParameter.Type">
            <summary>
            Gets the type of this operation parameter.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmOperationParameter.DeclaringOperation">
            <summary>
            Gets the operation that declared this parameter.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsModel">
            <summary>
            Provides semantics for one CsdlModel and its referenced CsdlModels.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmModelBase">
            <summary>
            Represents an EDM model.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IEdmModel">
            <summary>
            Semantic representation of an EDM model.
            </summary>
            <remarks>
            This interface, and all interfaces reachable from it, preserve certain invariants:
               -- The backing implementation of an element can be loaded or created on demand.
               -- No direct element mutation occurs through the interfaces.
            Only the MainModel and ReferencedModels properties are for referneced models scenario. all other properties and methods only focus on this model, not main/sibling/referenced models .
            </remarks>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmModel.FindDeclaredType(System.String)">
            <summary>
            Searches for a type with the given name in this model only and returns null if no such type exists.
            </summary>
            <param name="qualifiedName">The qualified name of the type being found.</param>
            <returns>The requested type, or null if no such type exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmModel.FindDeclaredBoundOperations(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Searches for bound operations based on the binding type, returns an empty enumerable if no operation exists.
            </summary>
            <param name="bindingType">Type of the binding.</param>
            <returns>A set of operations that share the binding type or empty enumerable if no such operation exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmModel.FindDeclaredBoundOperations(System.String,Microsoft.OData.Edm.IEdmType)">
            <summary>
            Searches for bound operations based on the qualified name and binding type, returns an empty enumerable if no operation exists.
            </summary>
            <param name="qualifiedName">The qualified name of the operation.</param>
            <param name="bindingType">Type of the binding.</param>
            <returns>A set of operations that share the qualified name and binding type or empty enumerable if no such operation exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmModel.FindDeclaredOperations(System.String)">
            <summary>
            Searches for operations with the given name in this model and returns an empty enumerable if no such operation exists.
            </summary>
            <param name="qualifiedName">The qualified name of the operation being found.</param>
            <returns>A set of operations sharing the specified qualified name, or an empty enumerable if no such operation exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmModel.FindDeclaredValueTerm(System.String)">
            <summary>
            Searches for a value term with the given name in this model and returns null if no such value term exists.
            </summary>
            <param name="qualifiedName">The qualified name of the value term being found.</param>
            <returns>The requested value term, or null if no such value term exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmModel.FindDeclaredVocabularyAnnotations(Microsoft.OData.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Searches for vocabulary annotations specified by this model.
            </summary>
            <param name="element">The annotated element.</param>
            <returns>The vocabulary annotations for the element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.IEdmModel.FindDirectlyDerivedTypes(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Finds a list of types that derive directly from the supplied type.
            </summary>
            <param name="baseType">The base type that derived types are being searched for.</param>
            <returns>A list of types from this model that derive directly from the given type.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmModel.SchemaElements">
            <summary>
            Gets the collection of schema elements that are contained in this model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmModel.VocabularyAnnotations">
            <summary>
            Gets the collection of vocabulary annotations that are contained in this model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmModel.ReferencedModels">
            <summary>
            Gets the collection of models referred to by this model (mainly by the this.References).
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmModel.DeclaredNamespaces">
            <summary>
            Gets the collection of namespaces that schema elements use contained in this model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmModel.DirectValueAnnotationsManager">
            <summary>
            Gets the model's annotations manager.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.IEdmModel.EntityContainer">
            <summary>
            Gets the only one entity container of the model.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModelBase.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmModel},Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmModelBase"/> class.
            </summary>
            <param name="referencedModels">Models to which this model refers.</param>
            <param name="annotationsManager">Annotations manager for the model to use.</param>
            <remarks>Only either mainModel and referencedModels should have value.</remarks>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModelBase.FindDeclaredType(System.String)">
            <summary>
            Searches for a type with the given name in this model only and returns null if no such type exists.
            </summary>
            <param name="qualifiedName">The qualified name of the type being found.</param>
            <returns>The requested type, or null if no such type exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModelBase.FindDeclaredValueTerm(System.String)">
            <summary>
            Searches for a value term with the given name in this model and returns null if no such value term exists.
            </summary>
            <param name="qualifiedName">The qualified name of the value term being found.</param>
            <returns>The requested value term, or null if no such value term exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModelBase.FindDeclaredOperations(System.String)">
            <summary>
            Searches for a operation with the given name in this model and returns null if no such operation exists.
            </summary>
            <param name="qualifiedName">The qualified name of the operation being found.</param>
            <returns>A group of operations sharing the specified qualified name, or an empty enumerable if no such operation exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModelBase.FindDeclaredBoundOperations(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Searches for bound operations based on the binding type, returns an empty enumerable if no operation exists.
            </summary>
            <param name="bindingType">Type of the binding.</param>
            <returns> A set of operations that share the binding type or empty enumerable if no such operation exists. </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModelBase.FindDeclaredBoundOperations(System.String,Microsoft.OData.Edm.IEdmType)">
            <summary>
            Searches for bound operations based on the qualified name and binding type, returns an empty enumerable if no operation exists.
            </summary>
            <param name="qualifiedName">The qualifeid name of the operation.</param>
            <param name="bindingType">Type of the binding.</param>
            <returns>
            A set of operations that share the name and binding type or empty enumerable if no such operation exists.
            </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModelBase.FindDeclaredVocabularyAnnotations(Microsoft.OData.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Searches for vocabulary annotations specified by this model or a referenced model for a given element.
            </summary>
            <param name="element">The annotated element.</param>
            <returns>The vocabulary annotations for the element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModelBase.FindDirectlyDerivedTypes(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Finds a list of types that derive directly from the supplied type.
            </summary>
            <param name="baseType">The base type that derived types are being searched for.</param>
            <returns>A list of types that derive directly from the base type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModelBase.RegisterElement(Microsoft.OData.Edm.IEdmSchemaElement)">
            <summary>
            Adds a schema element to this model.
            </summary>
            <param name="element">The element to register.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModelBase.AddReferencedModel(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Adds a model reference to this model.
            </summary>
            <param name="model">The model to reference.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmModelBase.SchemaElements">
            <summary>
            Gets the collection of schema elements that are contained in this model and referenced models.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmModelBase.DeclaredNamespaces">
            <summary>
            Gets the collection of namespaces that schema elements use contained in this model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmModelBase.VocabularyAnnotations">
            <summary>
            Gets the collection of vocabulary annotations that are contained in this model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmModelBase.ReferencedModels">
            <summary>
            Gets the collection of models referred to by this model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmModelBase.DirectValueAnnotationsManager">
            <summary>
            Gets the model's annotations manager.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmModelBase.EntityContainer">
            <summary>
            Gets the only one entity container of the model.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsModel.#ctor(Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlModel,Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmModel})">
            <summary>
            Constructor
            </summary>
            <param name="astModel">The raw CsdlModel.</param>
            <param name="annotationsManager">The IEdmDirectValueAnnotationsManager.</param>
            <param name="referencedModels">The IEdmModels to be referenced. if any element or namespce is not supposed to be include, you should have removed it before passing to this constructor.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsModel.#ctor(Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlModel,Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlModel})">
            <summary>
            Constroctur
            </summary>
            <param name="mainCsdlModel">The main raw CsdlModel.</param>
            <param name="annotationsManager">The IEdmDirectValueAnnotationsManager.</param>
            <param name="referencedCsdlModels">The referenced raw CsdlModels.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsModel.#ctor(Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlModel,Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager,Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsModel)">
            <summary>
            Constructor for creating a referenced model, is private and only called by the above constructor.
            </summary>
            <param name="referencedCsdlModel">The referenced raw CsdlModel.</param>
            <param name="annotationsManager">The IEdmDirectValueAnnotationsManager.</param>
            <param name="mainCsdlSemanticsModel">The CsdlSemanticsModel that will reference this new CsdlSemanticsModel. </param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsModel.FindDeclaredVocabularyAnnotations(Microsoft.OData.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Searches for vocabulary annotations specified by this model.
            </summary>
            <param name="element">The annotated element.</param>
            <returns>The vocabulary annotations for the element.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsModel.Errors">
            <summary>
            Gets an error if one exists with the current object.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsModel.MainModel">
            <summary>
            Gets the main model that is referencing this model. The value may be null.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsNavigationProperty">
            <summary>
            Provides semantics for a CsdlNavigationProperty.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Annotations.EdmPropertyValueBinding">
            <summary>
            Represents a property binding specified as part of an EDM type annotation.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmPropertyValueBinding.#ctor(Microsoft.OData.Edm.IEdmProperty,Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Annotations.EdmPropertyValueBinding"/> class.
            </summary>
            <param name="boundProperty">Property that is given a value by the annotation.</param>
            <param name="value">Expression producing the value of the annotation.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmPropertyValueBinding.BoundProperty">
            <summary>
            Gets the property that is given a value by the annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmPropertyValueBinding.Value">
            <summary>
            Gets the expression producing the value of the annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Annotations.EdmAnnotation">
            <summary>
            Represents an EDM annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Annotations.EdmVocabularyAnnotation">
            <summary>
            Represents an EDM annotation with an immediate value.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmVocabularyAnnotation.#ctor(Microsoft.OData.Edm.IEdmVocabularyAnnotatable,Microsoft.OData.Edm.IEdmValueTerm,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Annotations.EdmVocabularyAnnotation"/> class.
            </summary>
            <param name="target">Element the annotation applies to.</param>
            <param name="term">Term bound by the annotation.</param>
            <param name="qualifier">Qualifier used to discriminate between multiple bindings of the same property or type.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmVocabularyAnnotation.Target">
            <summary>
            Gets the element the annotation applies to.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmVocabularyAnnotation.Term">
            <summary>
            Gets the term bound by the annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmVocabularyAnnotation.Qualifier">
            <summary>
            Gets the qualifier used to discriminate between multiple bindings of the same property or type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmAnnotation.#ctor(Microsoft.OData.Edm.IEdmVocabularyAnnotatable,Microsoft.OData.Edm.IEdmValueTerm,Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Annotations.EdmAnnotation"/> class.
            </summary>
            <param name="target">Element the annotation applies to.</param>
            <param name="term">Term bound by the annotation.</param>
            <param name="value">Expression producing the value of the annotation.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmAnnotation.#ctor(Microsoft.OData.Edm.IEdmVocabularyAnnotatable,Microsoft.OData.Edm.IEdmValueTerm,System.String,Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Annotations.EdmAnnotation"/> class.
            </summary>
            <param name="target">Element the annotation applies to.</param>
            <param name="term">Term bound by the annotation.</param>
            <param name="qualifier">Qualifier used to discriminate between multiple bindings of the same property or type.</param>
            <param name="value">Expression producing the value of the annotation.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmAnnotation.Value">
            <summary>
            Gets the expression producing the value of the annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmEnumMember">
            <summary>
            Represents a member of an EDM enumeration type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEnumMember.#ctor(Microsoft.OData.Edm.IEdmEnumType,System.String,Microsoft.OData.Edm.Values.IEdmPrimitiveValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEnumMember"/> class.
            </summary>
            <param name="declaringType">The type that declares this member.</param>
            <param name="name">Name of this enumeration member.</param>
            <param name="value">Value of this enumeration member.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEnumMember.DeclaringType">
            <summary>
            Gets the type that this member belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEnumMember.Value">
            <summary>
            Gets the value of this enumeration type member.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmEnumType">
            <summary>
            Represents the definition of an Edm enumeration type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEnumType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEnumType"/> class with <see cref="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Int32"/> underlying type.
            </summary>
            <param name="namespaceName">Namespace this enumeration type belongs to.</param>
            <param name="name">Name of this enumeration type.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEnumType.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEnumType"/> class with <see cref="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Int32"/> underlying type.
            </summary>
            <param name="namespaceName">Namespace this enumeration type belongs to.</param>
            <param name="name">Name of this enumeration type.</param>
            <param name="isFlags">A value indicating whether the enumeration type can be treated as a bit field.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEnumType.#ctor(System.String,System.String,Microsoft.OData.Edm.EdmPrimitiveTypeKind,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEnumType"/> class with <see cref="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Int32"/> underlying type.
            </summary>
            <param name="namespaceName">Namespace this enumeration type belongs to.</param>
            <param name="name">Name of this enumeration type.</param>
            <param name="underlyingType">The underlying type of this enumeration type.</param>
            <param name="isFlags">A value indicating whether the enumeration type can be treated as a bit field.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEnumType.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEnumType"/> class.
            </summary>
            <param name="namespaceName">Namespace this enumeration type belongs to.</param>
            <param name="name">Name of this enumeration type.</param>
            <param name="underlyingType">The underlying type of this enumeration type.</param>
            <param name="isFlags">A value indicating whether the enumeration type can be treated as a bit field.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEnumType.AddMember(Microsoft.OData.Edm.IEdmEnumMember)">
            <summary>
            Adds a new member to this enum type.
            </summary>
            <param name="member">The member to add.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEnumType.AddMember(System.String,Microsoft.OData.Edm.Values.IEdmPrimitiveValue)">
            <summary>
            Creates and adds a new member to this enum type.
            </summary>
            <param name="name">Name of the member.</param>
            <param name="value">Value of the member.</param>
            <returns>Created member.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEnumType.TypeKind">
            <summary>
            Gets the kind of this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEnumType.SchemaElementKind">
            <summary>
            Gets the kind of this schema element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEnumType.Namespace">
            <summary>
            Gets the namespace this schema element belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEnumType.Name">
            <summary>
            Gets the name of this enumeration type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEnumType.UnderlyingType">
            <summary>
            Gets the underlying type of this enumeration type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEnumType.Members">
            <summary>
            Gets the members of this enumeration type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEnumType.IsFlags">
            <summary>
            Gets a value indicating whether the enumeration type can be treated as a bit field.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmEnumMemberReferenceExpression">
            <summary>
            Represents an EDM enumeration member reference expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmEnumMemberReferenceExpression.#ctor(Microsoft.OData.Edm.IEdmEnumMember)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmEnumMemberReferenceExpression"/> class.
            </summary>
            <param name="referencedEnumMember">Referenced enum member.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmEnumMemberReferenceExpression.ReferencedEnumMember">
            <summary>
            Gets the referenced enum member.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmEnumMemberReferenceExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpressionReferenceExpression">
            <summary>
            Represents an EDM labeled expression reference expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpressionReferenceExpression.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpressionReferenceExpression"/> class with non-initialized <see cref="P:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpressionReferenceExpression.ReferencedLabeledExpression"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpressionReferenceExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmLabeledExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpressionReferenceExpression"/> class.
            This constructor will not allow changing <see cref="P:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpressionReferenceExpression.ReferencedLabeledExpression"/> property after the EdmLabeledExpressionReferenceExpression instance has been constructed.
            </summary>
            <param name="referencedLabeledExpression">Referenced labeled element.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpressionReferenceExpression.ReferencedLabeledExpression">
            <summary>
            Gets or sets the referenced labeled element.
            The referenced labeled element can be initialized only once either using the <see cref="M:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpressionReferenceExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmLabeledExpression)"/> constructor or by assigning value directly to this property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpressionReferenceExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmNullExpression">
            <summary>
            Represents an EDM null.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.Values.EdmNullExpression.Instance">
            <summary>
            Singleton <see cref="T:Microsoft.OData.Edm.Library.Values.EdmNullExpression"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmNullExpression.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmNullExpression"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmNullExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmNullExpression.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmParameterReferenceExpression">
            <summary>
            Represents an EDM parameter reference expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmParameterReferenceExpression.#ctor(Microsoft.OData.Edm.IEdmOperationParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmParameterReferenceExpression"/> class.
            </summary>
            <param name="referencedParameter">Referenced parameter</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmParameterReferenceExpression.ReferencedParameter">
            <summary>
            Gets the referenced parameter.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmParameterReferenceExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmEnumValue">
            <summary>
            Represents an EDM enumeration type value.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmEnumValue.#ctor(Microsoft.OData.Edm.IEdmEnumTypeReference,Microsoft.OData.Edm.IEdmEnumMember)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmEnumValue"/> class. 
            </summary>
            <param name="type">A reference to the enumeration type that describes this value.</param>
            <param name="member">The enumeration type value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmEnumValue.#ctor(Microsoft.OData.Edm.IEdmEnumTypeReference,Microsoft.OData.Edm.Values.IEdmPrimitiveValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmEnumValue"/> class. 
            </summary>
            <param name="type">A reference to the enumeration type that describes this value.</param>
            <param name="value">The underlying type value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmEnumValue.Value">
            <summary>
            Gets the underlying type value of the enumeration type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmEnumValue.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmBinaryConstant">
            <summary>
            Represents an EDM binary constant.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmBinaryConstant.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmBinaryConstant"/> class.
            </summary>
            <param name="value">Integer value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmBinaryConstant.#ctor(Microsoft.OData.Edm.IEdmBinaryTypeReference,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmBinaryConstant"/> class.
            </summary>
            <param name="type">Type of the integer.</param>
            <param name="value">Integer value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmBinaryConstant.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmBinaryConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmBinaryConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmBooleanConstant">
            <summary>
            Represents an EDM boolean constant.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmBooleanConstant.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmBooleanConstant"/> class.
            </summary>
            <param name="value">Boolean value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmBooleanConstant.#ctor(Microsoft.OData.Edm.IEdmPrimitiveTypeReference,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmBooleanConstant"/> class.
            </summary>
            <param name="type">Type of the boolean.</param>
            <param name="value">Boolean value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmBooleanConstant.Value">
            <summary>
            Gets a value indicating whether the value of this boolean value is true or false.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmBooleanConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmBooleanConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmDateTimeOffsetConstant">
            <summary>
            Represents an EDM datetime with offset constant.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmDateTimeOffsetConstant.#ctor(System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmDateTimeOffsetConstant"/> class.
            </summary>
            <param name="value">DateTimeOffset value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmDateTimeOffsetConstant.#ctor(Microsoft.OData.Edm.IEdmTemporalTypeReference,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmDateTimeOffsetConstant"/> class.
            </summary>
            <param name="type">Type of the DateTimeOffset.</param>
            <param name="value">DateTimeOffset value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDateTimeOffsetConstant.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDateTimeOffsetConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDateTimeOffsetConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmDecimalConstant">
            <summary>
            Represents an EDM decimal constant.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmDecimalConstant.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmDecimalConstant"/> class.
            </summary>
            <param name="value">Decimal value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmDecimalConstant.#ctor(Microsoft.OData.Edm.IEdmDecimalTypeReference,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmDecimalConstant"/> class.
            </summary>
            <param name="type">Type of the decimal.</param>
            <param name="value">Decimal value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDecimalConstant.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDecimalConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDecimalConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmEnumTypeReference">
            <summary>
            Represents a reference to an EDM enumeration type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEnumTypeReference.#ctor(Microsoft.OData.Edm.IEdmEnumType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEnumTypeReference"/> class.
            </summary>
            <param name="enumType">The definition refered to by this reference.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmValueTermReferenceExpression">
            <summary>
            Represents an EDM value term reference expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmValueTermReferenceExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.IEdmValueTerm)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmValueTermReferenceExpression"/> class.
            </summary>
            <param name="baseExpression">Expression for the structured value containing the referenced term property.</param>
            <param name="term">Referenced value term.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmValueTermReferenceExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.IEdmValueTerm,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmValueTermReferenceExpression"/> class.
            </summary>
            <param name="baseExpression">Expression for the structured value containing the referenced term property.</param>
            <param name="term">Referenced value term.</param>
            <param name="qualifier">Qualifier.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmValueTermReferenceExpression.Base">
            <summary>
            Gets the expression for the structured value containing the referenced term property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmValueTermReferenceExpression.Term">
            <summary>
            Gets the referenced value term.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmValueTermReferenceExpression.Qualifier">
            <summary>
            Gets the optional qualifier.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmValueTermReferenceExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression">
            <summary>
            Represents an EDM record construction expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmPropertyConstructor[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression"/> class.
            </summary>
            <param name="properties">Property constructors.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression.#ctor(Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.OData.Edm.Expressions.IEdmPropertyConstructor[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression"/> class.
            </summary>
            <param name="declaredType">Declared type of the record.</param>
            <param name="properties">Property constructors.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Expressions.IEdmPropertyConstructor})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression"/> class.
            </summary>
            <param name="properties">Property constructors.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression.#ctor(Microsoft.OData.Edm.IEdmStructuredTypeReference,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Expressions.IEdmPropertyConstructor})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression"/> class.
            </summary>
            <param name="declaredType">Optional declared type of the record.</param>
            <param name="properties">Property constructors.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression.DeclaredType">
            <summary>
            Gets the declared type of the record, or null if there is no declared type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression.Properties">
            <summary>
            Gets the constructed property values.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmRecordExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmPropertyConstructor">
            <summary>
            Represents an EDM property constructor specified as part of a EDM record construction expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmPropertyConstructor.#ctor(System.String,Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmPropertyConstructor"/> class.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmPropertyConstructor.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmPropertyConstructor.Value">
            <summary>
            Gets the expression for the value of the property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmPropertyPathExpression">
            <summary>
            Represents an EDM property path expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmPropertyPathExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmPropertyPathExpression"/> class.
            </summary>
            <param name="path">Path string containing segments seperated by '/'. For example: "A.B/C/D.E/Func1(NS.T,NS.T2)/P1".</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmPropertyPathExpression.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmPropertyPathExpression"/> class.
            </summary>
            <param name="path">Path segments.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmPropertyPathExpression.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmPropertyPathExpression"/> class.
            </summary>
            <param name="path">Path segments.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmPropertyPathExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmPropertyReferenceExpression">
            <summary>
            Represents an EDM property reference expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmPropertyReferenceExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmPropertyReferenceExpression"/> class.
            </summary>
            <param name="baseExpression">Expression for the structured value containing the referenced property.</param>
            <param name="referencedProperty">Referenced property.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmPropertyReferenceExpression.Base">
            <summary>
            Gets the expression for the structured value containing the referenced property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmPropertyReferenceExpression.ReferencedProperty">
            <summary>
            Gets the referenced property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmPropertyReferenceExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmIsTypeExpression">
            <summary>
            Represents an EDM type test expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmIsTypeExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmIsTypeExpression"/> class.
            </summary>
            <param name="operand">Expression whose type is to be tested.</param>
            <param name="type">Type to test.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmIsTypeExpression.Operand">
            <summary>
            Gets the expression whose type is to be tested.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmIsTypeExpression.Type">
            <summary>
            Gets the type to be tested against.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmIsTypeExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmIfExpression">
            <summary>
            Represents an EDM if expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmIfExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmIfExpression"/> class.
            </summary>
            <param name="testExpression">Test expression</param>
            <param name="trueExpression">Expression to evaluate if <paramref name="testExpression"/> evaluates to true.</param>
            <param name="falseExpression">Expression to evaluate if <paramref name="testExpression"/> evaluates to false.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmIfExpression.TestExpression">
            <summary>
            Gets the test expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmIfExpression.TrueExpression">
            <summary>
            Gets the expression to evaluate if <see cref="P:Microsoft.OData.Edm.Library.Expressions.EdmIfExpression.TestExpression"/> evaluates to true.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmIfExpression.FalseExpression">
            <summary>
            Gets the expression to evaluate if <see cref="P:Microsoft.OData.Edm.Library.Expressions.EdmIfExpression.TestExpression"/> evaluates to false.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmIfExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmOperationReferenceExpression">
            <summary>
            Represents an EDM operation reference expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmOperationReferenceExpression.#ctor(Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmOperationReferenceExpression"/> class.
            </summary>
            <param name="referencedOperation">Referenced operation</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmOperationReferenceExpression.ReferencedOperation">
            <summary>
            Gets the referenced operation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmOperationReferenceExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmApplyExpression">
            <summary>
            Represents an EDM operation application expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmApplyExpression.#ctor(Microsoft.OData.Edm.IEdmOperation,Microsoft.OData.Edm.Expressions.IEdmExpression[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmApplyExpression"/> class.
            </summary>
            <param name="appliedOperation">Operation to apply.</param>
            <param name="arguments">Application arguments. Value may be null, in which case it is treated as an empty enumerable.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmApplyExpression.#ctor(Microsoft.OData.Edm.IEdmOperation,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Expressions.IEdmExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmApplyExpression"/> class.
            </summary>
            <param name="appliedOperation">Operation to apply.</param>
            <param name="arguments">Application arguments. Value may be null, in which case it is treated as an empty enumerable.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmApplyExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmExpression,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Expressions.IEdmExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmApplyExpression"/> class.
            </summary>
            <param name="appliedOperation">Operation to apply.</param>
            <param name="arguments">Application arguments. Value may be null, in which case it is treated as an empty enumerable.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmApplyExpression.AppliedOperation">
            <summary>
            Gets the applied operation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmApplyExpression.Arguments">
            <summary>
            Gets the arguments to the operation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmApplyExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpression">
            <summary>
            Represents an EDM labeled expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpression.#ctor(System.String,Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpression"/> class.
            </summary>
            <param name="name">Label of the expression.</param>
            <param name="expression">Underlying expression.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpression.Name">
            <summary>
            Gets the label.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpression.Expression">
            <summary>
            Gets the underlying expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmLabeledExpression.ExpressionKind">
            <summary>
            Gets the expression kind.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression">
            <summary>
            Represents an EDM multi-value construction expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmExpression[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression"/> class.
            </summary>
            <param name="elements">The constructed element values.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression.#ctor(Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Edm.Expressions.IEdmExpression[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression"/> class.
            </summary>
            <param name="declaredType">Declared type of the collection.</param>
            <param name="elements">The constructed element values.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Expressions.IEdmExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression"/> class.
            </summary>
            <param name="elements">The constructed element values.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression.#ctor(Microsoft.OData.Edm.IEdmTypeReference,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Expressions.IEdmExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression"/> class.
            </summary>
            <param name="declaredType">Declared type of the collection.</param>
            <param name="elements">The constructed element values.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression.DeclaredType">
            <summary>
            Gets the declared type of the collection.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression.Elements">
            <summary>
            Gets the constructed element values.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmCollectionExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Expressions.EdmCastExpression">
            <summary>
            Represents an EDM type assertion expression.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Expressions.EdmCastExpression.#ctor(Microsoft.OData.Edm.Expressions.IEdmExpression,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Expressions.EdmCastExpression"/> class.
            </summary>
            <param name="operand">Expression for which the type is casted.</param>
            <param name="type">Type to cast.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmCastExpression.Operand">
            <summary>
            Gets the expression for which the type is asserted.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmCastExpression.Type">
            <summary>
            Gets the asserted type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Expressions.EdmCastExpression.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmFloatingConstant">
            <summary>
            Represents an EDM floating point constant.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmFloatingConstant.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmFloatingConstant"/> class.
            </summary>
            <param name="value">Floating point value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmFloatingConstant.#ctor(Microsoft.OData.Edm.IEdmPrimitiveTypeReference,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmFloatingConstant"/> class.
            </summary>
            <param name="type">Type of the floating point.</param>
            <param name="value">Floating point value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmFloatingConstant.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmFloatingConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmFloatingConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmGuidConstant">
            <summary>
            Represents an EDM guid constant.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmGuidConstant.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmGuidConstant"/> class.
            </summary>
            <param name="value">Integer value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmGuidConstant.#ctor(Microsoft.OData.Edm.IEdmPrimitiveTypeReference,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmGuidConstant"/> class.
            </summary>
            <param name="type">Type of the integer.</param>
            <param name="value">Integer value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmGuidConstant.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmGuidConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmGuidConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmTerm">
            <summary>
            Represents an EDM value term.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTerm.#ctor(System.String,System.String,Microsoft.OData.Edm.EdmPrimitiveTypeKind)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.OData.Edm.Library.EdmTerm"/> class.
            The new term will be of the nullable primitive <paramref name="type"/>.
            </summary>
            <param name="namespaceName">Namespace of the term.</param>
            <param name="name">Name of the term.</param>
            <param name="type">Type of the term.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTerm.#ctor(System.String,System.String,Microsoft.OData.Edm.EdmPrimitiveTypeKind,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.OData.Edm.Library.EdmTerm"/> class.
            The new term will be of the nullable primitive <paramref name="type"/>.
            </summary>
            <param name="namespaceName">Namespace of the term.</param>
            <param name="name">Name of the term.</param>
            <param name="type">Type of the term.</param>
            <param name="appliesTo">AppliesTo of the term.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTerm.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmTerm"/> class.
            </summary>
            <param name="namespaceName">Namespace of the term.</param>
            <param name="name">Name of the term.</param>
            <param name="type">Type of the term.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTerm.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmTypeReference,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmTerm"/> class.
            </summary>
            <param name="namespaceName">Namespace of the term.</param>
            <param name="name">Name of the term.</param>
            <param name="type">Type of the term.</param>
            <param name="appliesTo">AppliesTo of the term.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmTerm.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmTypeReference,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmTerm"/> class.
            </summary>
            <param name="namespaceName">Namespace of the term.</param>
            <param name="name">Name of the term.</param>
            <param name="type">Type of the term.</param>
            <param name="appliesTo">AppliesTo of the term.</param>
            <param name="defaultValue">DefaultValue of the term.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTerm.Namespace">
            <summary>
            Gets the namespace of this term.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTerm.TermKind">
            <summary>
            Gets the kind of this term.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTerm.Type">
            <summary>
            Gets the type of this term.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTerm.AppliesTo">
            <summary>
            Gets the AppliesTo of this term.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTerm.DefaultValue">
            <summary>
            Gets the DefaultValue of this term.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmTerm.SchemaElementKind">
            <summary>
            Gets the schema element kind of this term.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmCollectionType">
            <summary>
            Represents a definition of an EDM collection type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCollectionType.#ctor(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmCollectionType"/> class.
            </summary>
            <param name="elementType">The type of the elements in this collection.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmCollectionType.TypeKind">
            <summary>
            Gets the kind of this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmCollectionType.ElementType">
            <summary>
            Gets the element type of this collection type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmCollectionTypeReference">
            <summary>
            Represents a reference to an EDM collection type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCollectionTypeReference.#ctor(Microsoft.OData.Edm.IEdmCollectionType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmCollectionTypeReference"/> class.
            </summary>
            <param name="collectionType">The type definition this reference refers to.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmCollectionValue">
            <summary>
            Represents an EDM collection value.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmCollectionValue.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Values.IEdmDelayedValue})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmCollectionValue"/> class. 
            </summary>
            <param name="type">A reference to a collection type that describes this collection value</param>
            <param name="elements">The collection of values stored in this collection value</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmCollectionValue.Elements">
            <summary>
            Gets the values stored in this collection.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmCollectionValue.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsProperty">
            <summary>
            Provides semantics for a CsdlProperty.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsSchema">
            <summary>
            Provides semantics for CsdlSchema.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsSchema.AttachDefaultPrimitiveValueConverter(Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlTypeDefinition)">
            <summary>
            Attach DefaultPrimitiveValueConverter to the model if the name and the underlying type of the given type definition
            matches the default unsigned int type definitions defined in <see cref="T:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants"/>.
            </summary>
            <param name="typeDefinition">The type definition to be added to the schema.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsSchema.ComputeLabeledExpressions">
            <summary>
            All of the labeled expressions in a schema are collected into a dictionary so that references to them can be bound.
            The elements of the dictionary are Csdl objects and not CsdlSemantics objects because the semantics objects are not created
            until and unless necessary. 
            </summary>
            <returns>A dictionary containing entries for all labeled expressions in the schema.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsSchema.LabeledExpressions">
            <summary>
            Gets the labeled element expressions dictionary.
            Each value in the dictionary is either a <see cref="T:Microsoft.OData.Edm.Csdl.Parsing.Ast.CsdlLabeledExpression"/> or a list of same.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsStringTypeReference">
            <summary>
            Provides the semantics of a reference to an EDM String type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsTemporalTypeReference">
            <summary>
            Provides the semantics of a reference to an EDM temporal type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.ExtensionMethods">
            <summary>
            Contains extension methods for <see cref="T:Microsoft.OData.Edm.IEdmModel"/> interfaces.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetEdmVersion(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets the value for the EDM version of the <paramref name="model"/>.
            </summary>
            <param name="model">Model the version has been set for.</param>
            <returns>The version.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetEdmVersion(Microsoft.OData.Edm.IEdmModel,System.Version)">
            <summary>
            Sets a value of EDM version attribute of the <paramref name="model"/>.
            </summary>
            <param name="model">The model the version should be set for.</param>
            <param name="version">The version.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindType(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Searches for a type with the given name in this model and all referenced models and returns null if no such type exists.
            </summary>
            <param name="model">The model to search.</param>
            <param name="qualifiedName">The qualified name of the type being found.</param>
            <returns>The requested type, or null if no such type exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindBoundOperations(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType)">
            <summary>
            Searches for bound operations based on the binding type, returns an empty enumerable if no operation exists.
            </summary>
            <param name="model">The model to search.</param>
            <param name="bindingType">Type of the binding.</param>
            <returns>A set of operations that share the binding type or empty enumerable if no such operation exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindBoundOperations(Microsoft.OData.Edm.IEdmModel,System.String,Microsoft.OData.Edm.IEdmType)">
            <summary>
            Searches for bound operations based on the qualified name and binding type, returns an empty enumerable if no operation exists.
            </summary>
            <param name="model">The model to search.</param>
            <param name="qualifiedName">The qualified name of the operation.</param>
            <param name="bindingType">Type of the binding.</param>
            <returns>A set of operations that share the qualified name and binding type or empty enumerable if no such operation exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindValueTerm(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Searches for a value term with the given name in this model and all referenced models and returns null if no such value term exists.
            </summary>
            <param name="model">The model to search.</param>
            <param name="qualifiedName">The qualified name of the value term being found.</param>
            <returns>The requested value term, or null if no such value term exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindOperations(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Searches for operations with the given name in this model and all referenced models and returns an empty enumerable if no such operations exist.
            </summary>
            <param name="model">The model to search.</param>
            <param name="qualifiedName">The qualified name of the operations being found.</param>
            <returns>The requested operations.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.ExistsContainer(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            If the container name in the model is the same as the input name. The input name maybe full qualified name.
            </summary>
            <param name="model">The model to search.</param>
            <param name="containerName">Input container name to be searched. The container name may be full qualified with namesapce prefix.</param>
            <returns>True if the model has a container called input name, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindEntityContainer(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Searches for an entity container with the given name in this model and all referenced models and returns null if no such entity container exists.
            </summary>
            <param name="model">The model to search.</param>
            <param name="qualifiedName">The qualified name of the entity container being found.</param>
            <returns>The requested entity container, or null if no such entity container exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindVocabularyAnnotationsIncludingInheritedAnnotations(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Gets an annotatable element's vocabulary annotations defined in a specific model and models referenced by that model.
            </summary>
            <param name="model">The model to search.</param>
            <param name="element">Element to check for annotations.</param>
            <returns>Annotations attached to the element (or, if the element is a type, to its base types) by this model or by models referenced by this model.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindVocabularyAnnotations(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Gets an annotatable element's vocabulary annotations defined in a specific model and models referenced by that model.
            </summary>
            <param name="model">The model to search.</param>
            <param name="element">Element to check for annotations.</param>
            <returns>Annotations attached to the element by this model or by models referenced by this model.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindVocabularyAnnotations``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,Microsoft.OData.Edm.IEdmTerm)">
            <summary>
            Gets an annotatable element's vocabulary annotations that bind a particular term.
            </summary>
            <typeparam name="T">Type of the annotation being returned.</typeparam>
            <param name="model">Model to search.</param>
            <param name="element">Element to check for annotations.</param>
            <param name="term">Term to search for.</param>
            <returns>Annotations attached to the element by this model or by models referenced by this model that bind the term.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindVocabularyAnnotations``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,Microsoft.OData.Edm.IEdmTerm,System.String)">
            <summary>
            Gets an annotatable element's vocabulary annotations that bind a particular term.
            </summary>
            <typeparam name="T">Type of the annotation being returned.</typeparam>
            <param name="model">Model to search.</param>
            <param name="element">Element to check for annotations.</param>
            <param name="term">Term to search for.</param>
            <param name="qualifier">Qualifier to apply.</param>
            <returns>Annotations attached to the element by this model or by models referenced by this model that bind the term with the given qualifier.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindVocabularyAnnotations``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,System.String)">
            <summary>
            Gets an annotatable element's vocabulary annotations that bind a particular term.
            </summary>
            <typeparam name="T">Type of the annotation being returned.</typeparam>
            <param name="model">Model to search.</param>
            <param name="element">Element to check for annotations.</param>
            <param name="termName">Name of the term to search for.</param>
            <returns>Annotations attached to the element by this model or by models referenced by this model that bind the term.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindVocabularyAnnotations``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,System.String,System.String)">
            <summary>
            Gets an annotatable element's vocabulary annotations that bind a particular term.
            </summary>
            <typeparam name="T">Type of the annotation being returned.</typeparam>
            <param name="model">Model to search.</param>
            <param name="element">Element to check for annotations.</param>
            <param name="termName">Name of the term to search for.</param>
            <param name="qualifier">Qualifier to apply.</param>
            <returns>Annotations attached to the element by this model or by models referenced by this model that bind the term with the given qualifier.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.Values.IEdmStructuredValue,System.String,Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.Values.IEdmValue"/> of a vocabulary term that has been applied to the type of a value.
            </summary>
            <param name="model">Model to search for term annotations.</param>
            <param name="context">Value to use as context in evaluation.</param>
            <param name="termName">Name of the term to evaluate.</param>
            <param name="expressionEvaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.Values.IEdmStructuredValue,System.String,System.String,Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.Values.IEdmValue"/> of a vocabulary term that has been applied to the type of a value.
            </summary>
            <param name="model">Model to search for term annotations.</param>
            <param name="context">Value to use as context in evaluation.</param>
            <param name="termName">Name of the term to evaluate.</param>
            <param name="qualifier">Qualifier to apply.</param>
            <param name="expressionEvaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.Values.IEdmStructuredValue,Microsoft.OData.Edm.IEdmValueTerm,Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.Values.IEdmValue"/> of a vocabulary term that has been applied to the type of a value.
            </summary>
            <param name="model">Model to search for term annotations.</param>
            <param name="context">Value to use as context in evaluation.</param>
            <param name="term">Term to evaluate.</param>
            <param name="expressionEvaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.Values.IEdmStructuredValue,Microsoft.OData.Edm.IEdmValueTerm,System.String,Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.Values.IEdmValue"/> of a vocabulary term that has been applied to the type of a value.
            </summary>
            <param name="model">Model to search for term annotations.</param>
            <param name="context">Value to use as context in evaluation.</param>
            <param name="term">Term to evaluate.</param>
            <param name="qualifier">Qualifier to apply.</param>
            <param name="expressionEvaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.Values.IEdmStructuredValue,System.String,Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator)">
            <summary>
            Gets the CLR value of a vocabulary term that has been applied to the type of a value.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="model">Model to search for term annotations.</param>
            <param name="context">Value to use as context in evaluation.</param>
            <param name="termName">Name of the term to evaluate.</param>
            <param name="evaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.Values.IEdmStructuredValue,System.String,System.String,Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator)">
            <summary>
            Gets the CLR value of a vocabulary term that has been applied to the type of a value.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="model">Model to search for term annotations.</param>
            <param name="context">Value to use as context in evaluation.</param>
            <param name="termName">Name of the term to evaluate.</param>
            <param name="qualifier">Qualifier to apply.</param>
            <param name="evaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.Values.IEdmStructuredValue,Microsoft.OData.Edm.IEdmValueTerm,Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator)">
            <summary>
            Gets the CLR value of a vocabulary term that has been applied to the type of a value.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="model">Model to search for term annotations.</param>
            <param name="context">Value to use as context in evaluation.</param>
            <param name="term">Term to evaluate.</param>
            <param name="evaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.Values.IEdmStructuredValue,Microsoft.OData.Edm.IEdmValueTerm,System.String,Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator)">
            <summary>
            Gets the CLR value of a vocabulary term that has been applied to the type of a value.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="model">Model to search for term annotations.</param>
            <param name="context">Value to use as context in evaluation.</param>
            <param name="term">Term to evaluate.</param>
            <param name="qualifier">Qualifier to apply.</param>
            <param name="evaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,System.String,Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.Values.IEdmValue"/> of a vocabulary term that has been applied to an element.
            </summary>
            <param name="model">Model to search for term annotations.</param>
            <param name="element">Annotated element.</param>
            <param name="termName">Name of the term to evaluate.</param>
            <param name="expressionEvaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,System.String,System.String,Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.Values.IEdmValue"/> of a vocabulary term that has been applied to an element.
            </summary>
            <param name="model">Model to search for term annotations.</param>
            <param name="element">Annotated element.</param>
            <param name="termName">Name of the term to evaluate.</param>
            <param name="qualifier">Qualifier to apply.</param>
            <param name="expressionEvaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,Microsoft.OData.Edm.IEdmValueTerm,Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.Values.IEdmValue"/> of a vocabulary term that has been applied to an element.
            </summary>
            <param name="model">Model to search for term annotations.</param>
            <param name="element">Annotated element.</param>
            <param name="term">Term to evaluate.</param>
            <param name="expressionEvaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,Microsoft.OData.Edm.IEdmValueTerm,System.String,Microsoft.OData.Edm.Evaluation.EdmExpressionEvaluator)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.Values.IEdmValue"/> of a vocabulary term that has been applied to an element.
            </summary>
            <param name="model">Model to search for term annotations.</param>
            <param name="element">Annotated element.</param>
            <param name="term">Term to evaluate.</param>
            <param name="qualifier">Qualifier to apply.</param>
            <param name="expressionEvaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,System.String,Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator)">
            <summary>
            Gets the CLR value of a vocabulary term that has been applied to an element.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="model">Model to search for term annotations.</param>
            <param name="element">Annotated element.</param>
            <param name="termName">Name of the term to evaluate.</param>
            <param name="evaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,System.String,System.String,Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator)">
            <summary>
            Gets the CLR value of a vocabulary term that has been applied to an element.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="model">Model to search for term annotations.</param>
            <param name="element">Annotated element.</param>
            <param name="termName">Name of the term to evaluate.</param>
            <param name="qualifier">Qualifier to apply.</param>
            <param name="evaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,Microsoft.OData.Edm.IEdmValueTerm,Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator)">
            <summary>
            Gets the CLR value of a vocabulary term that has been applied to an element.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="model">Model to search for term annotations.</param>
            <param name="element">Annotated element.</param>
            <param name="term">Term to evaluate.</param>
            <param name="evaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetTermValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,Microsoft.OData.Edm.IEdmValueTerm,System.String,Microsoft.OData.Edm.Evaluation.EdmToClrEvaluator)">
            <summary>
            Gets the CLR value of a vocabulary term that has been applied to an element.
            </summary>
            <typeparam name="T">The CLR type of the value to be returned.</typeparam>
            <param name="model">Model to search for term annotations.</param>
            <param name="element">Annotated element.</param>
            <param name="term">Term to evaluate.</param>
            <param name="qualifier">Qualifier to apply.</param>
            <param name="evaluator">Evaluator to use to perform expression evaluation.</param>
            <returns>Value of the term evaluated against the supplied value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetAnnotationValue(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmElement,System.String,System.String)">
            <summary>
            Gets an annotation value corresponding to the given namespace and name provided.
            </summary>
            <param name="model">The model containing the annotation.</param>
            <param name="element">The annotated element.</param>
            <param name="namespaceName">Namespace of the annotation.</param>
            <param name="localName">Name of the annotation inside the namespace.</param>
            <returns>The requested annotation value, if it exists. Otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetAnnotationValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmElement,System.String,System.String)">
            <summary>
            Gets an annotation value corresponding to the given namespace and name provided.
            </summary>
            <typeparam name="T">Type of the annotation being returned.</typeparam>
            <param name="model">The model containing the annotation.</param>
            <param name="element">The annotated element.</param>
            <param name="namespaceName">Namespace of the annotation.</param>
            <param name="localName">Name of the annotation inside the namespace.</param>
            <returns>The requested annotation value, if it exists. Otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetAnnotationValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmElement)">
            <summary>
            Gets an annotation value from an annotatable element.
            </summary>
            <typeparam name="T">Type of the annotation being returned.</typeparam>
            <param name="model">The model containing the annotation.</param>
            <param name="element">The annotated element.</param>
            <returns>The requested annotation, if it exists. Otherwise, null.</returns>
            <remarks>
            Strongly-typed wrappers for unnamed annotations keyed by CLR type.
            </remarks>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetAnnotationValue(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmElement,System.String,System.String,System.Object)">
            <summary>
            Sets an annotation value for an EDM element. If the value is null, no annotation is added and an existing annotation with the same name is removed.
            </summary>
            <param name="model">The model containing the annotation.</param>
            <param name="element">The annotated element.</param>
            <param name="namespaceName">Namespace that the annotation belongs to.</param>
            <param name="localName">Name of the annotation within the namespace.</param>
            <param name="value">Value of the new annotation.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetDescriptionAnnotation(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Gets description for term Org.OData.Core.V1.Description from a target annotatable
            </summary>
            <param name="model">The model referenced to.</param>
            <param name="target">The target Annotatable to find annotation</param>
            <returns>Description for term Org.OData.Core.V1.Description</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetLongDescriptionAnnotation(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Gets description for term Org.OData.Core.V1.LongDescription from a target annotatable
            </summary>
            <param name="model">The model referenced to.</param>
            <param name="target">The target Annotatable to find annotation</param>
            <returns>Description for term Org.OData.Core.V1.LongDescription</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SchemaElementsAcrossModels(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets all schema elements from the model, and models referenced by it.
            </summary>
            <param name="model">Model to search for elements</param>
            <returns>Schema elements from the model, and models referenced by it.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindAllDerivedTypes(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Finds a list of types that derive from the supplied type directly or indirectly, and across models.
            </summary>
            <param name="model">The model types are being found on.</param>
            <param name="baseType">The base type that derived types are being searched for.</param>
            <returns>A list of types that derive from the type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetAnnotationValue``1(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmElement,``0)">
            <summary>
            Sets an annotation value on an annotatable element.
            </summary>
            <typeparam name="T">Type of the annotation being set.</typeparam>
             <param name="model">The model containing the annotation.</param>
            <param name="element">The annotated element.</param>
            <param name="value">Value of the new annotation.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetAnnotationValues(Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding})">
            <summary>
            Retrieves a set of annotation values. For each requested value, returns null if no annotation with the given name exists for the given element.
            </summary>
            <param name="model">The model in which to find the annotations.</param>
            <param name="annotations">The set of requested annotations.</param>
            <returns>Returns values that correspond to the provided annotations. A value is null if no annotation with the given name exists for the given element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetAnnotationValues(Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationBinding})">
            <summary>
            Sets a set of annotation values. If a supplied value is null, no annotation is added and an existing annotation with the same name is removed.
            </summary>
            <param name="model">The model in which to set the annotations.</param>
            <param name="annotations">The annotations to set.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.DirectValueAnnotations(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmElement)">
            <summary>
            Gets the direct value annotations for an element.
            </summary>
            <param name="model">The model containing the annotations.</param>
            <param name="element">The annotated element.</param>
            <returns>The immediate value annotations of the element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.TryFindContainerQualifiedEntitySet(Microsoft.OData.Edm.IEdmModel,System.String,Microsoft.OData.Edm.IEdmEntitySet@)">
            <summary>
            Finds the entity set with qualified entity set name (not simple entity set name).
            </summary>
            <param name="model">The model.</param>
            <param name="containerQualifiedEntitySetName">Name of the container qualified element, can be an OperationImport or an EntitySet.</param>
            <param name="entitySet">The Entity Set that was found.</param>
            <returns>True if an entityset was found from the qualified container name, false if none were found.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.TryFindContainerQualifiedSingleton(Microsoft.OData.Edm.IEdmModel,System.String,Microsoft.OData.Edm.IEdmSingleton@)">
            <summary>
            Finds the singleton.
            </summary>
            <param name="model">The model.</param>
            <param name="containerQualifiedSingletonName">Name of the container qualified singleton element.</param>
            <param name="singleton">The singleton that was found.</param>
            <returns>True if an singleton was found from the qualified container name, false if none were found.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.TryFindContainerQualifiedOperationImports(Microsoft.OData.Edm.IEdmModel,System.String,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmOperationImport}@)">
            <summary>
            Tries the find container qualified operation imports.
            </summary>
            <param name="model">The model.</param>
            <param name="containerQualifiedOperationImportName">Name of the container qualified operation import.</param>
            <param name="operationImports">The operation imports.</param>
            <returns>True if OperationImports are found, false if none were found.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindDeclaredEntitySet(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Searches for entity set by the given name that may be container qualified in default container and .Extends containers.
            </summary>
            <param name="model">The model to search.</param>
            <param name="qualifiedName">The name which might be container qualified. If no container name is provided, then default container will be searched.</param>
            <returns>The entity set found or empty if none found.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindDeclaredSingleton(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Searches for singleton by the given name that may be container qualified in default container and .Extends containers. If no container name is provided, then default container will be searched.
            </summary>
            <param name="model">The model to search.</param>
            <param name="qualifiedName">The name which might be container qualified. If no container name is provided, then default container will be searched.</param>
            <returns>The singleton found or empty if none found.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindDeclaredNavigationSource(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Searches for entity set or singleton by the given name that may be container qualified in default container and .Extends containers. If no container name is provided, then default container will be searched.
            </summary>
            <param name="model">The model to search.</param>
            <param name="qualifiedName">The name which might be container qualified. If no container name is provided, then default container will be searched.</param>
            <returns>The entity set or singleton found or empty if none found.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindDeclaredOperationImports(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Searches for the operation imports by the specified name in default container and .Extends containers, returns an empty enumerable if no operation import exists.
            </summary>
            <param name="model">The model to search.</param>
            <param name="qualifiedName">The qualified name of the operation import which may or may not include the container name.</param>
            <returns>All operation imports that can be found by the specified name, returns an empty enumerable if no operation import exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetPrimitiveValueConverter(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Get the primitive value converter for the given type definition in the model.
            </summary>
            <param name="model">The model involved.</param>
            <param name="type">The reference to a type definition.</param>
            <returns>The primitive value converter for the type definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetPrimitiveValueConverter(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmTypeDefinitionReference,Microsoft.OData.Edm.PrimitiveValueConverters.IPrimitiveValueConverter)">
            <summary>
            Set the primitive value converter for the given type definition in the model.
            </summary>
            <param name="model">The model involved.</param>
            <param name="typeDefinition">The reference to a type definition.</param>
            <param name="converter">The primitive value converter for the type definition.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetOptimisticConcurrencyAnnotation(Microsoft.OData.Edm.Library.EdmModel,Microsoft.OData.Edm.IEdmEntitySet,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmStructuralProperty})">
            <summary>
            Set annotation Org.OData.Core.V1.OptimisticConcurrency to EntitySet
            </summary>
            <param name="model">The model to add annotation</param>
            <param name="target">The target entitySet to set the inline annotation</param>
            <param name="properties">The PropertyPath for annotation</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetOptimisticConcurrencyControlAnnotation(Microsoft.OData.Edm.Library.EdmModel,Microsoft.OData.Edm.IEdmEntitySet,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmStructuralProperty})">
            <summary>
            Set annotation Org.OData.Core.V1.OptimisticConcurrencyControl to EntitySet
            </summary>
            <param name="model">The model to add annotation</param>
            <param name="target">The target entitySet to set the inline annotation</param>
            <param name="properties">The PropertyPath for annotation</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetDescriptionAnnotation(Microsoft.OData.Edm.Library.EdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,System.String)">
            <summary>
            Set Org.OData.Core.V1.Description to target.
            </summary>
            <param name="model">The model referenced to.</param>
            <param name="target">The target Annotatable to add annotation.</param>
            <param name="description">Decription to be added.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetLongDescriptionAnnotation(Microsoft.OData.Edm.Library.EdmModel,Microsoft.OData.Edm.IEdmVocabularyAnnotatable,System.String)">
            <summary>
            Set Org.OData.Core.V1.LongDescription to target.
            </summary>
            <param name="model">The model referenced to.</param>
            <param name="target">The target Annotatable to add annotation.</param>
            <param name="description">Decription to be added.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetChangeTrackingAnnotation(Microsoft.OData.Edm.Library.EdmModel,Microsoft.OData.Edm.IEdmEntityContainer,System.Boolean)">
            <summary>
            Set Org.OData.Capabilities.V1.ChangeTracking to target.
            </summary>
            <param name="model">The model referenced to.</param>
            <param name="target">The target entity container to set the inline annotation.</param>
            <param name="isSupported">This entity set supports the odata.track-changes preference.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetChangeTrackingAnnotation(Microsoft.OData.Edm.Library.EdmModel,Microsoft.OData.Edm.IEdmEntitySet,System.Boolean,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmStructuralProperty},System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmNavigationProperty})">
            <summary>
            Set Org.OData.Capabilities.V1.ChangeTracking to target.
            </summary>
            <param name="model">The model referenced to.</param>
            <param name="target">The target entity set to set the inline annotation.</param>
            <param name="isSupported">This entity set supports the odata.track-changes preference.</param>
            <param name="filterableProperties">Change tracking supports filters on these properties.</param>
            <param name="expandableProperties">Change tracking supports these properties expanded.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetUInt16(Microsoft.OData.Edm.Library.EdmModel,System.String,System.Boolean)">
            <summary>
            Get type reference to the default UInt16 type definition.
            The default underlying type is <see cref="F:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants.DefaultUInt16UnderlyingType"/>.
            If the user has already defined his own UInt16, this method will not define anything and simply returns the type reference.
            </summary>
            <param name="model">The model involved</param>
            <param name="namespaceName">The name of the namespace where the type definition resides.</param>
            <param name="isNullable">Indicate if the type definition reference is nullable.</param>
            <returns>The nullable type reference to UInt16 type definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetUInt32(Microsoft.OData.Edm.Library.EdmModel,System.String,System.Boolean)">
            <summary>
            Get type reference to the default UInt32 type definition.
            The default underlying type is <see cref="F:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants.DefaultUInt32UnderlyingType"/>.
            If the user has already defined his own UInt32, this method will not define anything and simply returns the type reference.
            </summary>
            <param name="model">The model involved</param>
            <param name="namespaceName">The name of the namespace where the type definition resides.</param>
            <param name="isNullable">Indicate if the type definition reference is nullable.</param>
            <returns>The nullable type reference to UInt32 type definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetUInt64(Microsoft.OData.Edm.Library.EdmModel,System.String,System.Boolean)">
            <summary>
            Get type reference to the default UInt64 type definition.
            The default underlying type is <see cref="F:Microsoft.OData.Edm.PrimitiveValueConverters.PrimitiveValueConverterConstants.DefaultUInt64UnderlyingType"/>.
            If the user has already defined his own UInt64, this method will not define anything and simply returns the type reference.
            </summary>
            <param name="model">The model involved</param>
            <param name="namespaceName">The name of the namespace where the type definition resides.</param>
            <param name="isNullable">Indicate if the type definition reference is nullable.</param>
            <returns>The nullable type reference to UInt64 type definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.Location(Microsoft.OData.Edm.IEdmElement)">
            <summary>
            Gets the location of this element.
            </summary>
            <param name="item">Reference to the calling object.</param>
            <returns>The location of the element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.VocabularyAnnotations(Microsoft.OData.Edm.IEdmVocabularyAnnotatable,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets an annotatable element's vocabulary annotations as seen from a particular model.
            </summary>
            <param name="element">Reference to the calling object.</param>
            <param name="model">Model to check for annotations.</param>
            <returns>Annotations attached to the element by the model or by models referenced by the model.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FullName(Microsoft.OData.Edm.IEdmSchemaElement)">
            <summary>
            Gets the full name of the element.
            </summary>
            <param name="element">Reference to the calling object.</param>
            <returns>The full name of the element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.ShortQualifiedName(Microsoft.OData.Edm.IEdmSchemaElement)">
            <summary>
            Gets the Short Qualified name of the element.
            </summary>
            <param name="element">Reference to the calling object.</param>
            <returns>The short qualified name of the element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.EntitySets(Microsoft.OData.Edm.IEdmEntityContainer)">
            <summary>
            Returns entity sets belonging to an IEdmEntityContainer.
            </summary>
            <param name="container">Reference to the calling object.</param>
            <returns>Entity sets belonging to an IEdmEntityContainer.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.Singletons(Microsoft.OData.Edm.IEdmEntityContainer)">
            <summary>
            Returns singletons belonging to an IEdmEntityContainer.
            </summary>
            <param name="container">Reference to the calling object.</param>
            <returns>Singletons belonging to an IEdmEntityContainer.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.OperationImports(Microsoft.OData.Edm.IEdmEntityContainer)">
            <summary>
            Returns operation imports belonging to an IEdmEntityContainer.
            </summary>
            <param name="container">Reference to the calling object.</param>
            <returns>Operation imports belonging to an IEdmEntityContainer.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.TypeKind(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets the type kind of the type references definition.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The type kind of the reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FullName(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets the full name of the definition referred to by the type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The full name of this references definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.ShortQualifiedName(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets the short qualified name of the definition referred to by the type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The short qualified name of this references definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FullTypeName(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Gets the full name of the definition referred to by the type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The full name of this references definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.PrimitiveDefinition(Microsoft.OData.Edm.IEdmPrimitiveTypeReference)">
            <summary>
            Gets the definition of this primitive type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>Definition of this primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.PrimitiveKind(Microsoft.OData.Edm.IEdmPrimitiveTypeReference)">
            <summary>
            Gets the primitive kind of the definition referred to by this type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>Primitive kind of the definition of this reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.Properties(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Gets all properties of the structured type definition and its base types.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>Properties of this type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.DeclaredStructuralProperties(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Gets all structural properties declared in the IEdmStructuredTypeDefinition.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>All structural properties declared in the IEdmStructuredTypeDefinition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.StructuralProperties(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Gets the structural properties declared in this type definition and all base types.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The structural properties declared in this type definition and all base types.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.StructuredDefinition(Microsoft.OData.Edm.IEdmStructuredTypeReference)">
            <summary>
            Gets the definition of this structured type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The definition of this structured type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.IsAbstract(Microsoft.OData.Edm.IEdmStructuredTypeReference)">
            <summary>
            Returns true if the definition of this reference is abstract.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>If the definition of this reference is abstract.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.IsOpen(Microsoft.OData.Edm.IEdmStructuredTypeReference)">
            <summary>
            Returns true if the definition of this reference is open.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>If the definition of this reference is open.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.BaseType(Microsoft.OData.Edm.IEdmStructuredTypeReference)">
            <summary>
            Returns the base type of the definition of this reference. 
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The base type of the definition of this reference. </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.DeclaredStructuralProperties(Microsoft.OData.Edm.IEdmStructuredTypeReference)">
            <summary>
            Gets all structural properties declared in the definition of this reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>All structural properties declared in the definition of this reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.StructuralProperties(Microsoft.OData.Edm.IEdmStructuredTypeReference)">
            <summary>
            Gets all structural properties declared in the definition of this reference and all its base types.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>All structural properties declared in the definition of this reference and all its base types.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindProperty(Microsoft.OData.Edm.IEdmStructuredTypeReference,System.String)">
            <summary>
            Finds a property from the definition of this reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <param name="name">Name of the property to find.</param>
            <returns>The requested property if it exists. Otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.BaseEntityType(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Gets the base type of this entity type definition.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The base type of this entity type definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.DeclaredNavigationProperties(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Gets the navigation properties declared in this entity definition.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The navigation properties declared in this entity definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.NavigationProperties(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Get the navigation properties declared in this entity type and all base types.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The navigation properties declared in this entity type and all base types.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.Key(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Gets the declared key of the most defined entity with a declared key present.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>Key of this type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.HasDeclaredKeyProperty(Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            Checks whether the given entity type has the <paramref name="property"/> as one of the key properties.
            </summary>
            <param name="entityType">Given entity type.</param>
            <param name="property">Property to be searched for.</param>
            <returns><c>true</c> if the type or base types has given property declared as key. <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.EntityDefinition(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Gets the definition of this entity reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The definition of this entity reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.BaseEntityType(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Gets the base type of the definition of this reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The base type of the definition of this reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.Key(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Gets the entity key of the definition of this reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The entity key of the definition of this reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.NavigationProperties(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Gets the navigation properties declared in the definition of this reference and its base types.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The navigation properties declared in the definition of this reference and its base types.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.DeclaredNavigationProperties(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Gets the navigation properties declared in the definition of this reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The navigation properties declared in the definition of this reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindNavigationProperty(Microsoft.OData.Edm.IEdmEntityTypeReference,System.String)">
            <summary>
            Finds a navigation property declared in the definition of this reference by name.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <param name="name">Name of the navigation property to find.</param>
            <returns>The requested navigation property if it exists. Otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.BaseComplexType(Microsoft.OData.Edm.IEdmComplexType)">
            <summary>
            Gets the base type of this references definition.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The base type of this references definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.ComplexDefinition(Microsoft.OData.Edm.IEdmComplexTypeReference)">
            <summary>
            Gets the definition of this reference typed as an IEdmComplexTypeDefinition.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The definition of this reference typed as an IEdmComplexTypeDefinition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.BaseComplexType(Microsoft.OData.Edm.IEdmComplexTypeReference)">
            <summary>
            Gets the base type of this reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The base type of this reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.EntityReferenceDefinition(Microsoft.OData.Edm.IEdmEntityReferenceTypeReference)">
            <summary>
            Gets the definition of this entity reference type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The definition of this entity reference type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.EntityType(Microsoft.OData.Edm.IEdmEntityReferenceTypeReference)">
            <summary>
            Gets the entity type referred to by the definition of this entity reference type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The entity type referred to by the definition of this entity reference type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.CollectionDefinition(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Gets the definition of this collection reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The definition of this collection reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.ElementType(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Gets the element type of the definition of this collection reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The element type of the definition of this collection reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.EnumDefinition(Microsoft.OData.Edm.IEdmEnumTypeReference)">
            <summary>
            Gets the definition of this enumeration reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The definition of this enumeration reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.TypeDefinition(Microsoft.OData.Edm.IEdmTypeDefinitionReference)">
            <summary>
            Gets the definition of this type definition reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The definition of this type definition reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.TargetMultiplicity(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Gets the multiplicity of the target of this navigation.
            </summary>
            <param name="property">Reference to the calling object.</param>
            <returns>The multiplicity of the target end of the relationship.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.ToEntityType(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Gets the entity type targeted by this navigation property.
            </summary>
            <param name="property">Reference to the calling object.</param>
            <returns>The entity type targeted by this navigation property.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.DeclaringEntityType(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Gets the entity type declaring this navigation property.
            </summary>
            <param name="property">Reference to the calling object.</param>
            <returns>The entity type that declares this navigation property.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.IsPrincipal(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Gets whether this navigation property originates at the principal end of an association.
            </summary>
            <param name="navigationProperty">The navigation property.</param>
            <returns>Whether this navigation property originates at the principal end of an association.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.DependentProperties(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Gets the dependent properties of this navigation property, returning null if this is the principal entity or if there is no referential constraint.
            </summary>
            <param name="navigationProperty">The navigation property.</param>
            <returns>The dependent properties of this navigation property, returning null if this is the principal entity or if there is no referential constraint.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.PrincipalProperties(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Gets the principal properties of this navigation property, returning null if this is the principal entity or if there is no referential constraint.
            </summary>
            <param name="navigationProperty">The navigation property.</param>
            <returns>The principal properties of this navigation property, returning null if this is the principal entity or if there is no referential constraint.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.ValueTerm(Microsoft.OData.Edm.Annotations.IEdmValueAnnotation)">
            <summary>
            Gets the value term of this value annotation.
            </summary>
            <param name="annotation">Reference to the calling object.</param>
            <returns>The value term of this value annotation.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.TryGetRelativeEntitySetPath(Microsoft.OData.Edm.IEdmOperation,Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmOperationParameter@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmNavigationProperty}@,Microsoft.OData.Edm.IEdmEntityType@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Tries to get the relative entity set path.
            </summary>
            <param name="operation">The operation to resolve the entitySet path.</param>
            <param name="model">The model.</param>
            <param name="parameter">The parameter.</param>
            <param name="relativePath">The relative path.</param>
            <param name="lastEntityType">Last type of the entity.</param>
            <param name="errors">The errors.</param>
            <returns>True if a Entity set path is found, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.IsActionImport(Microsoft.OData.Edm.IEdmOperationImport)">
            <summary>
            Determines whether [is action import] [the specified operation import].
            </summary>
            <param name="operationImport">The operation import.</param>
            <returns>
              <c>true</c> if [is action import] [the specified operation import]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.IsFunctionImport(Microsoft.OData.Edm.IEdmOperationImport)">
            <summary>
            Determines whether [is function import] [the specified operation import].
            </summary>
            <param name="operationImport">The operation import.</param>
            <returns>
              <c>true</c> if [is function import] [the specified operation import]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.TryGetStaticEntitySet(Microsoft.OData.Edm.IEdmOperationImport,Microsoft.OData.Edm.IEdmEntitySet@)">
            <summary>
            Analyzes <see cref="T:Microsoft.OData.Edm.IEdmOperationImport"/>.EntitySet expression and returns a static <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/> reference if available.
            </summary>
            <param name="operationImport">The operation import containing the entity set expression.</param>
            <param name="entitySet">The static entity set of the operation import.</param>
            <returns>True if the entity set expression of the <paramref name="operationImport"/> contains a static reference to an <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/>, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.TryGetRelativeEntitySetPath(Microsoft.OData.Edm.IEdmOperationImport,Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmOperationParameter@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmNavigationProperty}@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Analyzes <see cref="T:Microsoft.OData.Edm.IEdmOperationImport"/>.EntitySet expression and returns a relative path to an <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/> if available.
            The path starts with the <paramref name="parameter"/> and may have optional sequence of <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/> and type casts segments.
            </summary>
            <param name="operationImport">The operation import containing the entity set expression.</param>
            <param name="model">The model containing the operation import.</param>
            <param name="parameter">The operation import parameter from which the relative entity set path starts.</param>
            <param name="relativePath">The optional sequence of navigation properties.</param>
            <param name="edmErrors">The errors that were found when attempting to get the relative path.</param>
            <returns>True if the entity set expression of the <paramref name="operationImport"/> contains a relative path an <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/>, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.IsAction(Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Determines whether the specified operation is action.
            </summary>
            <param name="operation">The operation.</param>
            <returns>
              <c>true</c> if the specified operation is action; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.IsFunction(Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Determines whether the specified operation is function.
            </summary>
            <param name="operation">The operation.</param>
            <returns>
              <c>true</c> if the specified operation is function; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FilterByName(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmOperation},System.Boolean,System.String)">
            <summary>
            Checks whether all operations have the same return type 
            </summary>
            <param name="operations">the list to check</param>
            <param name="forceFullyQualifiedNameFilter">Ensures that the Where filter clause applies the Full name,</param>
            <param name="operationName">The operation name to filter by.</param>
            <returns>true if the list of operation imports all have the same return type</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.HasEquivalentBindingType(Microsoft.OData.Edm.IEdmOperation,Microsoft.OData.Edm.IEdmType)">
            <summary>
            Determines whether the bound operation's  binding type is equivalent to the specified binding type.
            </summary>
            <param name="operation">The operation.</param>
            <param name="bindingType">Type of the binding.</param>
            <returns>
              <c>true</c> if [is operation binding type equivalent to] [the specified operation]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindProperty(Microsoft.OData.Edm.Expressions.IEdmRecordExpression,System.String)">
            <summary>
            Finds a property of a record expression.
            </summary>
            <param name="expression">The record expression.</param>
            <param name="name">Name of the property to find.</param>
            <returns>The property, if found, otherwise null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.NavigationSourceKind(Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Return the navigation kind of the navigation source.
            </summary>
            <param name="navigationSource">The navigation source.</param>
            <returns>The kind of the navigation source.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.EntityType(Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Return the entity type of the navigation source.
            </summary>
            <param name="navigationSource">The navigation source.</param>
            <returns>The entity type of the navigation source.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetEdmReferences(Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmReference})">
            <summary>
            Sets edmx:Reference information (IEdmReference) to the model.
            </summary>
            <param name="model">The IEdmModel to set edmx:Reference information.</param>
            <param name="edmReferences">The edmx:Reference information to be set.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetEdmReferences(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets edmx:Reference information (IEdmReference) from the model.
            </summary>
            <param name="model">The IEdmModel to get edmx:Reference information.</param>
            <returns>The edmx:Reference information.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindTypeInModelTree(Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsModel,System.String)">
            <summary>
            Find types in CsdlSemanticsModel tree.
            </summary>
            <param name="model">The CsdlSemanticsModel.</param>
            <param name="name">The name by which to search.</param>
            <returns>The found emd type or null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindInModelTree``1(Microsoft.OData.Edm.Csdl.CsdlSemantics.CsdlSemanticsModel,System.Func{Microsoft.OData.Edm.IEdmModel,System.String,``0},System.String,System.Func{``0,``0,``0})">
            <summary>
            Searches for a type with the given name in the model and its main/sibling/referenced models, returns null if no such type exists.
            </summary>
            <typeparam name="T">the type of value to find.</typeparam>
            <param name="model">The model to search for type.</param>
            <param name="finderFunc">The func for each IEdmModel node to find element by name.</param>
            <param name="qualifiedName">The qualified name of the type being found.</param>
            <param name="ambiguousCreator">The func to combine results ifwhen more than one is found.</param>
            <remarks>when searching, will ignore built-in types in EdmCoreModel and CoreVocabularyModel.</remarks>
            <returns>The requested type, or null if no such type exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetPathSegmentEntityType(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            This method is only used for the operation import entity set path parsing.
            </summary>
            <param name="segmentType">The type of the segment.</param>
            <returns>Non-null entity type that may be bad.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetDocumentation(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmElement)">
            <summary>
            Gets documentation for a specified element.
            </summary>
            <param name="model">The model containing the documentation.</param>
            <param name="element">The element.</param>
            <returns>Documentation that exists on the element. Otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetDocumentation(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmElement,Microsoft.OData.Edm.IEdmDocumentation)">
            <summary>
            Sets documentation for a specified element.
            </summary>
            <param name="model">The model containing the documentation.</param>
            <param name="element">The element.</param>
            <param name="documentation">Documentation to set.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindEntitySetExtended(Microsoft.OData.Edm.IEdmEntityContainer,System.String)">
            <summary>
            Searches for entity set by the given name that may be container qualified in default container and .Extends containers.
            </summary>
            <param name="container">The container to search.</param>
            <param name="qualifiedName">The name which might be container qualified. If no container name is provided, then default container will be searched.</param>
            <returns>The entity set found or empty if none found.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindSingletonExtended(Microsoft.OData.Edm.IEdmEntityContainer,System.String)">
            <summary>
            Searches for singleton by the given name that may be container qualified in default container and .Extends containers. If no container name is provided, then default container will be searched.
            </summary>
            <param name="container">The container to search.</param>
            <param name="qualifiedName">The name which might be container qualified. If no container name is provided, then default container will be searched.</param>
            <returns>The singleton found or empty if none found.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindOperationImportsExtended(Microsoft.OData.Edm.IEdmEntityContainer,System.String)">
            <summary>
            Searches for the operation imports by the specified name in default container and .Extends containers, returns an empty enumerable if no operation import exists.
            </summary>
            <param name="container">The container to search.</param>
            <param name="qualifiedName">The qualified name of the operation import which may or may not include the container name.</param>
            <returns>All operation imports that can be found by the specified name, returns an empty enumerable if no operation import exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.GetPrimitiveValueConverter(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Get the primitive value converter for the given type definition in the model.
            </summary>
            <param name="model">The model involved.</param>
            <param name="fullTypeName">The full type name of a type definition.</param>
            <returns>The primitive value converter for the type definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.SetPrimitiveValueConverter(Microsoft.OData.Edm.IEdmModel,System.String,Microsoft.OData.Edm.PrimitiveValueConverters.IPrimitiveValueConverter)">
            <summary>
            Set the primitive value converter for the given type definition in the model.
            </summary>
            <param name="model">The model involved.</param>
            <param name="fullTypeName">The full type name of a type definition.</param>
            <param name="converter">The primitive value converter for the type definition.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.ExtensionMethods.FindInContainerAndExtendsRecursively``1(Microsoft.OData.Edm.IEdmEntityContainer,System.String,System.Func{Microsoft.OData.Edm.IEdmEntityContainer,System.String,``0},System.Int32)">
            <summary>
            Search entity set or singleton or operation import in container and its extended containers.
            </summary>
            <typeparam name="T">The IEdmEntityContainerElement derived type.</typeparam>
            <param name="container">The IEdmEntityContainer object, can be CsdlSemanticsEntityContainer.</param>
            <param name="simpleName">A simple (not fully qualified) entity set name or singleton name or operation import name.</param>
            <param name="finderFunc">The func to do the search within container.</param>
            <param name="deepth">The recursive deepth of .Extends containers to search.</param>
            <returns>The found entity set or singleton or operation import.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlWriter">
            <summary>
            Provides CSDL serialization services for EDM models.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlWriter.TryWriteCsdl(Microsoft.OData.Edm.IEdmModel,System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Outputs a CSDL artifact to the provided writer.
            </summary>
            <param name="model">Model to be written.</param>
            <param name="writer">XmlWriter the generated CSDL will be written to.</param>
            <param name="errors">Errors that prevented successful serialization, or no errors if serialization was successful. </param>
            <returns>A value indicating whether serialization was successful.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlWriter.TryWriteCsdl(Microsoft.OData.Edm.IEdmModel,System.Func{System.String,System.Xml.XmlWriter},System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Outputs a CSDL artifact to the provided writers.
            </summary>
            <param name="model">Model to be written.</param>
            <param name="writerProvider">A delegate that takes in a schema namespace name and returns an XmlWriter to write the schema to.</param>
            <param name="errors">Errors that prevented successful serialization, or no errors if serialization was successful. </param>
            <returns>A value indicating whether serialization was successful.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlReader">
            <summary>
            Provides CSDL parsing services for EDM models.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlReader.TryParse(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},Microsoft.OData.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
             Returns an IEdmModel for the given CSDL artifacts.
            </summary>
            <param name="readers">Collection of XmlReaders containing the CSDL artifacts.</param>
            <param name="model">The model generated by parsing.</param>
            <param name="errors">Errors reported while parsing.</param>
            <returns>Success of the parse operation.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlReader.TryParse(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
             Returns an IEdmModel for the given CSDL artifacts.
            </summary>
            <param name="readers">Collection of XmlReaders containing the CSDL artifacts.</param>
            <param name="reference">Model to be references by the created model.</param>
            <param name="model">The model generated by parsing.</param>
            <param name="errors">Errors reported while parsing.</param>
            <returns>Success of the parse operation.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Csdl.CsdlReader.TryParse(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmModel},Microsoft.OData.Edm.IEdmModel@,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
             Returns an IEdmModel for the given CSDL artifacts.
            </summary>
            <param name="readers">Collection of XmlReaders containing the CSDL artifacts.</param>
            <param name="references">Models to be references by the created model.</param>
            <param name="model">The model generated by parsing.</param>
            <param name="errors">Errors reported while parsing.</param>
            <returns>Success of the parse operation.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmPrimitiveTypeKind">
            <summary>
            Enumerates the kinds of Edm Primitives.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.None">
            <summary>
            Represents a primitive type of unknown kind.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Binary">
            <summary>
            Represents a Binary type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Boolean">
            <summary>
            Represents a Boolean type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Byte">
            <summary>
            Represents a Byte type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.DateTimeOffset">
            <summary>
            Represents a DateTimeOffset type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Decimal">
            <summary>
            Represents a Decimal type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Double">
            <summary>
            Represents a Double type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Guid">
            <summary>
            Represents a Guid type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Int16">
            <summary>
            Represents a Int16 type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Int32">
            <summary>
            Represents a Int32 type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Int64">
            <summary>
            Represents a Int64 type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.SByte">
            <summary>
            Represents a SByte type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Single">
            <summary>
            Represents a Single type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.String">
            <summary>
            Represents a String type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Stream">
            <summary>
            Represents a Stream type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Duration">
            <summary>
            Represents a Duration type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Geography">
            <summary>
            Represents an arbitrary Geography type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeographyPoint">
            <summary>
            Represents a geography Point type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeographyLineString">
            <summary>
            Represents a geography LineString type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeographyPolygon">
            <summary>
            Represents a geography Polygon type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeographyCollection">
            <summary>
            Represents a geography GeographyCollection type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeographyMultiPolygon">
            <summary>
            Represents a geography MultiPolygon type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeographyMultiLineString">
            <summary>
            Represents a geography MultiLineString type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeographyMultiPoint">
            <summary>
            Represents a geography MultiPoint type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Geometry">
            <summary>
            Represents an arbitrary Geometry type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeometryPoint">
            <summary>
            Represents a geometry Point type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeometryLineString">
            <summary>
            Represents a geometry LineString type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeometryPolygon">
            <summary>
            Represents a geometry Polygon type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeometryCollection">
            <summary>
            Represents a geometry GeometryCollection type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeometryMultiPolygon">
            <summary>
            Represents a geometry MultiPolygon type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeometryMultiLineString">
            <summary>
            Represents a geometry MultiLineString type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.GeometryMultiPoint">
            <summary>
            Represents a geometry MultiPoint type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.Date">
            <summary>
            Represents a Date type
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPrimitiveTypeKind.TimeOfDay">
            <summary>
            Represents a TimeOfDay type
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmConcurrencyMode">
            <summary>
            Enumerates the EDM property concurrency modes.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmConcurrencyMode.None">
            <summary>
            Denotes a property that should not be used for optimistic concurrency checks.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmConcurrencyMode.Fixed">
            <summary>
            Denotes a property that should be used for optimistic concurrency checks.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Cache`2">
            <summary>
            Provides a caching mechanism for semantic properties.
            </summary>
            <typeparam name="TContainer">Type of the element that contains the cached property</typeparam>
            <typeparam name="TProperty">Type of the cached property</typeparam>
        </member>
        <member name="T:Microsoft.OData.Edm.CacheHelper">
            <summary>
            Helper for Cache class.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmUtil">
            <summary>
            Utilities for Edm.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmUtil.GetMimeType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            Checks whether the <paramref name="annotatableProperty"/> has a MIME type annotation.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the annotation.</param>
            <param name="annotatableProperty">The <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> to check.</param>
            <returns>The (non-null) value of the MIME type annotation of the <paramref name="annotatableProperty"/> or null if no MIME type annotation exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmUtil.SetMimeType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmProperty,System.String)">
            <summary>
            Sets the MIME type annotation of the <paramref name="annotatableProperty"/> to <paramref name="mimeType"/>.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the annotation.</param>
            <param name="annotatableProperty">The <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> to modify.</param>
            <param name="mimeType">The MIME type value to set as annotation value; if null, an existing annotation will be removed.</param>
            <remarks>The MIME type annotation is only supported on service operations and primitive properties for serialization purposes.</remarks>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmUtil.GetMimeType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Checks whether the <paramref name="annotatableOperation"/> has a MIME type annotation.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the annotation.</param>
            <param name="annotatableOperation">The <see cref="T:Microsoft.OData.Edm.IEdmOperation"/> to check.</param>
            <returns>The (non-null) value of the MIME type annotation of the <paramref name="annotatableOperation"/> or null if no MIME type annotation exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmUtil.SetMimeType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmOperation,System.String)">
            <summary>
            Sets the MIME type annotation of the <paramref name="annotatableOperation"/> to <paramref name="mimeType"/>.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the annotation.</param>
            <param name="annotatableOperation">The <see cref="T:Microsoft.OData.Edm.IEdmOperation"/> to modify.</param>
            <param name="mimeType">The MIME type value to set as annotation value; if null, an existing annotation will be removed.</param>
            <remarks>The MIME type annotation is only supported on service operations and primitive properties for serialization purposes.</remarks>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmUtil.TryParseContainerQualifiedElementName(System.String,System.String@,System.String@)">
            <summary>
            Tries the name of the parse container qualified element.
            </summary>
            <param name="containerQualifiedElementName">Name of the container qualified container element.</param>
            <param name="containerName">Name of the container that was determined.</param>
            <param name="containerElementName">The fully qualified name of the container element that was determined.</param>
            <returns>Returns true if parsing was successful and false if not.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmUtil.SetAnnotation(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmElement,System.String,System.String)">
            <summary>
            Sets the annotation with the OData metadata namespace and the specified <paramref name="localName"/> on the <paramref name="annotatable"/>.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the annotations."/&gt;</param>
            <param name="annotatable">The <see cref="T:Microsoft.OData.Edm.IEdmElement"/> to set the annotation on.</param>
            <param name="localName">The local name of the annotation to set.</param>
            <param name="value">The value of the annotation to set.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmUtil.TryGetAnnotation(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmElement,System.String,System.String@)">
            <summary>
            Returns the annotation in the OData metadata namespace with the specified <paramref name="localName"/>.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the annotation.</param>
            <param name="annotatable">The <see cref="T:Microsoft.OData.Edm.IEdmElement"/> to get the annotation from.</param>
            <param name="localName">The local name of the annotation to find.</param>
            <param name="value">The value of the annotation in the OData metadata namespace and with the specified <paramref name="localName"/>.</param>
            <returns>true if an annotation with the specified local name was found; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmUtil.DictionaryGetOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Query dictionary for certain key, and update it if not exist
            </summary>
            <typeparam name="TKey">Key type for dictionary</typeparam>
            <typeparam name="TValue">Value type for dictionary</typeparam>
            <param name="dictionary">The dictionary to look up</param>
            <param name="key">The key property</param>
            <param name="computeValue">The function to compute value if key not exist in dictionary</param>
            <returns>The value for the key</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmUtil.GetStringAnnotationValue``1(Microsoft.OData.Edm.IEdmModel,``0,System.String,System.Func{System.String})">
            <summary>
            Checks whether the <paramref name="annotatable"/> has a value annotation.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the annotation.</param>
            <param name="annotatable">The <see cref="T:Microsoft.OData.Edm.IEdmElement"/> to check.</param>
            <param name="localName">The local name of the annotation to lookup.</param>
            <param name="getFoundAnnotationValueErrorString">The error message to throw if a null value is found in an annotation.</param>
            <returns>The (non-null) value of the annotation of the <paramref name="annotatable"/> or null if no annotation exists.</returns>
            <typeparam name="TEdmElement">Any Type that derives from IEdmElement.</typeparam>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmContainerElementKind">
            <summary>
            Defines EDM container element types.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmContainerElementKind.None">
            <summary>
            Represents an element where the container kind is unknown or in error.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmContainerElementKind.EntitySet">
            <summary>
            Represents an element implementing <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmContainerElementKind.ActionImport">
            <summary>
            Represents an element implementing <see cref="T:Microsoft.OData.Edm.IEdmActionImport"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmContainerElementKind.FunctionImport">
            <summary>
            Represents an element implementing <see cref="T:Microsoft.OData.Edm.IEdmFunctionImport"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmContainerElementKind.Singleton">
            <summary>
            Represents an element implementing <see cref="T:Microsoft.OData.Edm.IEdmSingleton"/>.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmMultiplicity">
            <summary>
            Enumerates the multiplicities of EDM navigation properties.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmMultiplicity.Unknown">
            <summary>
            The Multiplicity of the association end is unknown.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmMultiplicity.ZeroOrOne">
            <summary>
            The Multiplicity of the association end is zero or one.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmMultiplicity.One">
            <summary>
            The Multiplicity of the association end is one.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmMultiplicity.Many">
            <summary>
            The Multiplicity of the association end is many.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmOnDeleteAction">
            <summary>
            Enumerates the actions EDM can apply on deletes.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmOnDeleteAction.None">
            <summary>
            Take no action on delete.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmOnDeleteAction.Cascade">
            <summary>
            On delete also delete items on the other end of the association.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmPropertyKind">
            <summary>
            Defines EDM property types.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPropertyKind.None">
            <summary>
            Represents a property with an unknown or error kind.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPropertyKind.Structural">
            <summary>
            Represents a property implementing <see cref="T:Microsoft.OData.Edm.IEdmStructuralProperty"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmPropertyKind.Navigation">
            <summary>
            Represents a property implementing <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/>. 
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmSchemaElementKind">
            <summary>
            Defines EDM schema element types.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmSchemaElementKind.None">
            <summary>
            Represents a schema element with unknown or error kind.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmSchemaElementKind.TypeDefinition">
            <summary>
            Represents a schema element implementing <see cref="T:Microsoft.OData.Edm.IEdmSchemaType"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmSchemaElementKind.ValueTerm">
            <summary>
            Represents a schema element implementing <see cref="T:Microsoft.OData.Edm.IEdmValueTerm"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmSchemaElementKind.Action">
            <summary>
            Represents a schema element implementing <see cref="T:Microsoft.OData.Edm.IEdmAction"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmSchemaElementKind.EntityContainer">
            <summary>
            Represents a schema element implementing <see cref="T:Microsoft.OData.Edm.IEdmEntityContainer"/>
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmSchemaElementKind.Function">
            <summary>
            Represents a schema element implementing <see cref="T:Microsoft.OData.Edm.IEdmAction"/>.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmTypeKind">
            <summary>
            Defines EDM metatypes.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTypeKind.None">
            <summary>
            Represents a type with an unknown or error kind.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTypeKind.Primitive">
            <summary>
            Represents a type implementing <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveType"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTypeKind.Entity">
            <summary>
            Represents a type implementing <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTypeKind.Complex">
            <summary>
            Represents a type implementing <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTypeKind.Collection">
            <summary>
            Represents a type implementing <see cref="T:Microsoft.OData.Edm.IEdmCollectionType"/>. 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTypeKind.EntityReference">
            <summary>
            Represents a type implementing <see cref="T:Microsoft.OData.Edm.IEdmEntityReferenceType"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTypeKind.Enum">
            <summary>
            Represents a type implementing <see cref="T:Microsoft.OData.Edm.IEdmEnumType"/>.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.EdmTypeKind.TypeDefinition">
            <summary>
            Represents a type implementing <see cref="T:Microsoft.OData.Edm.IEdmTypeDefinition"/>.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IDependencyTrigger">
            <summary>
            Interface describing anything that can be depended upon in tracking semantic changes in an EDM model.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IDependent">
            <summary>
            Interface describing anything that can be dependent on a dependency trigger in tracking semantic changes in an EDM model.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.IFlushCaches">
            <summary>
            Interface describing anything that can have cached data that might need flushing.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Date">
            <summary>
            Date type for Edm.Date
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.Date.MinValue">
            <summary>
            Min value of <see cref="T:Microsoft.OData.Edm.Library.Date"/>
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.Date.MaxValue">
            <summary>
            Max value of <see cref="T:Microsoft.OData.Edm.Library.Date"/>
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.Date.dateTime">
            <summary>
            Internal using System.DateTime
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Consturctor of <see cref="T:Microsoft.OData.Edm.Library.Date"/>
            </summary>
            <param name="year">Year value of date</param>
            <param name="month">Month value of date</param>
            <param name="day">Day value of date</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.op_Equality(Microsoft.OData.Edm.Library.Date,Microsoft.OData.Edm.Library.Date)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.OData.Edm.Library.Date"/> are equal.
            </summary>
            <param name="firstOperand">The first object to compare.</param>
            <param name="secondOperand">The second object to compare.</param>
            <returns>true if firstOperand and secondOperand represent the same date; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.op_Inequality(Microsoft.OData.Edm.Library.Date,Microsoft.OData.Edm.Library.Date)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.OData.Edm.Library.Date"/> are not equal.
            </summary>
            <param name="firstOperand">The first object to compare.</param>
            <param name="secondOperand">The second object to compare.</param>
            <returns>true if firstOperand and secondOperand do not represent the same date; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.op_LessThan(Microsoft.OData.Edm.Library.Date,Microsoft.OData.Edm.Library.Date)">
            <summary>
            Determines whether one specified <see cref="T:Microsoft.OData.Edm.Library.Date"/> is less than
            another specified <see cref="T:Microsoft.OData.Edm.Library.Date"/>
            </summary>
            <param name="firstOperand">The first object to compare.</param>
            <param name="secondOperand">The second object to compare.</param>
            <returns>true if firstOperand is less than secondOperand; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.op_LessThanOrEqual(Microsoft.OData.Edm.Library.Date,Microsoft.OData.Edm.Library.Date)">
            <summary>
            Determines whether one specified <see cref="T:Microsoft.OData.Edm.Library.Date"/> is less equal to
            another specified <see cref="T:Microsoft.OData.Edm.Library.Date"/>
            </summary>
            <param name="firstOperand">The first object to compare.</param>
            <param name="secondOperand">The second object to compare.</param>
            <returns>true if firstOperand is less equal to secondOperand; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.op_GreaterThan(Microsoft.OData.Edm.Library.Date,Microsoft.OData.Edm.Library.Date)">
            <summary>
            Determines whether one specified <see cref="T:Microsoft.OData.Edm.Library.Date"/> is greater than
            another specified <see cref="T:Microsoft.OData.Edm.Library.Date"/>
            </summary>
            <param name="firstOperand">The first object to compare.</param>
            <param name="secondOperand">The second object to compare.</param>
            <returns>true if firstOperand is greater than secondOperand; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.op_GreaterThanOrEqual(Microsoft.OData.Edm.Library.Date,Microsoft.OData.Edm.Library.Date)">
            <summary>
            Determines whether one specified <see cref="T:Microsoft.OData.Edm.Library.Date"/> is greater equal to
            another specified <see cref="T:Microsoft.OData.Edm.Library.Date"/>
            </summary>
            <param name="firstOperand">The first object to compare.</param>
            <param name="secondOperand">The second object to compare.</param>
            <returns>true if firstOperand is greater equal to secondOperand; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.AddYears(System.Int32)">
            <summary>
            Returns a new Date that adds the specified number of years to the value of this instance.
            </summary>
            <param name="value">A number of years. The value parameter can be negative or positive.</param>
            <returns>An object whose value is the sum of the date and time represented by this instance and the number of years represented by value</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.AddMonths(System.Int32)">
            <summary>
            Returns a new Date that adds the specified number of months to the value of this instance.
            </summary>
            <param name="value">A number of months. The value parameter can be negative or positive.</param>
            <returns>An object whose value is the sum of the date and time represented by this instance and the number of months represented by value</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.AddDays(System.Int32)">
            <summary>
            Returns a new Date that adds the specified number of days to the value of this instance.
            </summary>
            <param name="value">A number of days. The value parameter can be negative or positive.</param>
            <returns>An object whose value is the sum of the date and time represented by this instance and the number of days represented by value</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.op_Implicit(Microsoft.OData.Edm.Library.Date)~System.DateTime">
            <summary>
            Convert Date to Clr DateTime
            </summary>
            <param name="operand">Date Value</param>
            <returns>DateTime Value which represent the Date</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.op_Implicit(System.DateTime)~Microsoft.OData.Edm.Library.Date">
            <summary>
            Convert Clr DateTime to Date
            </summary>
            <param name="operand">DateTime Value</param>
            <returns>Date Value from DateTime</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.ToString">
            <summary>
            Convert Date to String
            </summary>
            <returns>string value of Date</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.CompareTo(System.Object)">
            <summary>
            Compares the value of this instance to a object value
            and returns an integer that indicates whether this instance is earlier than,
            the same as, or later than the object if it is a Date.
            </summary>
            <param name="obj">The object to compare to the current instance</param>
            <returns>Value Description Less than zero This instance is earlier than value. 
            Zero This instance is the same as value.
            Greater than zero This instance is later than value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.CompareTo(Microsoft.OData.Edm.Library.Date)">
            <summary>
            Compares the value of this instance to a specified Date value
            and returns an integer that indicates whether this instance is earlier than,
            the same as, or later than the specified Date value.
            </summary>
            <param name="other">The object to compare to the current instance</param>
            <returns>Value Description Less than zero This instance is earlier than value. 
            Zero This instance is the same as value.
            Greater than zero This instance is later than value.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.Equals(Microsoft.OData.Edm.Library.Date)">
            <summary>
            Compares the value of this instance to a specified Date value
            and returns an bool that indicates whether this instance is same as the specified Date value.
            </summary>
            <param name="other">The object to compare to the current instance</param>
            <returns>True for equal, false for non-equal.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.Equals(System.Object)">
            <summary>
            Compares the value of this instance to a specified object value
            and returns an bool that indicates whether the specified object is <see cref="T:Microsoft.OData.Edm.Library.Date"/> 
            and this instance is same as the specified <see cref="T:Microsoft.OData.Edm.Library.Date"/> value.
            </summary>
            <param name="obj">The object to compare to the current instance</param>
            <returns>True for equal, false for non-equal.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.Parse(System.String)">
            <summary>
            Converts a specified string representation of a date to <see cref="T:Microsoft.OData.Edm.Library.Date"/> with CurrentCulture format.
            </summary>
            <param name="text">A string that represent a date to convert.</param>
            <returns>The <see cref="T:Microsoft.OData.Edm.Library.Date"/> instance represented by text </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts a specified string representation of a date to <see cref="T:Microsoft.OData.Edm.Library.Date"/>.
            </summary>
            <param name="text">A string that represent a date to convert.</param>
            <param name="provider">An object that supplies culture-specific formatting information about text.</param>
            <returns>The <see cref="T:Microsoft.OData.Edm.Library.Date"/> instance represented by text </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.TryParse(System.String,Microsoft.OData.Edm.Library.Date@)">
            <summary>
            Try converts a specified string representation of a date to <see cref="T:Microsoft.OData.Edm.Library.Date"/> with CurrentCulture format.
            </summary>
            <param name="text">A string that represent a date to convert.</param>
            <param name="result">A <see cref="T:Microsoft.OData.Edm.Library.Date"/> object equivalent to the date input, if the conversion succeeded
            or <see cref="F:Microsoft.OData.Edm.Library.Date.MinValue"/>, if the conversion failed.</param>
            <returns>True if the input parameter is successfully converted; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Date.TryParse(System.String,System.IFormatProvider,Microsoft.OData.Edm.Library.Date@)">
            <summary>
            Try converts a specified string representation of a date to <see cref="T:Microsoft.OData.Edm.Library.Date"/>
            </summary>
            <param name="text">A string that represent a date to convert.</param>
            <param name="provider">An object that supplies culture-specific formatting information about text.</param>
            <param name="result">A <see cref="T:Microsoft.OData.Edm.Library.Date"/> object equivalent to the date input, if the conversion succeeded
            or <see cref="F:Microsoft.OData.Edm.Library.Date.MinValue"/>, if the conversion failed.</param>
            <returns>True if the input parameter is successfully converted; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Date.Now">
            <summary>
            Gets a <see cref="T:Microsoft.OData.Edm.Library.Date"/> object that is set to current date on this computer, expressed as the local time.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Date.Year">
            <summary>
            Gets the year component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Date.Month">
            <summary>
            Gets the month component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Date.Day">
            <summary>
            Gets the day of the month represented by this instance.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmComplexType">
            <summary>
            Represents a definition of an EDM complex type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmStructuredType">
            <summary>
            Common base class for definitions of EDM structured types.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStructuredType.#ctor(System.Boolean,System.Boolean,Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmStructuredType"/> class.
            </summary>
            <param name="isAbstract">Denotes a structured type that cannot be instantiated.</param>
            <param name="isOpen">Denotes if the type is open.</param>
            <param name="baseStructuredType">Base type of the type</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStructuredType.AddProperty(Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            Adds the <paramref name="property"/> to this type.
            <see cref="P:Microsoft.OData.Edm.IEdmProperty.DeclaringType"/> of the <paramref name="property"/> must be this type.
            </summary>
            <param name="property">The property being added.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStructuredType.AddStructuralProperty(System.String,Microsoft.OData.Edm.EdmPrimitiveTypeKind)">
            <summary>
            Creates and adds a nullable structural property to this type.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="type">Type of the property.</param>
            <returns>Created structural property.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStructuredType.AddStructuralProperty(System.String,Microsoft.OData.Edm.EdmPrimitiveTypeKind,System.Boolean)">
            <summary>
            Creates and adds a nullable structural property to this type.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="type">Type of the property.</param>
            <param name="isNullable">Flag specifying if the property is nullable.</param>
            <returns>Created structural property.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStructuredType.AddStructuralProperty(System.String,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Creates and adds a structural property to this type.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="type">Type of the property.</param>
            <returns>Created structural property.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStructuredType.AddStructuralProperty(System.String,Microsoft.OData.Edm.IEdmTypeReference,System.String,Microsoft.OData.Edm.EdmConcurrencyMode)">
            <summary>
            Creates and adds a structural property to this type.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="type">Type of the property.</param>
            <param name="defaultValue">The default value of this property.</param>
            <param name="concurrencyMode">The concurrency mode of this property.</param>
            <returns>Created structural property.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStructuredType.FindProperty(System.String)">
            <summary>
            Searches for a structural or navigation property with the given name in this type and all base types and returns null if no such property exists.
            </summary>
            <param name="name">The name of the property being found.</param>
            <returns>The requested property, or null if no such property exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStructuredType.ComputePropertiesDictionary">
            <summary>
            Computes the the cached dictionary of properties for this type definition.
            </summary>
            <returns>Dictionary of properties keyed by their name.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStructuredType.IsAbstract">
            <summary>
            Gets a value indicating whether this type is abstract.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStructuredType.IsOpen">
            <summary>
            Gets a value indicating whether this type is open.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStructuredType.DeclaredProperties">
            <summary>
            Gets the properties declared immediately within this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStructuredType.BaseType">
            <summary>
            Gets the base type of this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStructuredType.PropertiesDictionary">
            <summary>
            Gets a dictionary of the properties in this type definition for faster lookup.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmComplexType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmComplexType"/> class.
            </summary>
            <param name="namespaceName">The namespace this type belongs to.</param>
            <param name="name">The name of this type within its namespace.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmComplexType.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmComplexType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmComplexType"/> class.
            </summary>
            <param name="namespaceName">The namespace this type belongs to.</param>
            <param name="name">The name of this type within its namespace.</param>
            <param name="baseType">The base type of this complex type.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmComplexType.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmComplexType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmComplexType"/> class.
            </summary>
            <param name="namespaceName">The namespace this type belongs to.</param>
            <param name="name">The name of this type within its namespace.</param>
            <param name="baseType">The base type of this complex type.</param>
            <param name="isAbstract">Denotes whether this complex type is abstract.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmComplexType.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmComplexType,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmComplexType"/> class.
            Note: Complex type inheritance is not supported in EDM version 3.0 and above.
            </summary>
            <param name="namespaceName">The namespace this type belongs to.</param>
            <param name="name">The name of this type within its namespace.</param>
            <param name="baseType">The base type of this complex type.</param>
            <param name="isAbstract">Denotes whether this complex type is abstract.</param>
            <param name="isOpen">Denotes if the type is open.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmComplexType.SchemaElementKind">
            <summary>
            Gets the schema element kind of this element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmComplexType.Namespace">
            <summary>
            Gets the namespace of this element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmComplexType.Name">
            <summary>
            Gets the name of this element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmComplexType.TypeKind">
            <summary>
            Gets the kind of this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmComplexType.TermKind">
            <summary>
            Gets the kind of this term.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmDocumentation">
            <summary>
            Represents an EDM documentation.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmDocumentation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmDocumentation"/> class.
            </summary>
            <param name="summary">Summary of the documentation.</param>
            <param name="description">The documentation contents.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmDocumentation.Summary">
            <summary>
            Gets summary of this documentation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmDocumentation.Description">
            <summary>
            Gets documentation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmEntityContainer">
            <summary>
            Represents an EDM entity container.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEntityContainer"/> class.
            </summary>
            <param name="namespaceName">Namespace of the entity container.</param>
            <param name="name">Name of the entity container.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.AddElement(Microsoft.OData.Edm.IEdmEntityContainerElement)">
            <summary>
            Adds an entity container element to this entity container.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.AddEntitySet(System.String,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Creates and adds an entity set to this entity container.
            </summary>
            <param name="name">Name of the entity set.</param>
            <param name="elementType">The entity type of the elements in this entity set.</param>
            <returns>Created entity set.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.AddSingleton(System.String,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Creates and adds an singleton to this entity container.
            </summary>
            <param name="name">Name of the singleton.</param>
            <param name="entityType">The entity type of this singleton.</param>
            <returns>Created singleton.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.AddFunctionImport(Microsoft.OData.Edm.IEdmFunction)">
            <summary>
            Creates and adds a function import to this entity container.
            </summary>
            <param name="function">The function of the specified function import.</param>
            <returns>Created function import.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.AddFunctionImport(System.String,Microsoft.OData.Edm.IEdmFunction)">
            <summary>
            Creates and adds a function import to this entity container.
            </summary>
            <param name="name">Name of the function import.</param>
            <param name="function">The function of the specified function import.</param>
            <returns>Created function import.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.AddFunctionImport(System.String,Microsoft.OData.Edm.IEdmFunction,Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Creates and adds a function import to this entity container.
            </summary>
            <param name="name">Name of the function import.</param>
            <param name="function">The function of the specified function import.</param>
            <param name="entitySet">An entity set containing entities returned by this function import. 
            The two expression kinds supported are <see cref="T:Microsoft.OData.Edm.Expressions.IEdmEntitySetReferenceExpression"/> and <see cref="T:Microsoft.OData.Edm.Expressions.IEdmPathExpression"/>.</param>
            <returns>Created function import.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.AddFunctionImport(System.String,Microsoft.OData.Edm.IEdmFunction,Microsoft.OData.Edm.Expressions.IEdmExpression,System.Boolean)">
            <summary>
            Creates and adds a function import to this entity container.
            </summary>
            <param name="name">Name of the function import.</param>
            <param name="function">The function of the specified function import.</param>
            <param name="entitySet">An entity set containing entities returned by this function import. 
            The two expression kinds supported are <see cref="T:Microsoft.OData.Edm.Expressions.IEdmEntitySetReferenceExpression"/> and <see cref="T:Microsoft.OData.Edm.Expressions.IEdmPathExpression"/>.</param>
            <param name="includeInServiceDocument">A value indicating whether this function import will be in the service document.</param>
            <returns>Created operation import.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.AddActionImport(System.String,Microsoft.OData.Edm.IEdmAction,Microsoft.OData.Edm.Expressions.IEdmExpression)">
            <summary>
            Creates and adds an action import to this entity container.
            </summary>
            <param name="name">Name of the action import.</param>
            <param name="action">Action that the action import is importing to the container.</param>
            <param name="entitySet">An entity set containing entities returned by this action import. 
            The two expression kinds supported are <see cref="T:Microsoft.OData.Edm.Expressions.IEdmEntitySetReferenceExpression"/> and <see cref="T:Microsoft.OData.Edm.Expressions.IEdmPathExpression"/>.</param>
            <returns>Created action import.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.AddActionImport(Microsoft.OData.Edm.IEdmAction)">
            <summary>
            Creates and adds an action import to this entity container.
            </summary>
            <param name="action">Action that the action import is importing to the container.</param>
            <returns>Created action import.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.AddActionImport(System.String,Microsoft.OData.Edm.IEdmAction)">
            <summary>
            Creates and adds an action import to this entity container.
            </summary>
            <param name="name">Name of the action import.</param>
            <param name="action">Action that the action import is importing to the container.</param>
            <returns>Created action import.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.FindEntitySet(System.String)">
            <summary>
            Searches for an entity set with the given name in this entity container and returns null if no such set exists.
            </summary>
            <param name="setName">The name of the element being found.</param>
            <returns>The requested element, or null if the element does not exist.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.FindSingleton(System.String)">
            <summary>
            Searches for a singleton with the given name in this entity container and returns null if no such singleton exists.
            </summary>
            <param name="singletonName">The name of the singleton to search.</param>
            <returns>The requested singleton, or null if the singleton does not exist.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityContainer.FindOperationImports(System.String)">
            <summary>
            Searches for operation imports with the given name in this entity container and returns null if no such operation import exists.
            </summary>
            <param name="operationName">The name of the operation to find.</param>
            <returns>A group of the requested operation imports, or an empty enumerable if no such operation import exists.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityContainer.Elements">
            <summary>
            Gets a collection of the elements of this entity container.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityContainer.Namespace">
            <summary>
            Gets the namespace of this entity container.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityContainer.Name">
            <summary>
            Gets the name of this entity container.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityContainer.SchemaElementKind">
            <summary>
            Gets the kind of this schema element.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmEntityReferenceType">
            <summary>
            Represents a definition of an EDM entity reference type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityReferenceType.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEntityReferenceType"/> class.
            </summary>
            <param name="entityType">The entity referred to by this entity reference.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityReferenceType.TypeKind">
            <summary>
            Gets the kind of this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityReferenceType.EntityType">
            <summary>
            Gets the entity type pointed to by this entity reference.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmEntitySet">
            <summary>
            Represents an EDM entity set.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntitySet.#ctor(Microsoft.OData.Edm.IEdmEntityContainer,System.String,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEntitySet"/> class.
            </summary>
            <param name="container">An <see cref="T:Microsoft.OData.Edm.IEdmEntityContainer"/> containing this entity set.</param>
            <param name="name">Name of the entity set.</param>
            <param name="elementType">The entity type of the elements in this entity set.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntitySet.ContainerElementKind">
            <summary>
            Gets the kind of element of this container element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntitySet.Container">
            <summary>
            Gets the container of this entity set.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntitySet.Type">
            <summary>
            Gets the type of this entity set.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntitySet.Path">
            <summary>
            Gets the path that a navigation property targets. 
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmEntityType">
            <summary>
            Represents a definition of an EDM entity type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEntityType"/> class.
            </summary>
            <param name="namespaceName">Namespace the entity belongs to.</param>
            <param name="name">Name of the entity.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityType.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEntityType"/> class.
            </summary>
            <param name="namespaceName">Namespace the entity belongs to.</param>
            <param name="name">Name of the entity.</param>
            <param name="baseType">The base type of this entity type.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityType.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmEntityType,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEntityType"/> class.
            </summary>
            <param name="namespaceName">Namespace the entity belongs to.</param>
            <param name="name">Name of the entity.</param>
            <param name="baseType">The base type of this entity type.</param>
            <param name="isAbstract">Denotes an entity that cannot be instantiated.</param>
            <param name="isOpen">Denotes if the type is open.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityType.#ctor(System.String,System.String,Microsoft.OData.Edm.IEdmEntityType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEntityType"/> class.
            </summary>
            <param name="namespaceName">Namespace the entity belongs to.</param>
            <param name="name">Name of the entity.</param>
            <param name="baseType">The base type of this entity type.</param>
            <param name="isAbstract">Denotes an entity that cannot be instantiated.</param>
            <param name="isOpen">Denotes if the type is open.</param>
            <param name="hasStream">Denotes if the type is a media type.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityType.AddKeys(Microsoft.OData.Edm.IEdmStructuralProperty[])">
            <summary>
            Adds the <paramref name="keyProperties"/> to the key of this entity type.
            </summary>
            <param name="keyProperties">The key properties.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityType.AddKeys(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmStructuralProperty})">
            <summary>
            Adds the <paramref name="keyProperties"/> to the key of this entity type.
            </summary>
            <param name="keyProperties">The key properties.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityType.AddUnidirectionalNavigation(Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo)">
            <summary>
            Creates and adds a unidirectional navigation property to this type.
            </summary>
            <param name="propertyInfo">Information to create the navigation property.</param>
            <returns>Created navigation property.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityType.AddBidirectionalNavigation(Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo,Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo)">
            <summary>
            Creates and adds a navigation property to this type and adds its navigation partner to the navigation target type.
            </summary>
            <param name="propertyInfo">Information to create the navigation property.</param>
            <param name="partnerInfo">Information to create the partner navigation property.</param>
            <returns>Created navigation property.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityType.FixUpDefaultPartnerInfo(Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo,Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo)">
            <summary>
            The puspose of this method is to make sure that some of the <paramref name="partnerInfo"/> fields are set to valid partner defaults.
            For example if <paramref name="partnerInfo"/>.Target is null, it will be set to this entity type. If <paramref name="partnerInfo"/>.TargetMultiplicity
            is unknown, it will be set to 0..1, etc.
            Whenever this method applies new values to <paramref name="partnerInfo"/>, it will return a copy of it (thus won't modify the original).
            If <paramref name="partnerInfo"/> is null, a new info object will be produced.
            </summary>
            <param name="propertyInfo">Primary navigation property info.</param>
            <param name="partnerInfo">Partner navigation property info. May be null.</param>
            <returns>Partner info.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityType.DeclaredKey">
            <summary>
            Gets the structural properties of the entity type that make up the entity key.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityType.SchemaElementKind">
            <summary>
            Gets the kind of this schema element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityType.Namespace">
            <summary>
            Gets the namespace this schema element belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityType.Name">
            <summary>
            Gets the name of this element.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityType.TypeKind">
            <summary>
            Gets the kind of this type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityType.TermKind">
            <summary>
            Gets the term kind of the entity type.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityType.HasStream">
            <summary>
            Gets the value indicating whether or not this entity is a media type
            This value inherits from the base type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmOperationParameter">
            <summary>
            Represents an EDM operation parameter.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmOperationParameter.#ctor(Microsoft.OData.Edm.IEdmOperation,System.String,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmOperationParameter"/> class.
            </summary>
            <param name="declaringOperation">Declaring function of the parameter.</param>
            <param name="name">Name of the parameter.</param>
            <param name="type">Type of the parameter.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperationParameter.Type">
            <summary>
            Gets the type of this parameter.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmOperationParameter.DeclaringOperation">
            <summary>
            Gets the operation that declared this parameter.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmModel">
            <summary>
            Represents an EDM model.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmModel"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModel.AddReferencedModel(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Adds a model reference to this model.
            </summary>
            <param name="model">The model to be referenced.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModel.AddElement(Microsoft.OData.Edm.IEdmSchemaElement)">
            <summary>
            Adds a schema element to this model.
            </summary>
            <param name="element">Element to be added.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModel.AddElements(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmSchemaElement})">
            <summary>
            Adds a collection of schema elements to this model.
            </summary>
            <param name="newElements">Elements to be added.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModel.AddVocabularyAnnotation(Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation)">
            <summary>
            Adds a vocabulary annotation to this model.
            </summary>
            <param name="annotation">The annotation to be added.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModel.FindDeclaredVocabularyAnnotations(Microsoft.OData.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Searches for vocabulary annotations specified by this model.
            </summary>
            <param name="element">The annotated element.</param>
            <returns>The vocabulary annotations for the element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModel.FindDirectlyDerivedTypes(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Finds a list of types that derive directly from the supplied type.
            </summary>
            <param name="baseType">The base type that derived types are being searched for.</param>
            <returns>A list of types from this model that derive directly from the given type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmModel.SetVocabularyAnnotation(Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation)">
            <summary>
            Set a vocabulary annotation to this model.
            </summary>
            <param name="annotation">The annotation to be set.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmModel.SchemaElements">
            <summary>
            Gets the collection of schema elements that are contained in this model and referenced models.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmModel.DeclaredNamespaces">
            <summary>
            Gets the collection of namespaces that schema elements use contained in this model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmModel.VocabularyAnnotations">
            <summary>
            Gets the collection of vocabulary annotations that are contained in this model.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmNavigationProperty">
            <summary>
            Represents an EDM navigation property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmProperty">
            <summary>
            Represents an EDM property.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmProperty.#ctor(Microsoft.OData.Edm.IEdmStructuredType,System.String,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmProperty"/> class.
            </summary>
            <param name="declaringType">The type that declares this property.</param>
            <param name="name">Name of the property.</param>
            <param name="type">Type of the property.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmProperty.Type">
            <summary>
            Gets the type of this property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmProperty.DeclaringType">
            <summary>
            Gets the type that this property belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmProperty.PropertyKind">
            <summary>
            Gets the kind of this property.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmNavigationProperty.CreateNavigationProperty(Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo)">
            <summary>
            Creates a navigation property from the given information.
            </summary>
            <param name="declaringType">The type that declares this property.</param>
            <param name="propertyInfo">Information to create the navigation property.</param>
            <returns>Created navigation property.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmNavigationProperty.CreateNavigationPropertyWithPartner(Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo,Microsoft.OData.Edm.Library.EdmNavigationPropertyInfo)">
            <summary>
            Creates two navigation properties representing an association between two entity types.
            </summary>
            <param name="propertyInfo">Information to create the navigation property.</param>
            <param name="partnerInfo">Information to create the partner navigation property.</param>
            <returns>Created navigation property.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmNavigationProperty.CreateNavigationPropertyWithPartner(System.String,Microsoft.OData.Edm.IEdmTypeReference,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmStructuralProperty},System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmStructuralProperty},System.Boolean,Microsoft.OData.Edm.EdmOnDeleteAction,System.String,Microsoft.OData.Edm.IEdmTypeReference,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmStructuralProperty},System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmStructuralProperty},System.Boolean,Microsoft.OData.Edm.EdmOnDeleteAction)">
            <summary>
            Creates two navigation properties representing an association between two entity types.
            </summary>
            <param name="propertyName">Navigation property name.</param>
            <param name="propertyType">Type of the navigation property.</param>
            <param name="dependentProperties">Dependent properties of the navigation source.</param>
            <param name="principalProperties">Principal properties of the navigation source.</param>
            <param name="containsTarget">A value indicating whether the navigation source logically contains the navigation target.</param>
            <param name="onDelete">Action to take upon deletion of an instance of the navigation source.</param>
            <param name="partnerPropertyName">Navigation partner property name.</param>
            <param name="partnerPropertyType">Type of the navigation partner property.</param>
            <param name="partnerDependentProperties">Dependent properties of the navigation target.</param>
            <param name="partnerPrincipalProperties">Principal properties of the navigation target.</param>
            <param name="partnerContainsTarget">A value indicating whether the navigation target logically contains the navigation source.</param>
            <param name="partnerOnDelete">Action to take upon deletion of an instance of the navigation target.</param>
            <returns>Navigation property.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationProperty.PropertyKind">
            <summary>
            Gets the kind of this property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationProperty.ContainsTarget">
            <summary>
            Gets a value indicating whether the navigation target is contained inside the navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationProperty.ReferentialConstraint">
            <summary>
            Gets the referential constraint for this navigation, returning null if this is the principal end or if there is no referential constraint.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationProperty.DeclaringEntityType">
            <summary>
            Gets the entity type that this navigation property belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationProperty.OnDelete">
            <summary>
            Gets the action to take when an instance of the declaring type is deleted.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmNavigationProperty.Partner">
            <summary>
            Gets the partner of this navigation property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmIntegerConstant">
            <summary>
            Represents an EDM integer constant.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmIntegerConstant.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmIntegerConstant"/> class.
            </summary>
            <param name="value">Integer value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmIntegerConstant.#ctor(Microsoft.OData.Edm.IEdmPrimitiveTypeReference,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmIntegerConstant"/> class.
            </summary>
            <param name="type">Type of the integer.</param>
            <param name="value">Integer value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmIntegerConstant.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmIntegerConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmIntegerConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmPropertyValue">
            <summary>
            Represents a value of an EDM property.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmPropertyValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmPropertyValue"/> class with non-initialized <see cref="P:Microsoft.OData.Edm.Library.Values.EdmPropertyValue.Value"/> property.
            This constructor allows setting <see cref="P:Microsoft.OData.Edm.Library.Values.EdmPropertyValue.Value"/> property once after <see cref="T:Microsoft.OData.Edm.Library.Values.EdmPropertyValue"/> has been constructed.
            </summary>
            <param name="name">Name of the property for which this provides a value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmPropertyValue.#ctor(System.String,Microsoft.OData.Edm.Values.IEdmValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmPropertyValue"/> class.
            This constructor will not allow changing <see cref="P:Microsoft.OData.Edm.Library.Values.EdmPropertyValue.Value"/> property after the EdmPropertyValue instance has been constructed.
            </summary>
            <param name="name">Name of the property for which this provides a value.</param>
            <param name="value">Value of the property.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmPropertyValue.Name">
            <summary>
            Gets the name of the property for which this provides a value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmPropertyValue.Value">
            <summary>
            Gets or sets the value of the property.
            The value can be initialized only once either using the <see cref="M:Microsoft.OData.Edm.Library.Values.EdmPropertyValue.#ctor(System.String,Microsoft.OData.Edm.Values.IEdmValue)"/> constructor or by assigning value directly to this property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmStructuralProperty">
            <summary>
            Represents an EDM structural (i.e. non-navigation) property.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStructuralProperty.#ctor(Microsoft.OData.Edm.IEdmStructuredType,System.String,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmStructuralProperty"/> class.
            </summary>
            <param name="declaringType">The type that declares this property.</param>
            <param name="name">Name of the property.</param>
            <param name="type">The type of the property.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmStructuralProperty.#ctor(Microsoft.OData.Edm.IEdmStructuredType,System.String,Microsoft.OData.Edm.IEdmTypeReference,System.String,Microsoft.OData.Edm.EdmConcurrencyMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmStructuralProperty"/> class.
            </summary>
            <param name="declaringType">The type that declares this property.</param>
            <param name="name">Name of the property.</param>
            <param name="type">The type of the property.</param>
            <param name="defaultValueString">The default value of this property.</param>
            <param name="concurrencyMode">The concurrency mode of this property.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStructuralProperty.DefaultValueString">
            <summary>
            Gets the default value of this property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStructuralProperty.ConcurrencyMode">
            <summary>
            Gets the concurrency mode of this property.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmStructuralProperty.PropertyKind">
            <summary>
            Gets the kind of this property.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmStringConstant">
            <summary>
            Represents an EDM string constant.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmStringConstant.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmStringConstant"/> class.
            </summary>
            <param name="value">String value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmStringConstant.#ctor(Microsoft.OData.Edm.IEdmStringTypeReference,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmStringConstant"/> class.
            </summary>
            <param name="type">Type of the string.</param>
            <param name="value">String value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmStringConstant.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmStringConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmStringConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmStructuredValue">
            <summary>
            Represents an EDM structured value.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmStructuredValue.#ctor(Microsoft.OData.Edm.IEdmStructuredTypeReference,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Values.IEdmPropertyValue})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmStructuredValue"/> class.
            </summary>
            <param name="type">Type that describes this value.</param>
            <param name="propertyValues">Child values of this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmStructuredValue.FindPropertyValue(System.String)">
            <summary>
            Retrieves the value corresponding to the given property name. Returns null if no such value exists.
            </summary>
            <param name="propertyName">The property that describes the value being found.</param>
            <returns>The requested value, or null if no such value exists.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmStructuredValue.PropertyValues">
            <summary>
            Gets the property values of this structured value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmStructuredValue.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotation">
            <summary>
            Represents an EDM annotation with an immediate native value.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotation.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotation"/> class.
            </summary>
            <param name="namespaceUri">Namespace URI of the annotation.</param>
            <param name="name">Name of the annotation within the namespace.</param>
            <param name="value">Value of the annotation</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotation"/> class.
            </summary>
            <param name="namespaceUri">Namespace URI of the annotation.</param>
            <param name="name">Name of the annotation within the namespace.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotation.NamespaceUri">
            <summary>
            The namespace Uri of the annotation.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Annotations.EdmDirectValueAnnotation.Value">
            <summary>
            Gets the value of this annotation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.UnresolvedNavigationPropertyPath">
            <summary>
            Represents a navigation property path that could not be resolved.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Csdl.CsdlSemantics.UnresolvedType">
            <summary>
            Represents information about an EDM type definition that failed to resolve.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmEntityReferenceTypeReference">
            <summary>
            Represents a reference to an EDM entity reference type.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmEntityReferenceTypeReference.#ctor(Microsoft.OData.Edm.IEdmEntityReferenceType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.EdmEntityReferenceTypeReference"/> class.
            </summary>
            <param name="entityReferenceType">The definition referred to by this reference.</param>
            <param name="isNullable">Denotes whether the type can be nullable.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmEntityReferenceTypeReference.EntityReferenceDefinition">
            <summary>
            Gets the entity reference definition to which this type refers.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmConstants">
            <summary>
            Contains constant values that apply to the EDM model, regardless of source (for CSDL/EDMX specific constants see <see cref="T:Microsoft.OData.Edm.Csdl.CsdlConstants"/>).
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.EdmConstants.DocumentationUri">
            <summary>
            The URI of annotations that will be serialized as documentation elements.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.EdmConstants.DocumentationAnnotation">
            <summary>
            The local name of annotations that will be serialized as documentation elements.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.EdmConstants.InternalUri">
            <summary>
            The URI of annotations that are internal and will not be serialized.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.EdmConstants.EdmVersionAnnotation">
            <summary>
            The local name of the annotation that stores EDM version of a model.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.EdmConstants.MimeTypeAttributeName">
            <summary>The attribute name used on service operations and primitive properties to indicate their MIME type.</summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.EdmConstants.EdmVersion4">
            <summary>
            Version 4.0 of EDM. Corresponds to CSDL namespace "http://docs.oasis-open.org/odata/ns/edmx".
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.EdmConstants.EdmVersionLatest">
            <summary>
            The current latest version of EDM.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmDateConstant">
            <summary>
            Represents an EDM date constant.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmDateConstant.#ctor(Microsoft.OData.Edm.Library.Date)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmDateConstant"/> class.
            </summary>
            <param name="value">Date value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmDateConstant.#ctor(Microsoft.OData.Edm.IEdmPrimitiveTypeReference,Microsoft.OData.Edm.Library.Date)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmDateConstant"/> class.
            </summary>
            <param name="type">Type of the Date.</param>
            <param name="value">Date value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDateConstant.Value">
            <summary>
            Gets the content of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDateConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmDateConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.Values.EdmTimeOfDayConstant">
            <summary>
            Represents an EDM TimeOfDay constant.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmTimeOfDayConstant.#ctor(Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmTimeOfDayConstant"/> class.
            </summary>
            <param name="value">TimeOfDay value represented by this value.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.Values.EdmTimeOfDayConstant.#ctor(Microsoft.OData.Edm.IEdmTemporalTypeReference,Microsoft.OData.Edm.Library.TimeOfDay)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.OData.Edm.Library.Values.EdmTimeOfDayConstant"/> class.
            </summary>
            <param name="type">Type of the TimeOfDay.</param>
            <param name="value">TimeOfDay value represented by this value.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmTimeOfDayConstant.Value">
            <summary>
            Gets the definition of this value.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmTimeOfDayConstant.ExpressionKind">
            <summary>
            Gets the kind of this expression.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.Values.EdmTimeOfDayConstant.ValueKind">
            <summary>
            Gets the kind of this value.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.IEdmValidCoreModelElement">
            <summary>
            This is a marker interface for core model elements that do not require validation.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Library.EdmCoreModel">
            <summary>
            Provides predefined declarations relevant to EDM semantics.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Library.EdmCoreModel.Instance">
            <summary>
            The default core EDM model.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetCollection(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets a reference to a non-atomic collection type definition.
            </summary>
            <param name="elementType">Type of elements in the collection.</param>
            <returns>A new non-atomic collection type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.FindDeclaredType(System.String)">
            <summary>
            Searches for a type with the given name in this model only and returns null if no such type exists.
            </summary>
            <param name="qualifiedName">The qualified name of the type being found.</param>
            <returns>The requested type, or null if no such type exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.FindDeclaredBoundOperations(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Searches for bound operations based on the binding type, returns an empty enumerable if no operation exists.
            </summary>
            <param name="bindingType">Type of the binding.</param>
            <returns>A set of operations that share the binding type or empty enumerable if no such operation exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.FindDeclaredBoundOperations(System.String,Microsoft.OData.Edm.IEdmType)">
            <summary>
            Searches for bound operations based on the qualified name and binding type, returns an empty enumerable if no operation exists.
            </summary>
            <param name="qualifiedName">The qualified name of the operation.</param>
            <param name="bindingType">Type of the binding.</param>
            <returns>
            A set of operations that share the qualified name and binding type or empty enumerable if no such operation exists.
            </returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.FindDeclaredValueTerm(System.String)">
            <summary>
            Searches for a value term with the given name in this model and returns null if no such value term exists.
            </summary>
            <param name="qualifiedName">The qualified name of the value term being found.</param>
            <returns>The requested value term, or null if no such value term exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.FindDeclaredOperations(System.String)">
            <summary>
            Searches for operations with the given name in this model and returns an empty enumerable if no such operation exists.
            </summary>
            <param name="qualifiedName">The qualified name of the operation being found.</param>
            <returns>A set operations sharing the specified qualified name, or an empty enumerable if no such operation exists.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.FindOperationImportsByNameNonBindingParameterType(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Searches for any functionImport or actionImport by name and parameter names.
            </summary>
            <param name="operationImportName">The name of the operation imports to find. May be qualified with the namespace.</param>
            <param name="parameterNames">The parameter names of the parameters.</param>
            <returns>The operation imports that matches the search criteria or empty there was no match.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetPrimitiveType(Microsoft.OData.Edm.EdmPrimitiveTypeKind)">
            <summary>
            Gets primitive type by kind.
            </summary>
            <param name="kind">Kind of the primitive type.</param>
            <returns>Primitive type definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetPrimitiveTypeKind(System.String)">
            <summary>
            Gets the EdmPrimitiveTypeKind by the type name.
            </summary>
            <param name="typeName">Name of the type to look up.</param>
            <returns>EdmPrimitiveTypeKind of the type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetPrimitive(Microsoft.OData.Edm.EdmPrimitiveTypeKind,System.Boolean)">
            <summary>
            Gets a reference to a primitive type of the specified kind.
            </summary>
            <param name="kind">Primitive kind of the type reference being created.</param>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetInt16(System.Boolean)">
            <summary>
            Gets a reference to the Int16 primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetInt32(System.Boolean)">
            <summary>
            Gets a reference to the Int32 primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetInt64(System.Boolean)">
            <summary>
            Gets a reference to the Int64 primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetBoolean(System.Boolean)">
            <summary>
            Gets a reference to the Boolean primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetByte(System.Boolean)">
            <summary>
            Gets a reference to the Byte primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetSByte(System.Boolean)">
            <summary>
            Gets a reference to the SByte primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetGuid(System.Boolean)">
            <summary>
            Gets a reference to the Guid primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetDate(System.Boolean)">
            <summary>
            Get a reference to the Date primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new primitive type reference</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetDateTimeOffset(System.Boolean)">
            <summary>
            Gets a reference to a datetime with offset primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new datetime with offset type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetDuration(System.Boolean)">
            <summary>
            Gets a reference to a duration primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new duration type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetTimeOfDay(System.Boolean)">
            <summary>
            Gets a reference to a TimeOfDay primitive type definition
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new TimeOfDay type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetDecimal(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets a reference to a decimal primitive type definition.
            </summary>
            <param name="precision">Precision of values of this type.</param>
            <param name="scale">Scale of values of this type.</param>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new decimal type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetDecimal(System.Boolean)">
            <summary>
            Gets a reference to a decimal primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new decimal type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetSingle(System.Boolean)">
            <summary>
            Gets a reference to a single primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new decimal type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetDouble(System.Boolean)">
            <summary>
            Gets a reference to a double primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new decimal type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetStream(System.Boolean)">
            <summary>
            Gets a reference to a stream primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new stream type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetTemporal(Microsoft.OData.Edm.EdmPrimitiveTypeKind,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets a reference to a temporal primitive type definition.
            </summary>
            <param name="kind">Primitive kind of the type reference being created.</param>
            <param name="precision">Precision of values of this type.</param>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new temporal type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetTemporal(Microsoft.OData.Edm.EdmPrimitiveTypeKind,System.Boolean)">
            <summary>
            Gets a reference to a temporal primitive type definition.
            </summary>
            <param name="kind">Primitive kind of the type reference being created.</param>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new temporal type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetBinary(System.Boolean,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets a reference to a binary primitive type definition.
            </summary>
            <param name="isUnbounded">Flag specifying if max length is unbounded.</param>
            <param name="maxLength">Maximum length of the type.</param>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new binary type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetBinary(System.Boolean)">
            <summary>
            Gets a reference to a binary primitive type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new binary type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetSpatial(Microsoft.OData.Edm.EdmPrimitiveTypeKind,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets a reference to a spatial primitive type definition.
            </summary>
            <param name="kind">Primitive kind of the type reference being created.</param>
            <param name="spatialReferenceIdentifier">Spatial Reference Identifier for the spatial type being created.</param>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new spatial type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetSpatial(Microsoft.OData.Edm.EdmPrimitiveTypeKind,System.Boolean)">
            <summary>
            Gets a reference to a spatial primitive type definition.
            </summary>
            <param name="kind">Primitive kind of the type reference being created.</param>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new spatial type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetString(System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Gets a reference to a string primitive type definition.
            </summary>
            <param name="isUnbounded">Flag specifying if max length is the maximum allowable value.</param>
            <param name="maxLength">Maximum length of the type.</param>
            <param name="isUnicode">Flag specifying if the type should support unicode encoding.</param>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new string type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.GetString(System.Boolean)">
            <summary>
            Gets a reference to a binary string type definition.
            </summary>
            <param name="isNullable">Flag specifying if the referenced type should be nullable.</param>
            <returns>A new string type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.FindDeclaredVocabularyAnnotations(Microsoft.OData.Edm.IEdmVocabularyAnnotatable)">
            <summary>
            Searches for vocabulary annotations specified by this model or a referenced model for a given element.
            </summary>
            <param name="element">The annotated element.</param>
            <returns>The vocabulary annotations for the element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Library.EdmCoreModel.FindDirectlyDerivedTypes(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Finds a list of types that derive from the supplied type.
            </summary>
            <param name="baseType">The base type that derived types are being searched for.</param>
            <returns>A list of types that derive from the type.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmCoreModel.Namespace">
            <summary>
            Gets the namespace of this core model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmCoreModel.SchemaElements">
            <summary>
            Gets the types defined in this core model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmCoreModel.DeclaredNamespaces">
            <summary>
            Gets the collection of namespaces that schema elements use contained in this model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmCoreModel.VocabularyAnnotations">
            <summary>
            Gets the vocabulary annotations defined in this model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmCoreModel.ReferencedModels">
            <summary>
            Gets the collection of models referred to by this model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmCoreModel.DirectValueAnnotationsManager">
            <summary>
            Gets the model's annotations manager.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmCoreModel.EntityContainer">
            <summary>
            Gets the only one entity container of the model.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Library.EdmCoreModel.EdmValidCoreModelPrimitiveType.TypeKind">
            <summary>
            Gets the kind of this type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.EdmTypeSemantics">
            <summary>
            Provides semantics of the predefined EDM types.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsCollection(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a collection.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a collection.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsEntity(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to an entity type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to an entity type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsEntityReference(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to an entity type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to an entity type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsComplex(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a complex type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a complex type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsEnum(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to an enumeration type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to an enumeration type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsTypeDefinition(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a type definition.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a type definition.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsStructured(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a structured type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a structured type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsStructured(Microsoft.OData.Edm.EdmTypeKind)">
            <summary>
            Returns true if this type kind represents a structured type.
            </summary>
            <param name="typeKind">Reference to the calling object.</param>
            <returns>This kind refers to a structured type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsPrimitive(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a primitive type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a primitive type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsBinary(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a binary type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a binary type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsBoolean(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a boolean type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a boolean type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsTemporal(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a temporal type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a temporal type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsTemporal(Microsoft.OData.Edm.EdmPrimitiveTypeKind)">
            <summary>
            Returns true if this type kind represents a temporal type.
            </summary>
            <param name="typeKind">Reference to the calling object.</param>
            <returns>This kind refers to a temporal type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsDuration(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a duration type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a duration type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsDate(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a Date type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a Date type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsDateTimeOffset(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a DateTimeOffset type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a DateTimeOffset type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsDecimal(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a decimal type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a decimal type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsFloating(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a floating point type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a floating point type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsSingle(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a single type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a single type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsTimeOfDay(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a TimeOfDay type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a TimeOfDay type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsDouble(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a double type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a double type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsGuid(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a GUID type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a GUID type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsSignedIntegral(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a signed integral type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a signed integral type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsSByte(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to an SByte type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to an SByte type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsInt16(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to an Int16 type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to an Int16 type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsInt32(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to an Int32 type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to an Int32 type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsInt64(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to an Int64 type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to an Int64 type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsIntegral(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to an integer type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to an integer type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsIntegral(Microsoft.OData.Edm.EdmPrimitiveTypeKind)">
            <summary>
            Returns true if this primitive type kind represents an integer type.
            </summary>
            <param name="primitiveTypeKind">Type reference.</param>
            <returns>This kind refers to an integer type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsByte(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a byte type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a byte type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsString(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a string type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a string type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsStream(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a stream type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a stream type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsSpatial(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns true if this reference refers to a spatial type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This reference refers to a spatial type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsSpatial(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Returns true if this definition refers to a spatial type.
            </summary>
            <param name="type">Type reference.</param>
            <returns>This definition refers to a spatial type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsSpatial(Microsoft.OData.Edm.EdmPrimitiveTypeKind)">
            <summary>
            Returns true if this type kind represents a spatial type.
            </summary>
            <param name="typeKind">Type reference.</param>
            <returns>This kind refers to a spatial type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsPrimitive(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of a primitive type, this will return a valid primitive type reference to the type definition. Otherwise, it will return a bad primitive type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid primitive type reference if the definition of the reference is of a primitive type. Otherwise a bad primitive type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsCollection(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of a collection type, this will return a valid collection type reference to the type definition. Otherwise, it will return a bad collection type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid collection type reference if the definition of the reference is of a collection type. Otherwise a bad collection type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsStructured(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of a structured type, this will return a valid structured type reference to the type definition. Otherwise, it will return a bad structured type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid structured type reference if the definition of the reference is of a structured type. Otherwise a bad structured type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsEnum(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of an enumeration type, this will return a valid enumeration type reference to the type definition. Otherwise, it will return a bad enumeration type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid enumeration type reference if the definition of the reference is of an enumeration type. Otherwise a bad enumeration type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsTypeDefinition(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of a type definition, this will return a valid type definition reference to the type definition. Otherwise, it will return a bad type definition reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid type definition reference if the definition of the reference is of a type definition. Otherwise a bad type definition reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsEntity(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of an entity type, this will return a valid entity type reference to the type definition. Otherwise, it will return a bad entity type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid entity type reference if the definition of the reference is of an entity type. Otherwise a bad entity type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsEntityReference(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of an entity reference type, this will return a valid entity reference type reference to the type definition. Otherwise, it will return a bad entity reference type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid entity reference type reference if the definition of the reference is of an entity reference type. Otherwise a bad entity reference type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsComplex(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of a complex type, this will return a valid complex type reference to the type definition. Otherwise, it will return a bad complex type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid complex type reference if the definition of the reference is of a complex type. Otherwise a bad complex type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsSpatial(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of a spatial type, this will return a valid spatial type reference to the type definition. Otherwise, it will return a bad spatial type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid spatial type reference if the definition of the reference is of a spatial type. Otherwise a bad spatial type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsTemporal(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of a temporal type, this will return a valid temporal type reference to the type definition. Otherwise, it will return a bad temporal type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid temporal type reference if the definition of the reference is of a temporal type. Otherwise a bad temporal type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsDecimal(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of a decimal type, this will return a valid decimal type reference to the type definition. Otherwise, it will return a bad decimal type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid decimal type reference if the definition of the reference is of a decimal type. Otherwise a bad decimal type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsString(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of a string type, this will return a valid string type reference to the type definition. Otherwise, it will return a bad string type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid string type reference if the definition of the reference is of a string type. Otherwise a bad string type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.AsBinary(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            If this reference is of a binary type, this will return a valid binary type reference to the type definition. Otherwise, it will return a bad binary type reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>A valid binary type reference if the definition of the reference is of a binary type. Otherwise a bad binary type reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.PrimitiveKind(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Returns the primitive kind of the definition of this reference.
            </summary>
            <param name="type">Reference to the calling object.</param>
            <returns>The primitive kind of the definition of this reference.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.InheritsFrom(Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Determines if the potential base type is in the inheritance hierarchy of the type being tested.
            </summary>
            <param name="type">Type to be tested for derivation from the other type.</param>
            <param name="potentialBaseType">The potential base type of the type being tested.</param>
            <returns>True if and only if the type inherits from the potential base type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.EdmTypeSemantics.IsOrInheritsFrom(Microsoft.OData.Edm.IEdmType,Microsoft.OData.Edm.IEdmType)">
            <summary>
            Determines if a type is equivalent to or derived from another type.
            </summary>
            <param name="thisType">Type to be tested for equivalence to or derivation from the other type.</param>
            <param name="otherType">Type that is the other type.</param>
            <returns>True if and only if the thisType is equivalent to or inherits from otherType.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.EdmError">
            <summary>
            Represents a reportable error in EDM
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.EdmError.#ctor(Microsoft.OData.Edm.EdmLocation,Microsoft.OData.Edm.Validation.EdmErrorCode,System.String)">
            <summary>
            Initializes a new instance of the EdmError class.
            </summary>
            <param name="errorLocation">The location where the error occurred.</param>
            <param name="errorCode">An integer code representing the error.</param>
            <param name="errorMessage">A human readable message describing the error.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.EdmError.ToString">
            <summary>
            Gets a string representation of the error.
            </summary>
            <returns>A string representation of the error.</returns>
        </member>
        <member name="P:Microsoft.OData.Edm.Validation.EdmError.ErrorLocation">
            <summary>
            Gets the location of the error in the file in which it occurred.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Validation.EdmError.ErrorCode">
            <summary>
            Gets an integer code representing the error.
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Validation.EdmError.ErrorMessage">
            <summary>
            Gets a human readable string describing the error.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.EdmValidator">
            <summary>
            Collection of validation methods.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.EdmValidator.Validate(Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Validate the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and all of its properties using the current version of the model.
            If the model has no version, <see cref="F:Microsoft.OData.Edm.Library.EdmConstants.EdmVersionLatest"/> is used.
            </summary>
            <param name="root">The root of the model to be validated.</param>
            <param name="errors">Errors encountered while validating the model.</param>
            <returns>True if model is valid, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.EdmValidator.Validate(Microsoft.OData.Edm.IEdmModel,System.Version,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Validate the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and all of its properties given certain version.
            </summary>
            <param name="root">The root of the model to be validated.</param>
            <param name="version">Version of Edm to validate against.</param>
            <param name="errors">Errors encountered while validating the model.</param>
            <returns>True if model is valid, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.EdmValidator.Validate(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.Validation.ValidationRuleSet,System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.EdmError}@)">
            <summary>
            Validate the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and all of its properties given certain version.
            </summary>
            <param name="root">The root of the model to be validated.</param>
            <param name="ruleSet">Custom rule set to validate against.</param>
            <param name="errors">Errors encountered while validating the model.</param>
            <returns>True if model is valid, otherwise false.</returns>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.Internal.InterfaceValidator.ConcreteTypeInterfaceVisitors">
            <summary>
            This is a thread-safe cache of object type to interface visitors which is shared between all instances of the validator.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.ValidationContext">
            <summary>
            Context that records errors reported by validation rules.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationContext.IsBad(Microsoft.OData.Edm.IEdmElement)">
            <summary>
            Method returns true if the <paramref name="element"/> is known to have structural errors associated with it.
            </summary>
            <param name="element">The element to test.</param>
            <returns>True if the <paramref name="element"/> has structural errors associated with it.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationContext.AddError(Microsoft.OData.Edm.EdmLocation,Microsoft.OData.Edm.Validation.EdmErrorCode,System.String)">
            <summary>
            Register an error with the validation context.
            </summary>
            <param name="location">Location of the error.</param>
            <param name="errorCode">Value representing the error.</param>
            <param name="errorMessage">Message text discribing the error.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationContext.AddError(Microsoft.OData.Edm.Validation.EdmError)">
            <summary>
            Register an error with the validation context.
            </summary>
            <param name="error">Error to register.</param>
        </member>
        <member name="P:Microsoft.OData.Edm.Validation.ValidationContext.Model">
            <summary>
            Gets the model being validated.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.ValidationExtensionMethods">
            <summary>
            Contains IsBad() and Errors() extension methods.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationExtensionMethods.IsBad(Microsoft.OData.Edm.IEdmElement)">
            <summary>
            Returns true if this element contains errors returned by the <see cref="M:Microsoft.OData.Edm.Validation.ValidationExtensionMethods.Errors(Microsoft.OData.Edm.IEdmElement)"/> method.
            </summary>
            <param name="element">Reference to the calling object.</param>
            <returns>This element is an invalid element.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationExtensionMethods.Errors(Microsoft.OData.Edm.IEdmElement)">
            <summary>
            Gets the errors, if any, that belong to this element or elements that this element contains. For example errors for a structural type include the errors of the type itself and errors of its declared properties.
            The method does not analyze elements referenced by this element. For example errors of a property do not include errors from its type.
            </summary>
            <param name="element">Reference to the calling object.</param>
            <returns>Any errors that belong to this element or elements that element contains.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationExtensionMethods.TypeErrors(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets the errors, if any, that belong to this type reference or its definition.
            </summary>
            <param name="type">The type reference.</param>
            <returns>Any errors that belong to this type reference or its definition.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.ValidationRules">
            <summary>
            Built in Edm validation rules.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.ElementDirectValueAnnotationFullNameMustBeUnique">
            <summary>
            Validates that no direct value annotations share the same name and namespace.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NamedElementNameMustNotBeEmptyOrWhiteSpace">
            <summary>
            Validates that a name is not empty or whitespace.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NamedElementNameIsTooLong">
            <summary>
            Validates that an element name is not too long according to the CSDL spec.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NamedElementNameIsNotAllowed">
            <summary>
            Validates that an element name matches the allowed pattern of names according to the CSDL spec.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.SchemaElementNamespaceMustNotBeEmptyOrWhiteSpace">
            <summary>
            Validates that an element namespace is not empty or whitespace.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.SchemaElementNamespaceIsTooLong">
            <summary>
            Validates that an element namespace is not too long according to the CSDL spec.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.SchemaElementNamespaceIsNotAllowed">
            <summary>
            Validates that an element namespace matches the allowed pattern of namespaces according to the CSDL spec.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.SchemaElementSystemNamespaceEncountered">
            <summary>
            Validates that an element namespace is not a reserved system namespace.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.SchemaElementMustNotHaveKindOfNone">
            <summary>
            A schema element without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntityContainerElementMustNotHaveKindOfNone">
            <summary>
            An entity container element without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntityContainerDuplicateEntityContainerMemberName">
            <summary>
            Validates that there are no duplicate names in an entity container.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationSourceTypeHasNoKeys">
            <summary>
            Validates that there is no entity set or singleton whose entity type has no key.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationSourceInaccessibleEntityType">
            <summary>
            Validates that the entity type of an entity set or singleton can be found from the model being validated.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyMappingsMustBeUnique">
            <summary>
            Validates that no navigation property is mapped to two different entity sets or singletons.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyMappingMustPointToValidTargetForProperty">
            <summary>
            Validates that the target of a navigation property mapping is valid for the target type of the property.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntitySetCanOnlyBeContainedByASingleNavigationProperty">
            <summary>
            Validates that an entity set can only have a single navigation property targetting it that has Contains set to true.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationMappingMustBeBidirectional">
            <summary>
            Validates that if a navigation property is traversed to another entity set/singleton, and then the navigation properties partner is traversed, the destination will be the source entity set/singleton.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntitySetRecursiveNavigationPropertyMappingsMustPointBackToSourceEntitySet">
            <summary>
            Validates that if a navigation property mapping is of recursive containment, the mapping points back to the source entity set.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntitySetTypeMustBeCollectionOfEntityType">
            <summary>
            Validates that the type of entity set is collection of entity type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.SingletonTypeMustBeEntityType">
            <summary>
            Validates that the type of singleton is entity type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.StructuredTypeInvalidMemberNameMatchesTypeName">
            <summary>
            Validates that a type does not have a property with the same name as that type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.StructuredTypePropertyNameAlreadyDefined">
            <summary>
            Validates that there are not duplicate properties in a type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.StructuredTypeBaseTypeMustBeSameKindAsDerivedKind">
            <summary>
            Validates that the base type of a complex type is complex, and the base type of an entity type is an entity.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.StructuredTypeInaccessibleBaseType">
            <summary>
            Validates that the base type of a structured type can be found from the model being validated.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.StructuredTypePropertiesDeclaringTypeMustBeCorrect">
            <summary>
            Validates that the declaring type of a property contains that property.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.OnlyEntityTypesCanBeOpen">
            <summary>
            Open types are supported only on entity types.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EnumTypeEnumMemberNameAlreadyDefined">
            <summary>
            Validates that there are not duplicate enum members in an enum.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EnumMustHaveIntegerUnderlyingType">
            <summary>
            Raises an error if the underlying type of an enum type is not an integer type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EnumMemberValueMustHaveSameTypeAsUnderlyingType">
            <summary>
            Raises an error if the type of an enum member doesn't match the underlying type of the enum it belongs to.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntityTypeDuplicatePropertyNameSpecifiedInEntityKey">
            <summary>
            Validates that there are not duplicate properties in an entity key.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntityTypeInvalidKeyNullablePart">
            <summary>
            Validates that no part of an entity key is nullable.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntityTypeEntityKeyMustBeScalar">
            <summary>
            Validates that all parts of an entity key are scalar.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntityTypeInvalidKeyKeyDefinedInBaseClass">
            <summary>
            Validates that a key is not defined if there is already a key in the base type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntityTypeKeyMissingOnEntityType">
            <summary>
            Validates that the entity type has a key.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntityTypeKeyPropertyMustBelongToEntity">
            <summary>
            Validates that all properties in the key of an entity blong to that entity.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.EntityReferenceTypeInaccessibleEntityType">
            <summary>
            Validates that the entity type wrapped in this entity reference can be found through the model being validated.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.TypeMustNotHaveKindOfNone">
            <summary>
            A type without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.PrimitiveTypeMustNotHaveKindOfNone">
            <summary>
            A primtive type without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.ComplexTypeInvalidAbstractComplexType">
            <summary>
            Validates that a complex type is not abstract.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.OpenComplexTypeCannotHaveClosedDerivedComplexType">
            <summary>
            Validates that a open complex type can not have closed derived complex type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.ComplexTypeInvalidPolymorphicComplexType">
            <summary>
            Validates that a complex type does not inherit.
            Note: Because we support complex type inheritance now, this rule should be deprecated.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.ComplexTypeMustContainProperties">
            <summary>
            Validates that a complex type contains at least one property.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.StructuralPropertyInvalidPropertyType">
            <summary>
            Validates that the property is of an allowed type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.StructuralPropertyInvalidPropertyTypeConcurrencyMode">
            <summary>
            Validates that if the concurrency mode of a property is fixed, the type is primitive.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyInvalidOperationMultipleEndsInAssociatedNavigationProperties">
            <summary>
            Validates that only one end of an association has an OnDelete operation.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyCorrectType">
            <summary>
            Validates that the type of a navigation property corresponds to the other end of the association and the multiplicity of the other end.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyDuplicateDependentProperty">
            <summary>
            Validates that the dependent properties of a navigation property contain no duplicates.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyPrincipalEndMultiplicity">
            <summary>
            Validates multiplicity of the principal end:
            0..1 - if some dependent properties are nullable, 
               1 - if some dependent properties are not nullable.
               * - not allowed.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyDependentEndMultiplicity">
            <summary>
            Validates that if the dependent properties are equivalent to the key of the dependent entity, the multiplicity of the dependent entity cannot be 1
            Validates multiplicity of the dependent entity according to the following rules:
            0..1, 1 - if dependent properties represent the dependent entity key.
                  * - if dependent properties don't represent the dependent entity key.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyDependentPropertiesMustBelongToDependentEntity">
            <summary>
            Validates that all dependent properties of a navigation property belong to the dependent entity type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyEndWithManyMultiplicityCannotHaveOperationsSpecified">
            <summary>
            Validates that the navigation property does not have both a multiplicity of many and an OnDelete operation.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyWithRecursiveContainmentTargetMustBeOptional">
            <summary>
            Validates that if a navigation property has <see cref="P:Microsoft.OData.Edm.IEdmNavigationProperty.ContainsTarget"/> = true and the target entity type is the same as 
            the declaring type of the property, then the multiplicity of the target of navigation is 0..1 or Many.
            This depends on there being a targetting cycle. Because of the rule <see cref="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationMappingMustBeBidirectional"/>, we know that either this is always true, or there will be an error
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyWithRecursiveContainmentSourceMustBeFromZeroOrOne">
            <summary>
            Validates that if a navigation property has <see cref="P:Microsoft.OData.Edm.IEdmNavigationProperty.ContainsTarget"/> = true and the target entity type is the same as 
            the declaring type of the property, then the multiplicity of the source of navigation is Zero-Or-One.
            This depends on there being a targetting cycle. Because of the rule <see cref="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationMappingMustBeBidirectional"/>, we know that either this is always true, or there will be an error
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyWithNonRecursiveContainmentSourceMustBeFromOne">
            <summary>
            Validates that if a navigation property has <see cref="P:Microsoft.OData.Edm.IEdmNavigationProperty.ContainsTarget"/> = true and the target entity type is defferent than
            the declaring type of the property, then the multiplicity of the source of navigation is One.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyEntityMustNotIndirectlyContainItself">
            <summary>
            Validates that if an entity does not directly contain itself, it cannot contain itself through a containment loop.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.NavigationPropertyTypeMismatchRelationshipConstraint">
            <summary>
            Validates that each pair of properties between the dependent properties and the principal properties are of the same type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.PropertyMustNotHaveKindOfNone">
            <summary>
            A property without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.OperationImportCannotImportBoundOperation">
            <summary>
            Validates that if an operation import cannot import an operation that is bound.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.OperationImportEntitySetExpressionIsInvalid">
            <summary>
            Validates that the entity set of a operation import is defined using a path or an entity set reference expression.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.OperationImportEntityTypeDoesNotMatchEntitySet">
            <summary>
            Validates that the return type of a operation import must match the type of the entity set of the function.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.FunctionImportWithParameterShouldNotBeIncludedInServiceDocument">
            <summary>
            Validates that the function import included in service document must not have parameters.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.FunctionMustHaveReturnType">
            <summary>
            Validates that if a function, it must have a return type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.OperationUnsupportedReturnType">
            <summary>
            Validates that a operation import has an allowed return type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.OperationParameterNameAlreadyDefinedDuplicate">
            <summary>
            Validates that a operation does not have multiple parameters with the same name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.BoundOperationMustHaveParameters">
            <summary>
            Validates that if an operation is bindable, it must have parameters.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.OperationEntitySetPathMustBeValid">
            <summary>
            Validates that if a operationImport is bindable, it must have parameters.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.OperationReturnTypeEntityTypeMustBeValid">
            <summary>
            Validates that the return type is consistent with the entityset path if it exists.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.TypeReferenceInaccessibleSchemaType">
            <summary>
            Validates that a type reference refers to a type that can be found through the model being validated.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.DecimalTypeReferenceScaleOutOfRange">
            <summary>
            Validates that the scale is between 0 and the precision of the decimal type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.DecimalTypeReferencePrecisionOutOfRange">
            <summary>
            Validates that the precision is between 0 and the max precision of the decimal type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.StringTypeReferenceStringMaxLengthNegative">
            <summary>
            Validates that the max length of a string is not negative.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.StringTypeReferenceStringUnboundedNotValidForMaxLength">
            <summary>
            Validates that IsUnbounded cannot be true if MaxLength is non-null.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.BinaryTypeReferenceBinaryMaxLengthNegative">
            <summary>
            Validates that the max length of a binary type is not negative.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.BinaryTypeReferenceBinaryUnboundedNotValidForMaxLength">
            <summary>
            Validates that isUnbounded cannot be true if MaxLength is non-null.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.TemporalTypeReferencePrecisionOutOfRange">
            <summary>
            Validates that the precision is between 0 and the max precision of the temporal type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.ModelDuplicateSchemaElementName">
            <summary>
            Validates every schema element in the current model is unique across all referenced models.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.ModelDuplicateEntityContainerName">
            <summary>
            Validates that there are not duplicate properties in an entity key.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.ModelBoundFunctionOverloadsMustHaveSameReturnType">
            <summary>
            Validates all function overloads with the same name have the same returntype.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.UnBoundFunctionOverloadsMustHaveIdenticalReturnTypes">
            <summary>
            Validates that all function overloads have the same return types.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.ImmediateValueAnnotationElementAnnotationIsValid">
            <summary>
            Validates that an immediate value annotation has a name and a namespace.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.ImmediateValueAnnotationElementAnnotationHasNameAndNamespace">
            <summary>
            Validates that an immediate value annotation that is flagged to be serialized as an element can be serialized safely.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.DirectValueAnnotationHasXmlSerializableName">
            <summary>
            Validates that the name of a direct value annotation can safely be serialized as XML.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.VocabularyAnnotationInaccessibleTarget">
            <summary>
            Validates that a vocabulary annotations target can be found through the model containing the annotation.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.ValueAnnotationAssertCorrectExpressionType">
            <summary>
            Validates that if a value annotation declares a type, the expression for that annotation has the correct type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.AnnotationInaccessibleTerm">
            <summary>
            Validates that a vocabulary annotations term can be found through the model containing the annotation.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.PropertyValueBindingValueIsCorrectType">
            <summary>
            Validates that the value of a property value binding is the correct type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.TermMustNotHaveKindOfNone">
            <summary>
            A term without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.IfExpressionAssertCorrectTestType">
            <summary>
            Validates that an if expression has a boolean condition.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.CollectionExpressionAllElementsCorrectType">
            <summary>
            Validates that all properties of a collection expression are of the correct type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.RecordExpressionPropertiesMatchType">
            <summary>
            Validates that if a value record expression declares a type, the property types are correct.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.OperationApplicationExpressionParametersMatchAppliedOperation">
            <summary>
            Validates the types of a function application are correct.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.VocabularyAnnotatableNoDuplicateAnnotations">
            <summary>
            Validates that there are no annotations that share the same term and qualifier.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.ValidationRules.PrimitiveValueValidForType">
            <summary>
            Validates that if a primitive value declares a type, the value is acceptable for the type.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.ValidationRule">
            <summary>
            A semantic validation rule.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.ValidationRule`1">
            <summary>
            A validation rule that is valid for a specific type.
            </summary>
            <typeparam name="TItem">Type that the rule is valid for.</typeparam>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationRule`1.#ctor(System.Action{Microsoft.OData.Edm.Validation.ValidationContext,`0})">
            <summary>
            Initializes a new instance of the ValidationRule class.
            </summary>
            <param name="validate">Action to perform the validation.</param>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.ValidationRuleSet">
            <summary>
            A set of rules to run during validation.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationRuleSet.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.ValidationRule},System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.ValidationRule})">
            <summary>
            Initializes a new instance of the ValidationRuleSet class.
            </summary>
            <param name="baseSet">Ruleset whose rules should be contained in this set.</param>
            <param name="newRules">Additional rules to add to the set.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationRuleSet.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.Validation.ValidationRule})">
            <summary>
            Initializes a new instance of the ValidationRuleSet class.
            </summary>
            <param name="rules">Rules to be contained in this ruleset.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationRuleSet.GetEdmModelRuleSet(System.Version)">
            <summary>
            Gets the default validation ruleset for the given version.
            </summary>
            <param name="version">The EDM version being validated.</param>
            <returns>The set of rules to validate that the model conforms to the given version.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationRuleSet.GetEnumerator">
            <summary>
            Gets all of the rules in this ruleset.
            </summary>
            <returns>All of the rules in this ruleset.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.Validation.ValidationRuleSet.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets all of the rules in this ruleset.
            </summary>
            <returns>All of the rules in this ruleset.</returns>
        </member>
        <member name="T:Microsoft.OData.Edm.Validation.EdmErrorCode">
            <summary>
            EdmLib validation error codes
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidErrorCodeValue">
            <summary>
            Invalid error code
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.XmlError">
            <summary>
            An exception was thrown by the underlying xml reader.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.UnexpectedXmlNodeType">
            <summary>
            Encountered an XML node that was never used
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.UnexpectedXmlAttribute">
            <summary>
            Encountered an XML attribute that was never used
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.UnexpectedXmlElement">
            <summary>
            Encountered an XML element that was never used
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.TextNotAllowed">
            <summary>
            Text was found in a location it was not allowed in
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EmptyFile">
            <summary>
            An empty file was provided to the parser
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.MissingAttribute">
            <summary>
            An XML element was missing a required attribute
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidName">
            <summary>
            Invalid Name
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.MissingType">
            <summary>
            An XML attribute or element representing EDM type is missing.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.AlreadyDefined">
            <summary>
            Element name is already defined in this context.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidVersionNumber">
            <summary>
            The specified version number is not valid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidBoolean">
            <summary>
            Malformed boolean value.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadProperty">
            <summary>
            The property contains an error.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidPropertyType">
            <summary>
            The type of this property is invalid for the given context.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.PrecisionOutOfRange">
            <summary> 
            Precision out of range 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ScaleOutOfRange">
            <summary> 
            Scale out of range 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NameTooLong">
            <summary>
            Name is too long.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidAssociation">
            <summary>
            The provided association is invalid
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadNavigationProperty">
            <summary>
            Navigation property contains errors.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidKey">
            <summary>
            Entity key is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InterfaceCriticalPropertyValueMustNotBeNull">
            <summary>
            The value of the property must not be null.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InterfaceCriticalKindValueMismatch">
            <summary>
            An object with an interface kind property does not implement the interface corresponding to the value of that property.
            For example this error will be reported for an object that implements <see cref="T:Microsoft.OData.Edm.IEdmType"/> interface with kind property reporting <see cref="T:Microsoft.OData.Edm.EdmTypeKind"/>.Entity, 
            but does not implement <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> interface.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InterfaceCriticalKindValueUnexpected">
            <summary>
            The value of an interface kind property is not semantically valid. A semantically valid model must not contain elements of kind 'None'.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InterfaceCriticalEnumerableMustNotHaveNullElements">
            <summary>
            An enumeration property must not contain null elements.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InterfaceCriticalEnumPropertyValueOutOfRange">
            <summary>
            The value of the enum type property is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InterfaceCriticalNavigationPartnerInvalid">
            <summary>
            If property P1 is a navigation property and P2 is its parnter, then partner property of P2 must be P1.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InterfaceCriticalCycleInTypeHierarchy">
            <summary>
            A chain of base types is cyclic.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidMultiplicity">
            <summary>
            Multiplicity value was malformed
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidAction">
            <summary>
            The value for the Action attribute is invalid or not allowed in the current context
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidOnDelete">
            <summary>
            An error occured processing the OnDelete element
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedComplexType">
            <summary>
            No complex type with that name exists.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidEndEntitySet">
            <summary>
            The extent name used in the EntittyContainerType End does not match the name of any of the EntityContainerProperties in the containing EntityContainer
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationImportEntitySetExpressionIsInvalid">
            <summary>
            Operation import specifies an entity set expression which is not supported in this context. Operation import entity set expression can be either an entity set reference or a path starting with a operation import parameter and traversing navigation properties.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NavigationPropertyMappingMustPointToValidTargetForProperty">
            <summary>
            The target entity set must be able to hold an entity that is valid for the navigation property of a mapping.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidRoleInRelationshipConstraint">
            <summary>
            Invalid role value in the relationship constraint
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidPropertyInRelationshipConstraint">
            <summary>
            Invalid Property in relationship constraint
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.TypeMismatchRelationshipConstraint">
            <summary> 
            Type mismatch between ToProperty and FromProperty in the relationship constraint
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidMultiplicityOfPrincipalEnd">
            <summary> 
            Invalid multiplicty of the principal end of a navigation.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.MismatchNumberOfPropertiesInRelationshipConstraint">
            <summary> 
            The number of properties in the FromProperty and ToProperty in the relationship constraint must be identical
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidMultiplicityOfDependentEnd">
            <summary> 
            Invalid multiplicty of the dependent end of a navigation.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OpenTypeNotSupported">
            <summary>
            Open types are supported only in version 1.2 and after version 2.0. Only entity types can be open.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.SameRoleReferredInReferentialConstraint">
            <summary> 
            Same role referred in the ToRole and FromRole of a referential constraint 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EntityKeyMustBeScalar">
            <summary> 
            Properties that are part of entity key must be of scalar type
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EntityKeyMustNotBeBinary">
            <summary> 
            Binary type properties which are part of entity key are currently supported before V2.0 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EndWithManyMultiplicityCannotHaveOperationsSpecified">
            <summary>
            End with * multiplicity cannot have operations specified
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NavigationSourceTypeHasNoKeys">
            <summary>
            Navigation source type has no keys
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidConcurrencyMode">
            <summary>
            ConcurrencyMode value was malformed
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ConcurrencyRedefinedOnSubtypeOfEntitySetType">
            <summary>
            Conurency can't change for any sub types of an EntitySet type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationImportUnsupportedReturnType">
            <summary>
            In version 1.0 operation import can have no return type or return a collection of scalars or a collection of entities.
            In all other versions operation import can have no return type or return a scalar, a complex type, an entity type or a collection of those.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationImportReturnsEntitiesButDoesNotSpecifyEntitySet">
            <summary>
            Operation import specifies entity type return but no entity set.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationImportEntityTypeDoesNotMatchEntitySet">
            <summary>
            Operation import specifies entity type that does not derive from element type of entity set.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationImportSpecifiesEntitySetButDoesNotReturnEntityType">
            <summary>
            Operation import specifies a binding to an entity set but does not return entities.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationImportCannotImportBoundOperation">
            <summary>
            Operation import cannot import a bound function.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.FunctionMustHaveReturnType">
            <summary>
            A function must have return type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.SimilarRelationshipEnd">
            <summary>
            Same Entity Set Taking part in the same role of the relationship set in two different relationship sets
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DuplicatePropertySpecifiedInEntityKey">
            <summary>
            Entity key refers to the same property twice
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NullableComplexTypeProperty">
            <summary> 
            Nullable complex Type not supported in version 1.0 and 2.0.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.KeyMissingOnEntityType">
            <summary>
            No Key defined on Entity Type 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.SystemNamespaceEncountered">
            <summary>
            Need not specify system namespace in using 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidNamespaceName">
            <summary> 
            Invalid qualification specified for type 
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EnumMemberValueOutOfRange">
            <summary>
            The value for an enumeration type member is ouf of range.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DuplicateEntityContainerMemberName">
            <summary>
            The entity container name has already been assigned to a different entity container.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.UnboundFunctionOverloadHasIncorrectReturnType">
            <summary>
            An unbound function overload has a different return type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidAbstractComplexType">
            <summary>
            Complex types were not allowed to be abstract here.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidPolymorphicComplexType">
            <summary>
            Complex types cannot have base types in this version.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NavigationPropertyEntityMustNotIndirectlyContainItself">
            <summary>
            A navigation property without direct containment cannot contain its declaring entity indirectly.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EntitySetRecursiveNavigationPropertyMappingsMustPointBackToSourceEntitySet">
            <summary>
            If a navigation property mapping is of a recursive navigation property, the mapping must point back to the same entity set.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadAmbiguousElementBinding">
            <summary>
            Name collision makes this name ambiguous.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedType">
            <summary>
            Could not find a type with this name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedPrimitiveType">
            <summary>
            Could not find a primitive type with this name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadCyclicComplex">
            <summary>
            This complex type is part of a cycle.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadCyclicEntityContainer">
            <summary>
            This Entity Container is bad because some part of its extends hierarchy is part of a cycle.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadCyclicEntity">
            <summary>
            This entity type is part of a cycle.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.TypeSemanticsCouldNotConvertTypeReference">
            <summary>
            Could not convert type reference to the requested type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ConstructibleEntitySetTypeInvalidFromEntityTypeRemoval">
            <summary>
            This entity set became invalid because the entity that it was of the type of was removed from the model.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedEntityContainer">
            <summary>
            Could not find an EntityContainer with that name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedEntitySet">
            <summary>
            Could not find an EntitySet with that name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedProperty">
            <summary>
            Could not find a property with that name
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadNonComputableAssociationEnd">
            <summary>
            Could not find an association end with that name
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NavigationPropertyTypeInvalidBecauseOfBadAssociation">
            <summary>
            Type of the navigation property was invalid because the association of the navigation property was invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EntityMustHaveEntityBaseType">
            <summary>
            The base type of an entity must also be an entity.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ComplexTypeMustHaveComplexBaseType">
            <summary>
            The base type of a complex type must also be complex.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedOperation">
            <summary>
            Could not find a operation with this name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.KeyPropertyMustBelongToEntity">
            <summary>
            Every property in an entity key must be a property of the entity.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ReferentialConstraintPrincipalEndMustBelongToAssociation">
            <summary>
            The principal end of a referential constraint must be one of the ends of the association that defined the referential constraint.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DependentPropertiesMustBelongToDependentEntity">
            <summary>
            Dependent properties of a referential constraint must belong to the dependent entity set.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DeclaringTypeMustBeCorrect">
            <summary>
            If a structured type declares a property, that properties declaring type must be the declaring structured type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidNavigationPropertyType">
            <summary>
            Navigation property has a type that is not an entity or collection of entities.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.UnderlyingTypeIsBadBecauseEnumTypeIsBad">
            <summary>
            Underlying type of the enumeration type is bad because the enumeration type is bad.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ComplexTypeMustHaveProperties">
            <summary>
            Complex types must contain at least one property.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationImportParameterIncorrectType">
            <summary>
            Unsupported operation import parameter type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DuplicateDependentProperty">
            <summary>
            A referential constraint cannot have multiple dependent properties with the same name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BoundOperationMustHaveParameters">
            <summary>
            Bindable operation must have at least one parameter.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationCannotHaveEntitySetPathWithUnBoundOperation">
            <summary>
            Operation with an EntitySetPath must be on a bound operation.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidPathFirstPathParameterNotMatchingFirstParameterName">
            <summary>
            Operation with an EntitySetPath must have the first path item be the same name as the binding parameter.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidPathWithNonEntityBindingParameter">
            <summary>
            Operation with an EntitySetPath references a binding parameter that is not an entity type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationWithInvalidEntitySetPathMissingCompletePath">
            <summary>
            Operation with an EntitySetPath segment is invalid as it has less than two items in the path.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidPathUnknownTypeCastSegment">
            <summary>
            Operation with an EntitySetPath segment has an unknown type cast segment.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidPathInvalidTypeCastSegment">
            <summary>
            Operation with an EntitySetPath segment has an invalid type cast segment.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidPathTypeCastSegmentMustBeEntityType">
            <summary>
            Operation with an EntitySetPath segment has an invalid type cast segment, it must be an EntityType.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidPathUnknownNavigationProperty">
            <summary>
            Operation with an EntitySetPath segment has an unknown navigation property.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationWithEntitySetPathAndReturnTypeTypeNotAssignable">
            <summary>
            Operation with an EntitySetPath has a return type that is not assignable to the resulting determined type from the entity set path.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationWithEntitySetPathResolvesToCollectionEntityTypeMismatchesEntityTypeReturnType">
            <summary>
            Operation entity set path resolves to a collection entity type when an entity type is expected
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationWithEntitySetPathResolvesToEntityTypeMismatchesCollectionEntityTypeReturnType">
            <summary>
            Operation entity set path resolves to an entity type when a collection of entity type is expected.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.OperationWithEntitySetPathReturnTypeInvalid">
            <summary>
            Operation with an EntitySetPath has an invalid return type. The return type must be an entity type or collection of entity type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.MaxLengthOutOfRange">
            <summary>
            Max length is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.PathExpressionHasNoEntityContext">
            <summary>
            Binding context for Path expression does not supply an entity type
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidSrid">
            <summary>
            Invalid value for SRID
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidMaxLength">
            <summary>
            Invalid value for max length
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidLong">
            <summary>
            Invalid value for long
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidInteger">
            <summary>
            Invalid value for integer
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidAssociationSet">
            <summary>
            Invalid association set
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidParameterMode">
            <summary>
            Invalid parameter mode
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedEntityType">
            <summary>
            No entity type with that name exists.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidValue">
            <summary>
            Value is invalid
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidBinary">
            <summary>
            Binary value is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidFloatingPoint">
            <summary>
            Floating point value is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidDateTime">
            <summary>
            DateTime value is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidDateTimeOffset">
            <summary>
            DateTimeOffset value is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidDecimal">
            <summary>
            Decimal value is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidGuid">
            <summary>
            Guid value is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidTypeKindNone">
            <summary>
            The type kind None is not semantically valid. A semantically valid model must not contain elements of type kind None.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidIfExpressionIncorrectNumberOfOperands">
            <summary>
            The if expression is invalid because it does not have 3 elements.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EnumMemberTypeMustMatchEnumUnderlyingType">
            <summary>
            The type of an enum member value must match the underlying of the parent enum.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidIsTypeExpressionIncorrectNumberOfOperands">
            <summary>
            The IsType expression is invalid because it does not have 1 element.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidTypeName">
            <summary>
            The type name is not fully qualified and not a primitive.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidQualifiedName">
            <summary>
            The term name is not fully qualified.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NoReadersProvided">
            <summary>
            No model was parsed because no XmlReaders were provided.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NullXmlReader">
            <summary>
            Model could not be parsed because one of the XmlReaders was null.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.IsUnboundedCannotBeTrueWhileMaxLengthIsNotNull">
            <summary>
            IsUnbounded cannot be true if MaxLength is non-null.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidElementAnnotation">
            <summary>
            ImmediateValueAnnotation is invalid as an element annotation.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidLabeledElementExpressionIncorrectNumberOfOperands">
            <summary>
            The LabeledElement expression is invalid because it does not have 1 element.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedLabeledElement">
            <summary>
            Could not find a LabeledElement with that name
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedEnumMember">
            <summary>
            Could not find a enum member with that name
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidCastExpressionIncorrectNumberOfOperands">
            <summary>
            The Cast expression is invalid because it does not have 1 element.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedParameter">
            <summary>
            Could not find a Parameter with that name
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NavigationPropertyWithRecursiveContainmentTargetMustBeOptional">
            <summary>
            A navigation property with <see cref="P:Microsoft.OData.Edm.IEdmNavigationProperty.ContainsTarget"/> = true must point to an optional target.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NavigationPropertyWithRecursiveContainmentSourceMustBeFromZeroOrOne">
            <summary>
            If a navigation property has <see cref="P:Microsoft.OData.Edm.IEdmNavigationProperty.ContainsTarget"/> = true and the target entity type is the same as 
            the declaring type of the property, then the multiplicity of the source of navigation is Zero-Or-One.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NavigationPropertyWithNonRecursiveContainmentSourceMustBeFromOne">
            <summary>
            If a navigation property has <see cref="P:Microsoft.OData.Edm.IEdmNavigationProperty.ContainsTarget"/> = true and the target entity type is defferent than
            the declaring type of the property, then the multiplicity of the source of navigation is One.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ImpossibleAnnotationsTarget">
            <summary>
            The annotation target path cannot possibly refer to an annotable element.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.CannotAssertNullableTypeAsNonNullableType">
            <summary>
            A nullable type is not valid if a non-nullable type is required.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.CannotAssertPrimitiveExpressionAsNonPrimitiveType">
            <summary>
            The expression is a primitive constant, and cannot be valid for an non-primitive type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ExpressionPrimitiveKindNotValidForAssertedType">
            <summary>
            The primitive type is not valid for the requested type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NullCannotBeAssertedToBeANonNullableType">
            <summary>
            Null is not valid in a non nullable expression.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ExpressionNotValidForTheAssertedType">
            <summary>
            The expression is not valid for the asserted type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.CollectionExpressionNotValidForNonCollectionType">
            <summary>
            A collection expression is not valid for a non-collection type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.RecordExpressionNotValidForNonStructuredType">
            <summary>
            A record expression is not valid for a non-structured type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.RecordExpressionMissingRequiredProperty">
            <summary>
            The record expression does not have all of the properties required for the specified type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.RecordExpressionHasExtraProperties">
            <summary>
            The record expression's type is not open, but the record expression has extra properties.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DuplicateAnnotation">
            <summary>
            Target has multiple annotations with the same term and same qualifier.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.IncorrectNumberOfArguments">
            <summary>
            Function application has wrong number of arguments for the function being applied.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DuplicateAlias">
            <summary>
            Is it invalid to have duplicate alias in a single schema model.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ReferencedTypeMustHaveValidName">
            <summary>
            A model cannot be serialized to CSDL if it has references to types without fully qualified names.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.SingleFileExpected">
            <summary>
            The model could not be serialized because multiple schemas were produced and only a single output stream was found.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.UnknownEdmxVersion">
            <summary>
            The Edmx version is not valid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.UnknownEdmVersion">
            <summary>
            The EdmVersion is not valid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NoSchemasProduced">
            <summary>
            Nothing was written because no schemas were produced.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DuplicateEntityContainerName">
            <summary>
            Model has multiple entity containers with the same name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ContainerElementContainerNameIncorrect">
            <summary>
            The container name of a container element must be the full name of the container entity container.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.PrimitiveConstantExpressionNotValidForNonPrimitiveType">
            <summary>
            A primitive constant expression is not valid for a non-primitive type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.IntegerConstantValueOutOfRange">
            <summary>
            The value of the integer constant is out of range for the asserted type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.StringConstantLengthOutOfRange">
            <summary>
            The length of the string constant is too large for the asserted type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BinaryConstantLengthOutOfRange">
            <summary>
            The length of the binary constant is too large for the asserted type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidOperationImportParameterMode">
            <summary>
            None is not a valid mode for a operation import parameter.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.TypeMustNotHaveKindOfNone">
            <summary>
            A type without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.PrimitiveTypeMustNotHaveKindOfNone">
            <summary>
            A primitive type without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.PropertyMustNotHaveKindOfNone">
            <summary>
            A property without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.TermMustNotHaveKindOfNone">
            <summary>
            A term without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.SchemaElementMustNotHaveKindOfNone">
            <summary>
            A schema element without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EntityContainerElementMustNotHaveKindOfNone">
            <summary>
            An entity container element without other errors must not have kind of none.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BinaryValueCannotHaveEmptyValue">
            <summary>
            A binary value must have content.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EntitySetCanOnlyBeContainedByASingleNavigationProperty">
            <summary>
            There can only be a single navigation property mapping with containment that targets a particular entity set.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InconsistentNavigationPropertyPartner">
            <summary>
            The navigation properties partner does not point back to the correct type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EntitySetCanOnlyHaveSingleNavigationPropertyWithContainment">
            <summary>
            An entity set can only have one navigation property with containment.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NavigationMappingMustBeBidirectional">
            <summary>
            If a navigation property is traversed from an entity set/singleton, and then it's partner is traversed from the target of the first mapping, the destination should be the originating entity set/singleton.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DuplicateNavigationPropertyMapping">
            <summary>
            There can only be a single mapping from a given EntitySet with a particular navigation property.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.AllNavigationPropertiesMustBeMapped">
            <summary>
            An entity set must have a mapping for all of the navigation properties in its element type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.TypeAnnotationMissingRequiredProperty">
            <summary>
            Type annotation does not have a property binding for all required properties.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.TypeAnnotationHasExtraProperties">
            <summary>
            Type annotation has a property binding for a non-existant property and its type is not open.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidDuration">
            <summary>
            Duration value is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidPrimitiveValue">
            <summary>
            The primitive type is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EnumMustHaveIntegerUnderlyingType">
            <summary>
            An Enum type must have an underlying type of integer.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedTerm">
            <summary>
            Could not find a term with this name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadPrincipalPropertiesInReferentialConstraint">
            <summary>
            The principal properties of a referential constraint must match the key of the referential constraint.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DuplicateDirectValueAnnotationFullName">
            <summary>
            A direct value annotation with the same name and namespace already exists.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NoEntitySetsFoundForType">
            <summary>
            Cannot infer an entity set because no set exists of the given type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.CannotInferEntitySetWithMultipleSetsPerType">
            <summary>
            Cannot infer an entity set because more than one set exists of the given type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidEntitySetPath">
            <summary>
            Invalid entity set path.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidEnumMemberPath">
            <summary>
            Invalid enum member path.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.QualifierMustBeSimpleName">
            <summary>
            An annotation qualifier must be a simple name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedEnumType">
            <summary>
            Enum type could not be resolved.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedTarget">
            <summary>
            Could not find a target with this name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.PathIsNotValidForTheGivenContext">
            <summary>
            Path cannot be resolved in the given context.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BadUnresolvedNavigationPropertyPath">
            <summary>
            Could not find a navigation property with this name.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NavigationPropertyWithCollectionTypeCannotHaveNullableAttribute">
            <summary>
            The 'Nullable' attribute cannot be specified for a navigation property with collection type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.MetadataDocumentCannotHaveMoreThanOneEntityContainer">
            <summary>
            Metadata document cannot have more than one entity container.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DuplicateFunctions">
            <summary>
            Model has multiple functions that are the same definitions.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.DuplicateActions">
            <summary>
            Model has multiple functions that are the same definitions.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.BoundFunctionOverloadsMustHaveSameReturnType">
            <summary>
            Bound Function overloads must have the same return type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.SingletonTypeMustBeEntityType">
            <summary>
            The type of singleton must be entity type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.EntitySetTypeMustBeCollectionOfEntityType">
            <summary>
            The type of entity set must be collection of entity type.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.NavigationPropertyOfCollectionTypeMustNotTargetToSingleton">
            <summary>
            The binding on navigation property of collection type must not target to singleton.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.ReferenceElementMustContainAtLeastOneIncludeOrIncludeAnnotationsElement">
            <summary>
            Reference must contatin at least one Include or IncludeAnnotations
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.FunctionImportWithParameterShouldNotBeIncludedInServiceDocument">
            <summary>
            Function import must not have parameters if included in service document.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.UnresolvedReferenceUriInEdmxReference">
            <summary>
            Unresolved Uri found in edmx:Reference, getReferencedModelReaderFunc should not return null when the URI is not a well-known schema.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidDate">
            <summary>
            Date value is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.Validation.EdmErrorCode.InvalidTimeOfDay">
            <summary>
            TimeOfDay value is invalid.
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.PlatformHelper">
            <summary>
            Helper methods that provide a common API surface on all platforms.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PlatformHelper.EmptyTypes">
            <summary>
            Use this instead of Type.EmptyTypes.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PlatformHelper.DateValidator">
            <summary>
            This pattern eliminates all invalid dates, the supported format should be "YYYY-MM-DD"
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PlatformHelper.TimeOfDayValidator">
            <summary>
            This pattern eliminates all invalid timeOfDay, the supported format should be "hh:mm:ss.fffffff"
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PlatformHelper.UriSchemeHttp">
            <summary>
            Use this instead of Uri.UriSchemeHttp.
            </summary>
        </member>
        <member name="F:Microsoft.OData.Edm.PlatformHelper.UriSchemeHttps">
            <summary>
            Use this instead of Uri.UriSchemeHttps.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetAssembly(System.Type)">
            <summary>
            Replacement for Type.Assembly.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsValueType(System.Type)">
            <summary>
            Replacement for Type.IsValueType.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsGenericParameter(System.Type)">
            <summary>
            Replacement for Type.IsGenericParameter.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsAbstract(System.Type)">
            <summary>
            Replacement for Type.IsAbstract.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsGenericType(System.Type)">
            <summary>
            Replacement for Type.IsGenericType.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsGenericTypeDefinition(System.Type)">
            <summary>
            Replacement for Type.IsGenericTypeDefinition.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsVisible(System.Type)">
            <summary>
            Replacement for Type.IsVisible.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsInterface(System.Type)">
            <summary>
            Replacement for Type.IsInterface.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsClass(System.Type)">
            <summary>
            Replacement for Type.IsClass.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsEnum(System.Type)">
            <summary>
            Replacement for Type.IsEnum.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetBaseType(System.Type)">
            <summary>
            Replacement for Type.BaseType.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.ContainsGenericParameters(System.Type)">
            <summary>
            Replacement for Type.ContainsGenericParameters.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>See documentation for property being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.AsReadOnly``1(``0[])">
            <summary>
            Replacement for Array.AsReadOnly(T[]).
            </summary>
            <typeparam name="T">Type of items in the array.</typeparam>
            <param name="array">Array to use to create the ReadOnlyCollection.</param>
            <returns>ReadOnlyCollection containing the specified array items.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.ConvertStringToDate(System.String)">
            <summary>
            Converts a string to a Date.
            </summary>
            <param name="text">String to be converted.</param>
            <returns>Date value</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.ConvertStringToTimeOfDay(System.String)">
            <summary>
            Converts a string to a TimeOfDay.
            </summary>
            <param name="text">String to be converted.</param>
            <returns>TimeOfDay value</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.ConvertStringToDateTimeOffset(System.String)">
            <summary>
            Converts a string to a DateTimeOffset.
            </summary>
            <param name="text">String to be converted.</param>
            <returns>See documentation for method being accessed in the body of the method.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.ValidateTimeZoneInformationInDateTimeOffsetString(System.String)">
            <summary>
            Validates that the DateTimeOffset string contains the time zone information.
            </summary>
            <param name="text">String to be validated.</param>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.AddSecondsPaddingIfMissing(System.String)">
            <summary>
            Adds the seconds padding as zeros to the date time string if seconds part is missing.
            </summary>
            <param name="text">String that needs seconds padding</param>
            <returns>DateTime string after adding seconds padding</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetTypeOrThrow(System.String)">
            <summary>
            Gets the specified type.
            </summary>
            <param name="typeName">Name of the type to get.</param>
            <exception cref="T:System.TypeLoadException">Throws if the type could not be found.</exception>
            <returns>Type instance that represents the specified type name.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetTypeCode(System.Type)">
            <summary>
            Gets the TypeCode for the specified type.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>TypeCode representing the specified type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetUnicodeCategory(System.Char)">
            <summary>
            Gets the Unicode Category of the specified character.
            </summary>
            <param name="c">Character to get category of.</param>
            <returns>Category of the character.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsProperty(System.Reflection.MemberInfo)">
            <summary>
            Replacement for usage of MemberInfo.MemberType property.
            </summary>
            <param name="member">MemberInfo on which to access this method.</param>
            <returns>True if the specified member is a property, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsPrimitive(System.Type)">
            <summary>
            Replacement for usage of Type.IsPrimitive property.
            </summary>
            <param name="type">Type on which to access this method.</param>
            <returns>True if the specified type is primitive, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsSealed(System.Type)">
            <summary>
            Replacement for usage of Type.IsSealed property.
            </summary>
            <param name="type">Type on which to access this method.</param>
            <returns>True if the specified type is sealed, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.IsMethod(System.Reflection.MemberInfo)">
            <summary>
            Replacement for usage of MemberInfo.MemberType property.
            </summary>
            <param name="member">MemberInfo on which to access this method.</param>
            <returns>True if the specified member is a method, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.AreMembersEqual(System.Reflection.MemberInfo,System.Reflection.MemberInfo)">
            <summary>
            Compares two methodInfos and returns true if they represent the same method.
            Need this for Windows Phone as the method Infos of the same method are not always instance equivalent.
            </summary>
            <param name="member1">MemberInfo to compare.</param>
            <param name="member2">MemberInfo to compare.</param>
            <returns>True if the specified member is a method, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetPublicProperties(System.Type,System.Boolean)">
            <summary>
            Gets public properties for the specified type.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <param name="instanceOnly">True if method should return only instance properties, false if it should return both instance and static properties.</param>
            <returns>Enumerable of public properties for the type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetPublicProperties(System.Type,System.Boolean,System.Boolean)">
            <summary>
            Gets public properties for the specified type.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <param name="instanceOnly">True if method should return only instance properties, false if it should return both instance and static properties.</param>
            <param name="declaredOnly">True if method should return only properties that are declared on the type, false if it should return properties declared on the type as well as those inherited from any base types.</param>
            <returns>Enumerable of public properties for the type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetNonPublicProperties(System.Type,System.Boolean,System.Boolean)">
            <summary>
            Gets non public properties for the specified type.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <param name="instanceOnly">True if method should return only instance properties, false if it should return both instance and static properties.</param>
            <param name="declaredOnly">True if method should return only properties that are declared on the type, false if it should return properties declared on the type as well as those inherited from any base types.</param>
            <returns>Enumerable of non public properties for the type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetInstanceConstructors(System.Type,System.Boolean)">
            <summary>
            Gets instance constructors for the specified type.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <param name="isPublic">True if method should return only public constructors, false if it should return only non-public constructors.</param>
            <returns>Enumerable of instance constructors for the specified type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetInstanceConstructor(System.Type,System.Boolean,System.Type[])">
            <summary>
            Gets a instance constructor for the type that takes the specified argument types.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <param name="isPublic">True if method should search only public constructors, false if it should search only non-public constructors.</param>
            <param name="argTypes">Array of argument types for the constructor.</param>
            <returns>ConstructorInfo for the constructor with the specified characteristics if found, otherwise null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.TryGetMethod(System.Type,System.String,System.Type[],System.Reflection.MethodInfo@)">
            <summary>
            Tries to the get method from the type, returns null if not found.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="parameterTypes">The parameter types.</param>
            <returns>Returns True if found.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetMethods(System.Type)">
            <summary>
            Gets all methods on the specified type.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>Enumerable of all methods for the specified type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetMethod(System.Type,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets a method on the specified type.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <param name="name">Name of the method on the type.</param>
            <param name="isPublic">True if method should search only public methods, false if it should search only non-public methods.</param>
            <param name="isStatic">True if method should search only static methods, false if it should search only instance methods.</param>
            <returns>MethodInfo for the method with the specified characteristics if found, otherwise null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetMethod(System.Type,System.String,System.Type[],System.Boolean,System.Boolean)">
            <summary>
            Gets a method on the specified type.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <param name="name">Name of the method on the type.</param>
            <param name="types">Argument types for the method.</param>
            <param name="isPublic">True if method should search only public methods, false if it should search only non-public methods.</param>
            <param name="isStatic">True if method should search only static methods, false if it should search only instance methods.</param>
            <returns>MethodInfo for the method with the specified characteristics if found, otherwise null.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetPublicStaticMethods(System.Type)">
            <summary>
            Gets all public static methods for a type.
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>Enumerable of all public static methods for the specified type.</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.GetNonPublicNestedTypes(System.Type)">
            <summary>
            Replacement for Type.GetNestedTypes(BindingFlags.NonPublic)
            </summary>
            <param name="type">Type on which to call this helper method.</param>
            <returns>All types nested in the current type</returns>
        </member>
        <member name="M:Microsoft.OData.Edm.PlatformHelper.CreateCompiled(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Creates a Compiled Regex expression
            </summary>
            <param name="pattern">Pattern to match.</param>
            <param name="options">Options to use.</param>
            <returns>Regex expression to match supplied patter</returns>
            <remarks>Is marked as compiled option only in platforms otherwise RegexOption.None is used</remarks>
        </member>
        <member name="T:AssemblyRef">
            <summary>
            Sets public key string for friend assemblies.
            </summary>
        </member>
        <member name="F:AssemblyRef.ProductPublicKey">
            <summary>ProductPublicKey is an official MS supported public key for external releases.</summary>
        </member>
        <member name="F:AssemblyRef.TestPublicKey">
            <summary>TestPublicKey is an unsupported strong key for testing purpose only.</summary>
        </member>
        <member name="F:AssemblyRef.ProductPublicKeyToken">
            <summary>Dont know what this is</summary>
        </member>
        <member name="M:Microsoft.OData.Edm.EntityResDescriptionAttribute.#ctor(System.String)">
            <summary>
                Constructs a new sys description.
            </summary>
            <param name='description'>
                description text.
            </param>
        </member>
        <member name="P:Microsoft.OData.Edm.EntityResDescriptionAttribute.Description">
            <summary>
                Retrieves the description text.
            </summary>
            <returns>
                description
            </returns>
        </member>
        <member name="T:Microsoft.OData.Edm.EntityRes">
             <summary>
                AutoGenerated resource class. Usage:
            
                    string s = EntityRes.GetString(EntityRes.MyIdenfitier);
             </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Strings">
            <summary>
               Strongly-typed and parameterized string resources.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Annotations_DocumentationPun(System.Object)">
            <summary>
            A string like "Annotations in the 'Documentation' namespace must implement 'IEdmDocumentation', but '{0}' does not."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Annotations_TypeMismatch(System.Object,System.Object)">
            <summary>
            A string like "Annotation of type '{0}' cannot be interpreted as '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Constructable_TargetMustBeStock(System.Object)">
            <summary>
            A string like "Navigation target entity type must be '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.TypeSemantics_CouldNotConvertTypeReference(System.Object,System.Object)">
            <summary>
            A string like "The type '{0}' could not be converted to be a '{1}' type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueWriter_NonSerializableValue(System.Object)">
            <summary>
            A string like "The value writer cannot write a value of kind '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Constructable_DependentPropertyCountMustMatchNumberOfPropertiesOnPrincipalType(System.Object,System.Object)">
            <summary>
            A string like "The number of dependent properties must match the number of key properties on the principal entity type. '{0}' principal properties were provided, but {1} dependent properties were provided."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Edm_Evaluator_NoTermTypeAnnotationOnType(System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' must have a single type annotation with term type '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Edm_Evaluator_NoValueAnnotationOnType(System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' must have a single value annotation with term '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Edm_Evaluator_NoValueAnnotationOnElement(System.Object)">
            <summary>
            A string like "Element must have a single value annotation with term '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Edm_Evaluator_UnrecognizedExpressionKind(System.Object)">
            <summary>
            A string like "Expression with kind '{0}' cannot be evaluated."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Edm_Evaluator_UnboundFunction(System.Object)">
            <summary>
            A string like "Function '{0}' is not present in the execution environment."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Edm_Evaluator_UnboundPath(System.Object)">
            <summary>
            A string like "Path segment '{0}' has no binding in the execution environment."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Edm_Evaluator_FailedTypeAssertion(System.Object)">
            <summary>
            A string like "Value fails to match type '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_SystemNamespaceEncountered(System.Object)">
            <summary>
            A string like "The namespace '{0}' is a system namespace and cannot be used by non-system types. Please choose a different namespace."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NavigationSourceTypeHasNoKeys(System.Object,System.Object)">
            <summary>
            A string like "The entity set or singleton '{0}' is based on type '{1}' that has no keys defined."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_DuplicateEndName(System.Object)">
            <summary>
            A string like "An end with the name '{0}' is already defined."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_DuplicatePropertyNameSpecifiedInEntityKey(System.Object,System.Object)">
            <summary>
            A string like "The key specified in entity type '{0}' is not valid. Property '{1}' is referenced more than once in the key element."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidComplexTypeAbstract(System.Object)">
            <summary>
            A string like "The complex type '{0}' is marked as abstract. Abstract complex types are only supported in version 1.1 EDM models."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidComplexTypePolymorphic(System.Object)">
            <summary>
            A string like "The complex type '{0}' has a base type specified. Complex type inheritance is only supported in version 1.1 EDM models."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidKeyNullablePart(System.Object,System.Object)">
            <summary>
            A string like "The key part '{0}' for type '{1}' is not valid. All parts of the key must be non nullable."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_EntityKeyMustBeScalar(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' in entity type '{1}' is not valid. All properties that are part of the entity key must be of primitive type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidKeyKeyDefinedInBaseClass(System.Object,System.Object)">
            <summary>
            A string like "The key usage is not valid. '{0}' cannot define keys because one of its base classes '{1}' defines keys."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_KeyMissingOnEntityType(System.Object)">
            <summary>
            A string like "The entity type '{0}' has no key defined. Define the key for this entity type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_BadNavigationPropertyUndefinedRole(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The navigation property '{0}' is not valid. The role '{1}' is not defined in relationship '{2}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_BadNavigationPropertyRolesCannotBeTheSame(System.Object)">
            <summary>
            A string like "The navigation property '{0}'is not valid. The from role and to role are the same."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_BadNavigationPropertyCouldNotDetermineType(System.Object)">
            <summary>
            A string like "The navigation property type could not be determined from the role '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_EndWithManyMultiplicityCannotHaveOperationsSpecified(System.Object)">
            <summary>
            A string like "The navigation property '{0}' cannot have 'OnDelete' specified since its multiplicity is '*'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_EndNameAlreadyDefinedDuplicate(System.Object)">
            <summary>
            A string like "Each name and plural name in a relationship must be unique. '{0}' is already defined."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_SameRoleReferredInReferentialConstraint(System.Object)">
            <summary>
            A string like "In relationship '{0}', the principal and dependent role of the referential constraint refers to the same role in the relationship type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NavigationPropertyPrincipalEndMultiplicityUpperBoundMustBeOne(System.Object)">
            <summary>
            A string like "The principal navigation property '{0}' has an invalid multiplicity. Valid values for the multiplicity of a principal end are '0..1' or '1'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidMultiplicityOfPrincipalEndDependentPropertiesAllNonnullable(System.Object)">
            <summary>
            A string like "Because all dependent properties of the navigation '{0}' are non-nullable, the multiplicity of the principal end must be '1'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidMultiplicityOfPrincipalEndDependentPropertiesAllNullable(System.Object)">
            <summary>
            A string like "Because all dependent properties of the navigation '{0}' are nullable, the multiplicity of the principal end must be '0..1'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidMultiplicityOfDependentEndMustBeZeroOneOrOne(System.Object)">
            <summary>
            A string like "The multiplicity of the dependent end '{0}' is not valid. Because the dependent properties represent the dependent end key, the multiplicity of the dependent end must be '0..1' or '1'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidMultiplicityOfDependentEndMustBeMany(System.Object)">
            <summary>
            A string like "The multiplicity of the dependent end '{0}' is not valid. Because the dependent properties don't represent the dependent end key, the the multiplicity of the dependent end must be '*'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_TypeMismatchRelationshipConstraint(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The types of all properties in the dependent role of a referential constraint must be the same as the corresponding property types in the principal role. The type of property '{0}' on entity '{1}' does not match the type of property '{2}' on entity '{3}' in the referential constraint '{4}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidPropertyInRelationshipConstraintDependentEnd(System.Object,System.Object)">
            <summary>
            A string like "There is no property with name '{0}' defined in the type referred to by role '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidPropertyInRelationshipConstraintPrimaryEnd(System.Object,System.Object)">
            <summary>
            A string like "The principal end properties in the referential constraint of the association '{0}' do not match the key of the type referred to by role '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidPropertyType(System.Object)">
            <summary>
            A string like "A property cannot be of type '{0}'. The property type must be a complex, a primitive or an enum type, or a collection of complex, primitive, or enum types."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_BoundOperationMustHaveParameters(System.Object)">
            <summary>
            A string like "The Bound operation '{0}' must have at least one parameter."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationWithUnsupportedReturnType(System.Object)">
            <summary>
            A string like "The return type is not valid in operation '{0}'. The operation has an unsupported type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationImportEntityTypeDoesNotMatchEntitySet(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The operation import '{0}' returns entities of type '{1}' that cannot exist in the entity set '{2}' specified for the operation import."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationImportEntityTypeDoesNotMatchEntitySet2(System.Object,System.Object)">
            <summary>
            A string like "The operation import '{0}' returns entities of type '{1}' that cannot be returned by the entity set path specified for the operation import."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationImportEntitySetExpressionKindIsInvalid(System.Object,System.Object)">
            <summary>
            A string like "The operation import '{0}' specifies an entity set of kind '{1}' which is not supported in this context. Operation import entity set expression can be either an entity set reference or a path starting with a operation import parameter and traversing navigation properties."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationImportEntitySetExpressionIsInvalid(System.Object)">
            <summary>
            A string like "The operation import '{0}' specifies an entity set expression which is not valid. Operation import entity set expression can be either an entity set reference or a path starting with a operation import parameter and traversing navigation properties."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationImportSpecifiesEntitySetButNotEntityType(System.Object)">
            <summary>
            A string like "The operation import '{0}' specifies an entity set but does not return entities."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationImportCannotImportBoundOperation(System.Object,System.Object)">
            <summary>
            A string like "The operation import '{0}' imports operation '{1}' that is bound. Only an unbound operation can be imported using an operation import."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_FunctionImportWithParameterShouldNotBeIncludedInServiceDocument(System.Object)">
            <summary>
            A string like "The function import '{0}' should not be included in service document because it has parameter."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_FunctionMustHaveReturnType(System.Object)">
            <summary>
            A string like "The function '{0}' must specify a return type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ParameterNameAlreadyDefinedDuplicate(System.Object)">
            <summary>
            A string like "Each parameter name in a operation must be unique. The parameter name '{0}' is already defined."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_DuplicateEntityContainerMemberName(System.Object)">
            <summary>
            A string like "Each member name in an EntityContainer must be unique. A member with name '{0}' is already defined."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_UnboundFunctionOverloadHasIncorrectReturnType(System.Object)">
            <summary>
            A string like "The function '{0}' has a different return type than other function overloads with the same name. Functions with the same name must have the same return type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationCannotHaveEntitySetPathWithUnBoundOperation(System.Object)">
            <summary>
            A string like "The unbound operation '{0}' has an entity set path defined. Entity set path can only be defined on bound operations."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathMissingBindingParameterName(System.Object)">
            <summary>
            A string like "The attribute '{0}' has an invalid value. The path doesn't contain the binding parameter name."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathWithFirstPathParameterNotMatchingFirstParameterName(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The attribute '{0}' is invalid. The first item of the path '{2}' is '{3}' which does not match the first parameter name {3}. The first segment of the entity set path is required to be the name of the first parameter."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathTypeCastSegmentMustBeEntityType(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The attribute '{0}' has an invalid value. The path '{1}' has a type cast segment '{2}' that is not an entity type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathUnknownNavigationProperty(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The attribute '{0}' has an invalid value. The path '{1}' has a navigation property segment '{2}' that is unknown."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathInvalidTypeCastSegment(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The attribute '{0}' has an invalid value. The path '{1}' has a type cast segment that doesn't derive from the entity type '{2}' for type segment '{3}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathWithNonEntityBindingParameter(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The attribute '{0}' has an invalid value. The path '{1}' has a binding parameter that references a type '{2}' that is not an entity type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidEntitySetPathUnknownTypeCastSegment(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The attribute '{0}' has an invalid value. The path '{1}' has a type cast segment '{2}' that cannot be found in the model."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationWithEntitySetPathReturnTypeInvalid(System.Object)">
            <summary>
            A string like "The operation '{0}' has an entity set path and with an invalid return type. The return type is required to be an entity type or a collection of entity type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationWithEntitySetPathAndReturnTypeTypeNotAssignable(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The operation '{0}' entity set path determined entity type '{1}' is not assignable to the return type '{2}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationWithEntitySetPathResolvesToEntityTypeMismatchesCollectionEntityTypeReturnType(System.Object)">
            <summary>
            A string like "The operation '{0}' entity set path was determined to be a collection but the return type is not a collection."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OperationWithEntitySetPathResolvesToCollectionEntityTypeMismatchesEntityTypeReturnType(System.Object)">
            <summary>
            A string like "The operation '{0}' entity set path was determined to be a reference property but the return type is a collection."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_SchemaElementNameAlreadyDefined(System.Object)">
            <summary>
            A string like "An element with the name '{0}' is already defined."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidMemberNameMatchesTypeName(System.Object)">
            <summary>
            A string like "The member name '{0}' cannot be used in a type with the same name. Member names cannot be the same as their enclosing type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_PropertyNameAlreadyDefined(System.Object)">
            <summary>
            A string like "Each property name in a type must be unique. Property name '{0}' is already defined."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_BaseTypeOfOpenTypeMustBeOpen(System.Object)">
            <summary>
            A string like "The base type of open type '{0}' is not open type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_KeyPropertyMustBelongToEntity(System.Object,System.Object)">
            <summary>
            A string like "The key property '{0}' must belong to the entity '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_DependentPropertiesMustBelongToDependentEntity(System.Object,System.Object)">
            <summary>
            A string like "The dependent property '{0}' must belong to the dependent entity '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_DeclaringTypeMustBeCorrect(System.Object)">
            <summary>
            A string like "The property '{0}' cannot belong to a type other than its declaring type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InaccessibleType(System.Object)">
            <summary>
            A string like "The named type '{0}' could not be found from the model being validated."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_AmbiguousType(System.Object)">
            <summary>
            A string like "The named type '{0}' is ambiguous from the model being validated."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidNavigationPropertyType(System.Object)">
            <summary>
            A string like "The type of the navigation property '{0}' is invalid. The navigation target type must be an entity type or a collection of entity type. The navigation target entity type must match the declaring type of the partner property."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NavigationPropertyWithRecursiveContainmentTargetMustBeOptional(System.Object)">
            <summary>
            A string like "The target multiplicity of the navigation property '{0}' is invalid. If a navigation property has 'ContainsTarget' set to true and declaring entity type of the property is the same or inherits from the target entity type, then the property represents a recursive containment and it must have an optional target represented by a collection or a nullable entity type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NavigationPropertyWithRecursiveContainmentSourceMustBeFromZeroOrOne(System.Object)">
            <summary>
            A string like "The source multiplicity of the navigation property '{0}' is invalid. If a navigation property has 'ContainsTarget' set to true and declaring entity type of the property is the same or inherits from the target entity type, then the property represents a recursive containment and the multiplicity of the navigation source must be zero or one."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NavigationPropertyWithNonRecursiveContainmentSourceMustBeFromOne(System.Object)">
            <summary>
            A string like "The source multiplicity of the navigation property '{0}' is invalid. If a navigation property has 'ContainsTarget' set to true and declaring entity type of the property is not the same as the target entity type, then the property represents a non-recursive containment and the multiplicity of the navigation source must be exactly one."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ComplexTypeMustHaveProperties(System.Object)">
            <summary>
            A string like "The complex type '{0}' is invalid. A complex type must contain at least one property."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_DuplicateDependentProperty(System.Object,System.Object)">
            <summary>
            A string like "The dependent property '{0}' of navigation property '{1}' is a duplicate."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidPropertyTypeConcurrencyMode(System.Object)">
            <summary>
            A string like "A property with a fixed concurrency mode cannot be of type '{0}'. The property type must be a primitive type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_EnumMemberTypeMustMatchEnumUnderlyingType(System.Object)">
            <summary>
            A string like "The type of the value of enum member '{0}' must match the underlying type of the parent enum."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_EnumMemberNameAlreadyDefined(System.Object)">
            <summary>
            A string like "Each member name of an enum type must be unique. Enum member name '{0}' is already defined."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_CannotAssertNullableTypeAsNonNullableType(System.Object)">
            <summary>
            A string like "Cannot assert the nullable type '{0}' as a non-nullable type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ExpressionPrimitiveKindCannotPromoteToAssertedType(System.Object,System.Object)">
            <summary>
            A string like "Cannot promote the primitive type '{0}' to the specified primitive type '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_RecordExpressionMissingProperty(System.Object)">
            <summary>
            A string like "The record expression does not have a constructor for a property named '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_RecordExpressionHasExtraProperties(System.Object)">
            <summary>
            A string like "The type of the record expression is not open and does not contain a property named '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_DuplicateAnnotation(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The annotated element '{0}' has multiple annotations with the term '{1}' and the qualifier '{2}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_IncorrectNumberOfArguments(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The function application provides '{0}' arguments, but the function '{1}' expects '{2}' arguments."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_DuplicateEntityContainerName(System.Object)">
            <summary>
            A string like "Each entity container name in a function must be unique. The name '{0}' is already defined."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_StringConstantLengthOutOfRange(System.Object,System.Object)">
            <summary>
            A string like "The value of the string constant is '{0}' characters long, but the max length of its type is '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_BinaryConstantLengthOutOfRange(System.Object,System.Object)">
            <summary>
            A string like "The value of the binary constant is '{0}' characters long, but the max length of its type is '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_TermMustNotHaveKindOfNone(System.Object)">
            <summary>
            A string like "A term without other errors must not have kind of none. The kind of term '{0}' is none."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_SchemaElementMustNotHaveKindOfNone(System.Object)">
            <summary>
            A string like "A schema element without other errors must not have kind of none. The kind of schema element '{0}' is none."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_PropertyMustNotHaveKindOfNone(System.Object)">
            <summary>
            A string like "A property without other errors must not have kind of none. The kind of property '{0}' is none."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_PrimitiveTypeMustNotHaveKindOfNone(System.Object)">
            <summary>
            A string like "A primitive type without other errors must not have kind of none. The kind of primitive type '{0}' is none."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_EntityContainerElementMustNotHaveKindOfNone(System.Object)">
            <summary>
            A string like "An entity container element without other errors must not have kind of none. The kind of entity container element '{0}' is none."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_DuplicateNavigationPropertyMapping(System.Object,System.Object)">
            <summary>
            A string like "The entity set '{0}' should have only a single mapping for the property '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NavigationMappingMustBeBidirectional(System.Object,System.Object)">
            <summary>
            A string like "The binding of the entity set or singleton '{0}' on navigation property '{1}' is invalid, the binding of bidirectional navigation property must be bidirectional if specified."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_EntitySetCanOnlyBeContainedByASingleNavigationProperty(System.Object)">
            <summary>
            A string like "The entity set '{0}' is invalid because it is contained by more than one navigation property."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_TypeAnnotationMissingRequiredProperty(System.Object)">
            <summary>
            A string like "The type annotation is missing a binding for the property '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_TypeAnnotationHasExtraProperties(System.Object)">
            <summary>
            A string like "They type of the type annotation is not open, and does not contain a property named '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_EnumMustHaveIntegralUnderlyingType(System.Object)">
            <summary>
            A string like "The underlying type of '{0}' is not valid. The underlying type of an enum type must be an integral type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InaccessibleTerm(System.Object)">
            <summary>
            A string like "The term '{0}' could not be found from the model being validated."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InaccessibleTarget(System.Object)">
            <summary>
            A string like "The target '{0}' could not be found from the model being validated."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ElementDirectValueAnnotationFullNameMustBeUnique(System.Object,System.Object)">
            <summary>
            A string like "An element already has a direct value annotation with the namespace '{0}' and name '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NoEntitySetsFoundForType(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The association set '{0}' cannot assume an entity set for the role '{2}' because there are no entity sets for the role type '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_CannotInferEntitySetWithMultipleSetsPerType(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The association set '{0}' must specify an entity set for the role '{2}' because there are multiple entity sets for the role type '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_EntitySetRecursiveNavigationPropertyMappingsMustPointBackToSourceEntitySet(System.Object,System.Object)">
            <summary>
            A string like "Because the navigation property '{0}' is recursive, the mapping from the entity set '{1}' must point back to itself."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NavigationPropertyEntityMustNotIndirectlyContainItself(System.Object)">
            <summary>
            A string like "The navigation property '{0}' is invalid because it indirectly contains itself."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_PathIsNotValidForTheGivenContext(System.Object)">
            <summary>
            A string like "The path cannot be resolved in the given context. The segment '{0}' failed to resolve."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NavigationPropertyMappingMustPointToValidTargetForProperty(System.Object,System.Object)">
            <summary>
            A string like "The entity set or singleton '{1}' is not a valid destination for the navigation property '{0}' because it cannot hold an element of the target entity type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ModelDuplicateBoundFunctionParameterNames(System.Object)">
            <summary>
            A string like "The bound function '{0}' is a duplicate of other bound functions. For bound functions the combination of the namespace, name, binding parameter type and unordered set of parameter names uniquely identifies a bound function."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ModelDuplicateBoundFunctionParameterTypes(System.Object)">
            <summary>
            A string like "The bound function '{0}' is a duplicate of other bound functions. For bound functions the combination of the namespace, name, binding parameter type and ordered set of parameter types uniquely identifies a bound function."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ModelDuplicateUnBoundFunctionsParameterNames(System.Object)">
            <summary>
            A string like "The unbound function '{0}' is a duplicate of other unbound functions. For unbound functions the combination of the namespace, name and unordered set of parameter names uniquely identifies an unbound function."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ModelDuplicateUnBoundFunctionsParameterTypes(System.Object)">
            <summary>
            A string like "The unbound function '{0}' is a duplicate of other unbound functions. For unbound functions the combination of the namespace, name and ordered set of parameter types uniquely identifies an unbound function."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ModelDuplicateBoundActions(System.Object)">
            <summary>
            A string like "The bound action '{0}' is a duplicate of other bound actions. For bound actions the combination of the namespace, name, and binding parameter type uniquely identifies an bound action."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ModelDuplicateUnBoundActions(System.Object)">
            <summary>
            A string like "The unbound action '{0}' is a duplicate of other unbound actions. For unbound actions the combination of the namespace, and name uniquely identifies an unbound action."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_BoundFunctionOverloadsMustHaveSameReturnType(System.Object,System.Object)">
            <summary>
            A string like "The bound function overload '{0}' does not have the same return type as other function overloads. Expected type '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_EntitySetTypeMustBeCollectionOfEntityType(System.Object,System.Object)">
            <summary>
            A string like "The type '{0}' of the entity set '{1}' is not valid, it must be collection of entity type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_SingletonTypeMustBeEntityType(System.Object,System.Object)">
            <summary>
            A string like "The type '{0}' of the singleton '{1}' is not valid, it must be entity type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NavigationPropertyOfCollectionTypeMustNotTargetToSingleton(System.Object,System.Object)">
            <summary>
            A string like "The navigation property mapping '{0}' is invalid because its type is collection but target to a singleton '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_EdmModel_NameIsTooLong(System.Object)">
            <summary>
            A string like "The specified name must not be longer than 480 characters: '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_EdmModel_NameIsNotAllowed(System.Object)">
            <summary>
            A string like "The specified name is not allowed: '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_EdmModel_NamespaceNameIsTooLong(System.Object)">
            <summary>
            A string like "The specified name must not be longer than 480 characters: '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_EdmModel_NamespaceNameIsNotAllowed(System.Object)">
            <summary>
            A string like "The specified namespace name is not allowed: '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_PropertyMustNotBeNull(System.Object,System.Object)">
            <summary>
            A string like "The value of the property '{0}.{1}' must not be null."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_EnumPropertyValueOutOfRange(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The property '{0}.{1}' of type '{2}' has value '{3}' that is not a valid enum member."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_InterfaceKindValueMismatch(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "An object with the value '{0}' of the '{1}.{2}' property must implement '{3}' interface."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_TypeRefInterfaceTypeKindValueMismatch(System.Object,System.Object)">
            <summary>
            A string like "An object implementing '{0}' interface has type definition of kind '{1}'. The type reference interface must match to the kind of the  definition."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_InterfaceKindValueUnexpected(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The value '{0}' of the property '{1}.{2}' is not semantically valid. A semantically valid model must not contain elements of kind '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_EnumerableMustNotHaveNullElements(System.Object,System.Object)">
            <summary>
            A string like "The value of the enumeration the property '{0}.{1}' contains a null element. Enumeration properties must not contain null elements."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_NavigationPartnerInvalid(System.Object)">
            <summary>
            A string like "The partner of the navigation property '{0}' must not be the same property, and must point back to the navigation property."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_InterfaceCriticalCycleInTypeHierarchy(System.Object)">
            <summary>
            A string like "The chain of base types of type '{0}' is cyclic."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Serializer_NonInlineOperationImportReturnType(System.Object)">
            <summary>
            A string like "The operation import '{0}' could not be serialized because its return type cannot be represented inline."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Serializer_ReferencedTypeMustHaveValidName(System.Object)">
            <summary>
            A string like "A referenced type can not be serialized with an invalid name. The name '{0}' is invalid."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Serializer_OutOfLineAnnotationTargetMustHaveValidName(System.Object)">
            <summary>
            A string like "The annotation can not be serialized with an invalid target name. The name '{0}' is invalid."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.XmlParser_EmptyFile(System.Object)">
            <summary>
            A string like "{0} does not contain a schema definition, or the XmlReader provided started at the end of the file."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.XmlParser_MissingAttribute(System.Object,System.Object)">
            <summary>
            A string like "Required schema attribute '{0}' is not present on element '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.XmlParser_TextNotAllowed(System.Object)">
            <summary>
            A string like "The current schema element does not support text '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.XmlParser_UnexpectedAttribute(System.Object)">
            <summary>
            A string like "The attribute '{0}' was not expected in the given context."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.XmlParser_UnexpectedElement(System.Object)">
            <summary>
            A string like "The schema element '{0}' was not expected in the given context."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.XmlParser_UnusedElement(System.Object)">
            <summary>
            A string like "Unused schema element: '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.XmlParser_UnexpectedNodeType(System.Object)">
            <summary>
            A string like "Unexpected XML node type: {0}."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.XmlParser_UnexpectedRootElement(System.Object,System.Object)">
            <summary>
            A string like "The element '{0}' was unexpected for the root element. The root element should be {1}."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.XmlParser_UnexpectedRootElementWrongNamespace(System.Object,System.Object)">
            <summary>
            A string like "The namespace '{0}' is invalid. The root element is expected to belong to one of the following namespaces: '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.XmlParser_UnexpectedRootElementNoNamespace(System.Object)">
            <summary>
            A string like "The root element has no namespace. The root element is expected to belong to one of the following namespaces: '{0}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlParser_InvalidEntitySetPathWithUnboundAction(System.Object,System.Object)">
            <summary>
            A string like "The {0} '{1}' is invalid. The entitySetPath value is not allowed when IsBound attribute is false."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlParser_InvalidAlias(System.Object)">
            <summary>
            A string like "The alias '{0}' is not a valid simple name."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlParser_InvalidDeleteAction(System.Object)">
            <summary>
            A string like "The delete action '{0}' is not valid. Action must be: 'None', 'Cascade', or 'Restrict'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlParser_InvalidConcurrencyMode(System.Object)">
            <summary>
            A string like "The concurrency mode '{0}' is not valid. Concurrency mode must be: 'None', or 'Fixed'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlParser_InvalidEndRoleInRelationshipConstraint(System.Object,System.Object)">
            <summary>
            A string like "There is no Role with name '{0}' defined in relationship '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlParser_InvalidMultiplicity(System.Object)">
            <summary>
            A string like "The multiplicity '{0}' is not valid. Multiplicity must be: '*', '0..1', or '1'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlParser_InvalidTypeName(System.Object)">
            <summary>
            A string like "The type name '{0}' is invalid. The type name must be that of a primitive type, a fully qualified name or an inline 'Collection' or 'Ref' type."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlParser_InvalidQualifiedName(System.Object)">
            <summary>
            A string like "The qualified name '{0}' is invalid. A qualified name must have a valid namespace or alias, and a valid name."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlParser_InvalidEntitySetPath(System.Object)">
            <summary>
            A string like "'{0}' is not a valid entity set path."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlParser_InvalidEnumMemberPath(System.Object)">
            <summary>
            A string like "'{0}' is not a valid enum member path."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlSemantics_ImpossibleAnnotationsTarget(System.Object)">
            <summary>
            A string like "The annotation target '{0}' could not be resolved because it cannot refer to an annotatable element."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.CsdlSemantics_DuplicateAlias(System.Object,System.Object)">
            <summary>
            A string like "The schema '{0}' contains the alias '{1}' more than once."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmxParser_BodyElement(System.Object)">
            <summary>
            A string like "Unexpected {0} element while parsing Edmx. Edmx is expected to have at most one of 'Runtime' or 'DataServices' elements."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmParseException_ErrorsEncounteredInEdmx(System.Object)">
            <summary>
            A string like "Encountered the following errors when parsing the EDMX document: \r\n{0}"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidBoolean(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid boolean. The value must be 'true' or 'false'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidInteger(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid integer. The value must be a valid 32 bit integer."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidLong(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid integer. The value must be a valid 64 bit integer."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidFloatingPoint(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid floating point value."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidMaxLength(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid integer. The value must be a valid 32 bit integer or 'Max'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidSrid(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid SRID. The value must either be a 32 bit integer or 'Variable'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidScale(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid scale. The value must either be a 32 bit integer or 'Variable'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidGuid(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid Guid."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidDecimal(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid decimal."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidDateTimeOffset(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid date time offset value."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidDateTime(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid date time value."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidDate(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid date value."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidDuration(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid duration value."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidBinary(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid binary value. The value must be a hexadecimal string and must not be prefixed by '0x'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.ValueParser_InvalidTimeOfDay(System.Object)">
            <summary>
            A string like "The value '{0}' is not a valid TimeOfDay value."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.UnknownEnumVal_Multiplicity(System.Object)">
            <summary>
            A string like "Invalid multiplicity: '{0}'"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.UnknownEnumVal_SchemaElementKind(System.Object)">
            <summary>
            A string like "Invalid schema element kind: '{0}'"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.UnknownEnumVal_TypeKind(System.Object)">
            <summary>
            A string like "Invalid type kind: '{0}'"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.UnknownEnumVal_PrimitiveKind(System.Object)">
            <summary>
            A string like "Invalid primitive kind: '{0}'"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.UnknownEnumVal_ContainerElementKind(System.Object)">
            <summary>
            A string like "Invalid container element kind: '{0}'"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.UnknownEnumVal_EdmxTarget(System.Object)">
            <summary>
            A string like "Invalid edmx target: '{0}'"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.UnknownEnumVal_ConcurrencyMode(System.Object)">
            <summary>
            A string like "Invalid concurrency mode: '{0}'"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.UnknownEnumVal_PropertyKind(System.Object)">
            <summary>
            A string like "Invalid property kind: '{0}'"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.UnknownEnumVal_TermKind(System.Object)">
            <summary>
            A string like "Invalid term kind: '{0}'"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.UnknownEnumVal_ExpressionKind(System.Object)">
            <summary>
            A string like "Invalid expression kind: '{0}'"
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_AmbiguousElementBinding(System.Object)">
            <summary>
            A string like "The name '{0}' is ambiguous."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedType(System.Object)">
            <summary>
            A string like "The type '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedComplexType(System.Object)">
            <summary>
            A string like "The complex type '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedEntityType(System.Object)">
            <summary>
            A string like "The entity type '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedPrimitiveType(System.Object)">
            <summary>
            A string like "The primitive type '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedOperation(System.Object)">
            <summary>
            A string like "The operation '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_AmbiguousOperation(System.Object)">
            <summary>
            A string like "The operation '{0}' could not be resolved because more than one operation could be used for this application."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_OperationParametersDontMatch(System.Object)">
            <summary>
            A string like "The operation '{0}' could not be resolved because none of the operations with that name take the correct set of parameters."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedEntitySet(System.Object)">
            <summary>
            A string like "The entity set '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedEntityContainer(System.Object)">
            <summary>
            A string like "The entity container '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedEnumType(System.Object)">
            <summary>
            A string like "The enum type '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedEnumMember(System.Object)">
            <summary>
            A string like "The enum member '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedProperty(System.Object)">
            <summary>
            A string like "The property '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedParameter(System.Object)">
            <summary>
            A string like "The parameter '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedLabeledElement(System.Object)">
            <summary>
            A string like "The labeled element '{0}' could not be found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_CyclicEntity(System.Object)">
            <summary>
            A string like "The entity '{0}' is invalid because its base type is cyclic."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_CyclicComplex(System.Object)">
            <summary>
            A string like "The complex type '{0}' is invalid because its base type is cyclic."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_CyclicEntityContainer(System.Object)">
            <summary>
            A string like "The entity container '{0}' is invalid because its extends hierarchy is cyclic."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Bad_UnresolvedNavigationPropertyPath(System.Object,System.Object)">
            <summary>
            A string like "A navigation property could not be found for the path '{0}' starting from the type '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmToClr_UnsupportedTypeCode(System.Object)">
            <summary>
            A string like "Conversion of EDM values to a CLR type with type code {0} is not supported."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmToClr_IEnumerableOfTPropertyAlreadyHasValue(System.Object,System.Object)">
            <summary>
            A string like "Cannot initialize a property '{0}' on an object of type '{1}'. The property already has a value."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmToClr_StructuredPropertyDuplicateValue(System.Object)">
            <summary>
            A string like "An EDM structured value contains multiple values for the property '{0}'. Conversion of an EDM structured value with duplicate property values is not supported."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmToClr_CannotConvertEdmValueToClrType(System.Object,System.Object)">
            <summary>
            A string like "Conversion of an EDM value of the type '{0}' to the CLR type '{1}' is not supported."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmToClr_CannotConvertEdmCollectionValueToClrType(System.Object)">
            <summary>
            A string like "Conversion of an edm collection value to the CLR type '{0}' is not supported. EDM collection values can be converted to System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt; or System.Collections.Generic.ICollection&lt;T&gt;."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmToClr_TryCreateObjectInstanceReturnedWrongObject(System.Object,System.Object)">
            <summary>
            A string like "The type '{0}' of the object returned by the TryCreateObjectInstance delegate is not assignable to the expected type '{1}'."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.EdmUtil_InvalidAnnotationValue(System.Object,System.Object)">
            <summary>
            A string like "An annotation of type string was expected for the '{{http://docs.oasis-open.org/odata/ns/metadata}}:{0}' annotation, but an annotation of type '{1}' was found."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.PlatformHelper_DateTimeOffsetMustContainTimeZone(System.Object)">
            <summary>
            A string like "The time zone information is missing on the DateTimeOffset value '{0}'. A DateTimeOffset value must contain the time zone information."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Date_InvalidDateParameters(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The Year '{0}', Month '{1}' and Day '{2}' parameters describe an un-representable Date."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Date_InvalidParsingString(System.Object)">
            <summary>
            A string like "String '{0}' was not recognized as a valid Date."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.Date_InvalidCompareToTarget(System.Object)">
            <summary>
            A string like "Target object '{0}' is not an instance with type of Date."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.TimeOfDay_InvalidTimeOfDayParameters(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The Hour '{0}', Minute '{1}', Second '{2}' and Millisecond '{3}' parameters describe an un-representable TimeOfDay."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.TimeOfDay_TicksOutOfRange(System.Object)">
            <summary>
            A string like "The ticks value '{0}' is out of representable TimeOfDay range."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.TimeOfDay_ConvertErrorFromTimeSpan(System.Object)">
            <summary>
            A string like "The TimeSpan value '{0}' is out of representable TimeOfDay range."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.TimeOfDay_InvalidParsingString(System.Object)">
            <summary>
            A string like "String '{0}' was not recognized as a valid TimeOfDay."
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Strings.TimeOfDay_InvalidCompareToTarget(System.Object)">
            <summary>
            A string like "Target object '{0}' is not an instance with type of TimeOfDay."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmPrimitive_UnexpectedKind">
            <summary>
            A string like "Unexpected primitive type kind."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.Constructable_VocabularyAnnotationMustHaveTarget">
            <summary>
            A string like "The annotation must have non-null target."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.Constructable_EntityTypeOrCollectionOfEntityTypeExpected">
            <summary>
            A string like "An entity type or a collection of an entity type is expected."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_CannotUseElementWithTypeNone">
            <summary>
            A string like "An element with type 'None' cannot be used in a model."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_CannotAddMoreThanOneEntityContainerToOneEdmModel">
            <summary>
            A string like "Cannot add more than one entity container to an edm model."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmEntityContainer_CannotUseElementWithTypeNone">
            <summary>
            A string like "An element with type 'None' cannot be used in an entity container."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.ValueHasAlreadyBeenSet">
            <summary>
            A string like "Value has already been set."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.PathSegmentMustNotContainSlash">
            <summary>
            A string like "Path segments must not contain '/' character."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmType_UnexpectedEdmType">
            <summary>
            A string like "Unexpected Edm type."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.Edm_Evaluator_NoContextPath">
            <summary>
            A string like "A containing object cannot be null when getting value of an annotation with Path in the execution environment."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.Edm_Evaluator_TypeCastNeedsEdmModel">
            <summary>
            A string like "An edm model must be provided for type cast."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidOperationMultipleEndsInAssociation">
            <summary>
            A string like "An on delete action can only be specified on one end of an association."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_MismatchNumberOfPropertiesinRelationshipConstraint">
            <summary>
            A string like "The number of properties in the dependent and principal role in a relationship constraint must be exactly identical."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_BaseTypeMustHaveSameTypeKind">
            <summary>
            A string like "The base type kind of a structured type must be the same as its derived type."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ScaleOutOfRange">
            <summary>
            A string like "The scale value can range from 0 through the specified precision value."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_PrecisionOutOfRange">
            <summary>
            A string like "Precision cannot be negative."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_StringMaxLengthOutOfRange">
            <summary>
            A string like "The max length facet specifies the maximum length of an instance of the string type. For unicode equal to 'true', the max length can range from 1 to 2^30, or if 'false', 1 to 2^31."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_MaxLengthOutOfRange">
            <summary>
            A string like "Max length can range from 1 to 2^31."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_OpenTypesSupportedForEntityTypesOnly">
            <summary>
            A string like "Only entity types can be open types."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_IsUnboundedCannotBeTrueWhileMaxLengthIsNotNull">
            <summary>
            A string like "The string reference is invalid because if 'IsUnbounded' is true 'MaxLength' must be null."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidElementAnnotationMismatchedTerm">
            <summary>
            A string like "The declared name and namespace of the annotation must match the name and namespace of its xml value."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidElementAnnotationValueInvalidXml">
            <summary>
            A string like "The value of an annotation marked to be serialized as an xml element must have a well-formed xml value."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidElementAnnotationNotIEdmStringValue">
            <summary>
            A string like "The value of an annotation marked to be serialized as an xml element must be IEdmStringValue."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_InvalidElementAnnotationNullNamespaceOrName">
            <summary>
            A string like "The value of an annotation marked to be serialized as an xml element must be a string representing an xml element with non-empty name and namespace."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_NullCannotBeAssertedToBeANonNullableType">
            <summary>
            A string like "Null value cannot have a non-nullable type."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ExpressionNotValidForTheAssertedType">
            <summary>
            A string like "The type of the expression is incompatible with the asserted type."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_CollectionExpressionNotValidForNonCollectionType">
            <summary>
            A string like "A collection expression is incompatible with a non-collection type."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_PrimitiveConstantExpressionNotValidForNonPrimitiveType">
            <summary>
            A string like "A primitive expression is incompatible with a non-primitive type."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_RecordExpressionNotValidForNonStructuredType">
            <summary>
            A string like "A record expression is incompatible with a non-structured type."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_ExpressionPrimitiveKindNotValidForAssertedType">
            <summary>
            A string like "The primitive expression is not compatible with the asserted type."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_IntegerConstantValueOutOfRange">
            <summary>
            A string like "The value of the integer constant is out of range for the asserted type."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Semantic_TypeMustNotHaveKindOfNone">
            <summary>
            A string like "A type without other errors must not have kind of none."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_MissingName">
            <summary>
            A string like "The name is missing or not valid."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmModel_Validator_Syntactic_MissingNamespaceName">
            <summary>
            A string like "The namespace name is missing or not valid."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.Serializer_SingleFileExpected">
            <summary>
            A string like "Single file provided but model cannot be serialized into single file."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.Serializer_UnknownEdmVersion">
            <summary>
            A string like "Unknown Edm version."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.Serializer_UnknownEdmxVersion">
            <summary>
            A string like "Unknown Edmx version."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.Serializer_NoSchemasProduced">
            <summary>
            A string like "No CSDL is written because no schema elements could be produced. This is likely because the model is empty."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.XmlParser_EmptySchemaTextReader">
            <summary>
            A string like "The source XmlReader does not contain a schema definition or started at the end of the file."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_MissingTypeAttributeOrElement">
            <summary>
            A string like "An XML attribute or sub-element representing an EDM type is missing."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_ReferentialConstraintRequiresOneDependent">
            <summary>
            A string like "Referential constraints requires one dependent role. Multiple dependent roles were specified for this referential constraint."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_ReferentialConstraintRequiresOnePrincipal">
            <summary>
            A string like "Referential constraints requires one principal role. Multiple principal roles were specified for this referential constraint."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_InvalidIfExpressionIncorrectNumberOfOperands">
            <summary>
            A string like "If expression must contain 3 operands, the first being a boolean test, the second being being evaluated if the first is true, and the third being evaluated if the first is false."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_InvalidIsTypeExpressionIncorrectNumberOfOperands">
            <summary>
            A string like "The IsType expression must contain 1 operand."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_InvalidCastExpressionIncorrectNumberOfOperands">
            <summary>
            A string like "The Cast expression must contain 1 operand."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_InvalidLabeledElementExpressionIncorrectNumberOfOperands">
            <summary>
            A string like "The LabeledElement expression must contain 1 operand."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_NoReadersProvided">
            <summary>
            A string like "A model could not be produced because no XML readers were provided."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_NullXmlReader">
            <summary>
            A string like "A model could not be produced because one of the XML readers was null."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_CannotSpecifyNullableAttributeForNavigationPropertyWithCollectionType">
            <summary>
            A string like "The 'Nullable' attribute cannot be specified for a navigation property with collection type."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlParser_MetadataDocumentCannotHaveMoreThanOneEntityContainer">
            <summary>
            A string like "Metadata document cannot have more than one entity container."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlSemantics_ReferentialConstraintMismatch">
            <summary>
            A string like " There was a mismatch in the principal and dependent ends of the referential constraint."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.CsdlSemantics_EnumMemberValueOutOfRange">
            <summary>
            A string like "The enumeration member value exceeds the range of its data type 'http://www.w3.org/2001/XMLSchema:long'."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmxParser_EdmxVersionMismatch">
            <summary>
            A string like "The EDMX version specified in the 'Version' attribute does not match the version corresponding to the namespace of the 'Edmx' element."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmxParser_InvalidReferenceIncorrectNumberOfIncludes">
            <summary>
            A string like "edmx:Reference must contain at least one edmx:Includes or edmx:IncludeAnnotations."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmxParser_UnresolvedReferenceUriInEdmxReference">
            <summary>
            A string like "Unresolved Uri found in edmx:Reference, getReferencedModelReaderFunc should not return null when the URI is not a well-known schema."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.RuleSet_DuplicateRulesExistInRuleSet">
            <summary>
            A string like "The same rule cannot be in the same rule set twice."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmToClr_StructuredValueMappedToNonClass">
            <summary>
            A string like "Conversion of an EDM structured value is supported only to a CLR class."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.EdmUtil_NullValueForMimeTypeAnnotation">
            <summary>
            A string like "The MIME type annotation must not have a null value."
            </summary>
        </member>
        <member name="P:Microsoft.OData.Edm.Strings.Date_InvalidAddedOrSubtractedResults">
            <summary>
            A string like "The added or subtracted value results in an un-representable Date."
            </summary>
        </member>
        <member name="T:Microsoft.OData.Edm.Error">
            <summary>
               Strongly-typed and parameterized exception factory.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Error.ArgumentNull(System.String)">
            <summary>
            The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Error.ArgumentOutOfRange(System.String)">
            <summary>
            The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Error.NotImplemented">
            <summary>
            The exception that is thrown when the author has not yet implemented the logic at this point in the program. This can act as an exception based TODO tag.
            </summary>
        </member>
        <member name="M:Microsoft.OData.Edm.Error.NotSupported">
            <summary>
            The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality. 
            </summary>
        </member>
    </members>
</doc>
