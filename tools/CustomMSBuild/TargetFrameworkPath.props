<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    <UseTargetFrameworkFolder Condition="'$(UseTargetFrameworkFolder)' == ''">true</UseTargetFrameworkFolder>
  </PropertyGroup>

  <!--prepend the current output path with a folder indicating the target framework if enabled-->
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.nuproj'">
    <TargetFrameworkFolderName Condition="$(TargetFrameworkFolderName) == ''">NuGet</TargetFrameworkFolderName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == 'Silverlight' and '$(TargetFrameworkProfile)' == ''">
    <TargetFrameworkFolderName Condition="$(TargetFrameworkFolderName) == ''">Silverlight</TargetFrameworkFolderName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == 'Silverlight' and '$(TargetFrameworkProfile)' == 'WindowsPhone71'">
    <TargetFrameworkFolderName Condition="$(TargetFrameworkFolderName) == ''">WindowsPhone\v71</TargetFrameworkFolderName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETPortable' or '$(TargetFrameworkIdentifier)' == '.NETCore' or '$(TargetFrameworkIdentifier)' == 'WindowsPhone'">
    <TargetFrameworkFolderName Condition="$(TargetFrameworkFolderName) == ''">$(TargetFrameworkIdentifier)\$(TargetFrameworkVersion)</TargetFrameworkFolderName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFrameworkVersion)' == 'v4.5'">
    <TargetFrameworkFolderName Condition="$(TargetFrameworkFolderName) == ''">Dev11</TargetFrameworkFolderName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFrameworkVersion)' == 'v3.5'">
    <TargetFrameworkFolderName Condition="$(TargetFrameworkFolderName) == ''">Net35</TargetFrameworkFolderName>
  </PropertyGroup>
  <!-- This condition needs to above the Desktop one since $(TargetFrameworkIdentifier) == '' is also true for Powershell.
     Hence to make sure Powershell stuff gets copied into the Powershell folder, this condition needs to appear first -->  
  <PropertyGroup Condition="'$(CreateInternalizedDrop)' == 'true'">
    <TargetFrameworkFolderName Condition="$(TargetFrameworkFolderName) == ''">Powershell</TargetFrameworkFolderName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == ''">
    <TargetFrameworkFolderName Condition="$(TargetFrameworkFolderName) == ''">Desktop</TargetFrameworkFolderName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(UseTargetFrameworkFolder)' == 'true' and '$(TargetFrameworkFolderName)' == 'Contrib'">
    <RelativeOutputPath>$(TargetFrameworkFolderName)\$(TargetFrameworkIdentifier)\$(TargetFrameworkVersion)</RelativeOutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(UseTargetFrameworkFolder)' == 'true' and '$(TargetFrameworkFolderName)' != 'Contrib'">
    <RelativeOutputPath>$(TargetFrameworkFolderName)\$(RelativeOutputPath)</RelativeOutputPath>
  </PropertyGroup>
</Project>
