  steps:
    - template: buildandtest.yml

    - script: |
        mkdir $(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir)\sbom
      displayName: 'Create $(Build.ArtifactStagingDirectory)\sbom'

    - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
      displayName: 'Manifest Generator '
      inputs:
          BuildDropPath: '$(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir)\sbom'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish SBOM'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir)\sbom'

    - template: credscan.yml
 
    # CodeSign
    - task: 1ES.Signing@1
      displayName: 'CodeSign - OData'
      inputs:
        directory: '$(Build.SourcesDirectory)\src'
        pattern: 'Microsoft.Spatial.dll,Microsoft.OData.Edm.dll,Microsoft.OData.Core.dll,Microsoft.OData.Client.dll'
        operations: |
          [
            {
              "KeyCode": "CP-230012",
              "OperationCode": "SigntoolSign",
              "Parameters": {
                "OpusName": "Microsoft",
                "OpusInfo": "http://www.microsoft.com",
                "FileDigest": "/fd \"SHA256\"",
                "PageHash": "/NPH",
                "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
              },
              "ToolName": "sign",
              "ToolVersion": "1.0"
            }
          ]
        clientId: 4521c9f2-0b8e-430b-a292-e2a818fafa44
        tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47


    # - task: EsrpCodeSigning@1
    #   displayName: 'ESRP CodeSign - OData'
    #   inputs:
    #     ConnectedServiceName: 'ESRP CodeSigning - OData'
    #     #FolderPath: '$(Build.SourcesDirectory)\src\Microsoft.Spatial\bin\Debug\netstandard2.0'
    #     FolderPath: '$(Build.SourcesDirectory)\src'
    #     Pattern: 'Microsoft.Spatial.dll,Microsoft.OData.Edm.dll,Microsoft.OData.Core.dll,Microsoft.OData.Client.dll'
    #     signConfigType: inlineSignParams
    #     inlineOperation: |
    #      [
    #        {
    #          "keyCode": "MSSharedLibSnKey",
    #          "operationSetCode": "StrongNameSign",
    #          "parameters": null,
    #          "toolName": "sn.exe",
    #          "toolVersion": "V4.6.1586.0"
    #        },
    #        {
    #          "keyCode": "MSSharedLibSnKey",
    #          "operationSetCode": "StrongNameVerify",
    #          "parameters": null,
    #          "toolName": "sn.exe",
    #          "toolVersion": "V4.6.1586.0"
    #        },
    #        {
    #          "keyCode": "CP-230012",
    #          "operationSetCode": "SigntoolSign",
    #          "parameters": [
    #          {
    #            "parameterName": "OpusName",
    #            "parameterValue": "TestSign"
    #          },
    #          {
    #            "parameterName": "OpusInfo",
    #            "parameterValue": "http://test"
    #          },
    #          {
    #            "parameterName": "PageHash",
    #            "parameterValue": "/NPH"
    #          },
    #          {
    #            "parameterName": "FileDigest",
    #            "parameterValue": "/fd sha256"
    #          },
    #          {
    #            "parameterName": "TimeStamp",
    #            "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
    #          }
    #          ],
    #          "toolName": "signtool.exe",
    #          "toolVersion": "6.2.9304.0"
    #        },
    #        {
    #          "keyCode": "CP-230012",
    #          "operationSetCode": "SigntoolVerify",
    #          "parameters": [
    #          {
    #            "parameterName": "VerifyAll",
    #            "parameterValue": "/all"
    #          }
    #          ],
    #          "toolName": "signtool.exe",
    #          "toolVersion": "6.2.9304.0"
    #        }
    #      ]
    #     SessionTimeout: 20
    #     VerboseLogin: true

    - task: MSBuild@1
      displayName: 'Get Nuget Package Metadata'
      inputs:
        solution: '$(Build.SourcesDirectory)\tools\CustomMSBuild\GetNugetPackageMetadata.proj'
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'

    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.Spatial.Nightly.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.Spatial\Build.NuGet\Microsoft.Spatial.Nightly.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir) -Properties Configuration=$(BuildConfiguration);ProductRoot=$(ProductBinPath3)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'
    
    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.Spatial.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.Spatial\Build.NuGet\Microsoft.Spatial.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir) -Properties Configuration=$(BuildConfiguration);ProductRoot=$(ProductBinPath3)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'

    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Edm.Nightly.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Edm\Build.NuGet\Microsoft.OData.Edm.Nightly.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir) -Properties Configuration=$(BuildConfiguration);ProductRoot=$(ProductBinPath1)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'

    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Edm.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Edm\Build.NuGet\Microsoft.OData.Edm.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir) -Properties Configuration=$(BuildConfiguration);ProductRoot=$(ProductBinPath1)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'
    
    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Core.Nightly.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Core\Build.NuGet\Microsoft.OData.Core.Nightly.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir) -Properties Configuration=$(BuildConfiguration);ProductRoot=$(ProductBinPath2)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'

    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Core.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Core\Build.NuGet\Microsoft.OData.Core.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir) -Properties Configuration=$(BuildConfiguration);ProductRoot=$(ProductBinPath2)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'

    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Client.Nightly.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Client\Build.NuGet\Microsoft.OData.Client.Nightly.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir) -Properties Configuration=$(BuildConfiguration);ProductRoot=$(ProductBinPath4)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'
    
    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Client.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Client\Build.NuGet\Microsoft.OData.Client.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir) -Properties Configuration=$(BuildConfiguration);ProductRoot=$(ProductBinPath4)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'

    # Temporary solution to code signing
    - task: 1ES.Signing@1
      displayName: 'CodeSigning Nuget Packages'
      inputs:
        directory: '$(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir)'
        pattern: '*.nupkg'
        operations: |
          [
            {
              "KeyCode": "CP-230012",
              "OperationCode": "SigntoolSign",
              "Parameters": {
                "OpusName": "Microsoft",
                "OpusInfo": "http://www.microsoft.com",
                "FileDigest": "/fd \"SHA256\"",
                "PageHash": "/NPH",
                "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
              },
              "ToolName": "sign",
              "ToolVersion": "1.0"
            }
          ]
        clientId: 4521c9f2-0b8e-430b-a292-e2a818fafa44
        tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47

    # - task: EsrpCodeSigning@1
    #   displayName: 'ESRP CodeSigning Nuget Packages'
    #   inputs:
    #     ConnectedServiceName: 'ESRP CodeSigning - OData'
    #     FolderPath: '$(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir)'
    #     Pattern: '*.nupkg'
    #     signConfigType: inlineSignParams
    #     inlineOperation: |
    #      [
    #        {
    #          "keyCode": "CP-401405",
    #          "operationSetCode": "NuGetSign",
    #          "parameters": [ ],
    #          "toolName": "sign",
    #          "toolVersion": "1.0"
    #        },
    #        {
    #          "keyCode": "CP-401405",
    #          "operationSetCode": "NuGetVerify",
    #          "parameters": [ ],
    #          "toolName": "sign",
    #          "toolVersion": "1.0"
    #        }
    #      ]
    #     VerboseLogin: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact - Nuget Packages'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir)'
        ArtifactName: $(NugetArtifactsDir)

    - task: NuGetCommand@2
      displayName: 'NuGet push - Nightly packages to MyGet'
      inputs:
        command: push
        packagesToPush: '$(Build.ArtifactStagingDirectory)\$(NugetArtifactsDir)\*Nightly*.nupkg'
        nuGetFeedType: external
        publishFeedCredentials: 'MyGet.org - OData.net Nightly Feed'
      enabled: true