
  steps:
    - template: buildandtest.yml

    - script: |
        mkdir $(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir)\sbom
      displayName: 'Create $(Build.ArtifactStagingDirectory)\sbom'

    - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
      displayName: 'Manifest Generator '
      inputs:
          BuildDropPath: '$(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir)\sbom'

    - template: credscan.yml
    # .NET Core App 2.1 is required to run the ESRP code signing task
    - task: UseDotNet@2
      inputs:
        version: '2.1.x'
    # CodeSign
    - task: EsrpCodeSigning@5
      displayName: 'ESRP CodeSign - OData'
      inputs:
        ConnectedServiceName: $(ODataEsrpConnectionServiceName)
        AppRegistrationClientId: '$(ODataEsrpAppRegistrationClientId)'
        AppRegistrationTenantId: '$(ODataEsrpAppRegistrationTenantId)'
        AuthAKVName: $(ODataEsrpAuthAKVName)
        AuthCertName: $(ODataEsrpAuthCertName)
        AuthSignCertName: $(ODataEsrpAuthSignCertName)
        ServiceEndpointUrl: '$(ODataEsrpServiceEndpointUrl)'
        FolderPath: '$(Build.SourcesDirectory)\src'
        Pattern: 'Microsoft.Spatial.dll,Microsoft.OData.Edm.dll,Microsoft.OData.Core.dll,Microsoft.OData.Client.dll'
        signConfigType: inlineSignParams
        inlineOperation: |
         [
           {
             "keyCode": "MSSharedLibSnKey",
             "operationSetCode": "StrongNameSign",
             "parameters": null,
             "toolName": "sn.exe",
             "toolVersion": "V4.6.1586.0"
           },
           {
             "keyCode": "MSSharedLibSnKey",
             "operationSetCode": "StrongNameVerify",
             "parameters": null,
             "toolName": "sn.exe",
             "toolVersion": "V4.6.1586.0"
           },
           {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolSign",
             "parameters": [
             {
               "parameterName": "OpusName",
               "parameterValue": "TestSign"
             },
             {
               "parameterName": "OpusInfo",
               "parameterValue": "http://test"
             },
             {
               "parameterName": "PageHash",
               "parameterValue": "/NPH"
             },
             {
               "parameterName": "FileDigest",
               "parameterValue": "/fd sha256"
             },
             {
               "parameterName": "TimeStamp",
               "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
             }
             ],
             "toolName": "signtool.exe",
             "toolVersion": "6.2.9304.0"
           },
           {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolVerify",
             "parameters": [
             {
               "parameterName": "VerifyAll",
               "parameterValue": "/all"
             }
             ],
             "toolName": "signtool.exe",
             "toolVersion": "6.2.9304.0"
           }
         ]
        SessionTimeout: 20
        VerboseLogin: true

    - task: MSBuild@1
      displayName: 'Get Nuget Package Metadata'
      inputs:
        solution: '$(Build.SourcesDirectory)\tools\CustomMSBuild\GetNugetPackageMetadata.proj'
        platform: '$(buildPlatform)'
        configuration: '$(buildPlatform)'

    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.Spatial.Nightly.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.Spatial\Build.NuGet\Microsoft.Spatial.Nightly.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir) -Properties Configuration=$(buildConfiguration);ProductRoot=$(productBinPathSpatial)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'
    
    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.Spatial.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.Spatial\Build.NuGet\Microsoft.Spatial.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir) -Properties Configuration=$(buildConfiguration);ProductRoot=$(productBinPathSpatial)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'

    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Edm.Nightly.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Edm\Build.NuGet\Microsoft.OData.Edm.Nightly.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir) -Properties Configuration=$(buildConfiguration);ProductRoot=$(productBinPathEdm)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'

    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Edm.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Edm\Build.NuGet\Microsoft.OData.Edm.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir) -Properties Configuration=$(buildConfiguration);ProductRoot=$(productBinPathEdm)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'
    
    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Core.Nightly.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Core\Build.NuGet\Microsoft.OData.Core.Nightly.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir) -Properties Configuration=$(buildConfiguration);ProductRoot=$(productBinPathCore)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'

    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Core.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Core\Build.NuGet\Microsoft.OData.Core.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir) -Properties Configuration=$(buildConfiguration);ProductRoot=$(productBinPathCore)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'

    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Client.Nightly.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Client\Build.NuGet\Microsoft.OData.Client.Nightly.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir) -Properties Configuration=$(buildConfiguration);ProductRoot=$(productBinPathClient)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'
    
    - task: NuGetCommand@2
      displayName: 'NuGet - pack Microsoft.OData.Client.Release'
      inputs:
        command: custom
        feedsToUse: config
        arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.Client\Build.NuGet\Microsoft.OData.Client.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir) -Properties Configuration=$(buildConfiguration);ProductRoot=$(productBinPathClient)\**;SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols -SymbolPackageFormat snupkg'

    - task: EsrpCodeSigning@5
      displayName: 'ESRP CodeSigning Nuget Packages'
      inputs:
        ConnectedServiceName: $(ODataEsrpConnectionServiceName)
        AppRegistrationClientId: '$(ODataEsrpAppRegistrationClientId)'
        AppRegistrationTenantId: '$(ODataEsrpAppRegistrationTenantId)'
        AuthAKVName: $(ODataEsrpAuthAKVName)
        AuthCertName: $(ODataEsrpAuthCertName)
        AuthSignCertName: $(ODataEsrpAuthSignCertName)
        ServiceEndpointUrl: '$(ODataEsrpServiceEndpointUrl)'
        FolderPath: '$(Build.ArtifactStagingDirectory)\$(nugetArtifactsDir)'
        Pattern: '*.nupkg'
        signConfigType: inlineSignParams
        inlineOperation: |
         [
           {
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetSign",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
           },
           {
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetVerify",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
           }
         ]
        VerboseLogin: true
