# .NET Desktop

# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

# trigger:
# - Vsupgrade2

pool:
  vmImage: 'windows-latest'
  # name: OData
  # demands:
  #   - Agent.Name -equals ODataBuild26
  

variables:
#   solution: 'sln\OData.Net45.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  skipComponentGovernanceDetection: true

steps:

- script: |
   echo Write your commands here   
   echo Hello world
   echo $(Build.SourcesDirectory)
   dotnet.exe --info
  displayName: 'Command Line Script'

- task: UseDotNet@2
  inputs:
    version: '1.0.4'
- task: UseDotNet@2
  inputs:
    version: '2.1.3'

# - task: DotNetCoreInstaller@1
#   inputs:
#     version: '1.0.4'

- task: DotNetCoreCLI@2
  displayName: 'Build test'  
  inputs:
    command: 'build'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |
     $(Build.SourcesDirectory)\test\EndToEndTests\Tests\Client\Build.Desktop\Microsoft.Test.OData.Tests.Client.csproj

- task: DotNetCoreCLI@2
  displayName: 'Test Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |      
     $(Build.SourcesDirectory)\test\EndToEndTests\Tests\Client\Build.Desktop\Microsoft.Test.OData.Tests.Client.csproj
     

- task: DotNetCoreCLI@2
  displayName: 'Build Product'  
  inputs:
    command: 'build'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |
     $(Build.SourcesDirectory)\src\Microsoft.Spatial\Microsoft.Spatial.csproj
     $(Build.SourcesDirectory)\src\Microsoft.OData.Edm\Microsoft.OData.Edm.csproj
     $(Build.SourcesDirectory)\src\Microsoft.OData.Core\Microsoft.OData.Core.csproj
     $(Build.SourcesDirectory)\src\Microsoft.OData.Client\Microsoft.OData.Client.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.TestCommon\Microsoft.OData.TestCommon.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.Spatial.Tests\Microsoft.Spatial.Tests.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Edm.Tests\Microsoft.OData.Edm.Tests.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Core.Tests\Microsoft.OData.Core.Tests.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Client.Tests\Microsoft.OData.Client.Tests.csproj



- task: DotNetCoreCLI@2
  displayName: 'Spatial Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |      
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.Spatial.Tests\Microsoft.Spatial.Tests.csproj

- task: DotNetCoreCLI@2
  displayName: 'EDM Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |      
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Edm.Tests\Microsoft.OData.Edm.Tests.csproj
     
- task: DotNetCoreCLI@2
  displayName: 'Core Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |      
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Core.Tests\Microsoft.OData.Core.Tests.csproj

- task: DotNetCoreCLI@2
  displayName: 'Client Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration) --framework netcoreapp2.0'
    projects: |      
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Client.Tests\Microsoft.OData.Client.Tests.csproj


    #test\FunctionalTests\Microsoft.Spatial.Tests\Microsoft.Spatial.Tests.csproj
    #arguments: --no-build
    #Your build pipeline references an undefined variable named ‘ProductBinPath’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972




- task: EsrpCodeSigning@1

  displayName: 'ESRP CodeSign - OData'
  inputs:
    ConnectedServiceName: 'ESRP CodeSigning - OData'
    #FolderPath: '$(Build.SourcesDirectory)\src\Microsoft.Spatial\bin\Debug\netstandard2.0'
    FolderPath: '$(Build.SourcesDirectory)\src'

    Pattern: 'Microsoft.Spatial.dll,Microsoft.OData.Edm.dll,Microsoft.OData.Core.dll,Microsoft.OData.Client.dll'

    signConfigType: inlineSignParams

    inlineOperation: |
     [
       {
         "keyCode": "MSSharedLibSnKey",
         "operationSetCode": "StrongNameSign",
         "parameters": null,
         "toolName": "sn.exe",
         "toolVersion": "V4.6.1586.0"
       },
       {
         "keyCode": "MSSharedLibSnKey",
         "operationSetCode": "StrongNameVerify",
         "parameters": null,
         "toolName": "sn.exe",
         "toolVersion": "V4.6.1586.0"
       },
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolSign",
         "parameters": [
         {
           "parameterName": "OpusName",
           "parameterValue": "TestSign"
         },
         {
           "parameterName": "OpusInfo",
           "parameterValue": "http://test"
         },
         {
           "parameterName": "PageHash",
           "parameterValue": "/NPH"
         },
         {
           "parameterName": "TimeStamp",
           "parameterValue": "/t \"http://ts4096.gtm.microsoft.com/TSS/AuthenticodeTS\""
         }
         ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       },
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolSign",
         "parameters": [
         {
           "parameterName": "OpusName",
           "parameterValue": "TestSign"
         },
         {
           "parameterName": "OpusInfo",
           "parameterValue": "http://test"
         },
         {
           "parameterName": "Append",
           "parameterValue": "/AS"
         },
         {
           "parameterName": "PageHash",
           "parameterValue": "/NPH"
         },
         {
           "parameterName": "FileDigest",
           "parameterValue": "/fd sha256"
         },
         {
           "parameterName": "TimeStamp",
           "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         }
         ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       },
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolVerify",
         "parameters": [
         {
           "parameterName": "VerifyAll",
           "parameterValue": "/all"
         }
         ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       }
     ]

    SessionTimeout: 20
    VerboseLogin: true


# - task: PowerShell@2
#   inputs:
#     filePath: 'build.ps1'
#     arguments: 'EnableSkipStrongName'
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'test'
#     projects: 'test\FunctionalTests\Microsoft.Spatial.Tests\Microsoft.Spatial.Tests.csproj'
#     arguments: '--collect "Code coverage"'


# #  - task: BatchScript@1
# #    displayName: 'Run script - EnableSkipStrongName'
# #    inputs:
#       filename: '$(Build.SourcesDirectory)\build.cmd'
#       arguments: EnableSkipStrongName
#       modifyEnvironment: false

