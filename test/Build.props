<Project >

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <!-- 
    This is where you place settings that should apply to all projects under this folder.  See 
    $(EnlistmentRoot)\Build.props for examples. 
  -->

  <PropertyGroup>
    <BuildInOSS Condition="'$(BuildInOSS)' == '' and !Exists('$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.root))\_BuildCommon')">true</BuildInOSS>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.root))\tools\CustomMSBuild\TargetFrameworkPath.props" Condition="'$(BuildInOSS)' == 'true'" />
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.root))\_BuildCommon\Extensions\TargetFrameworkPath.props" Condition="'$(BuildInOSS)' != 'true'"/>
  
  <PropertyGroup>
    <RelativeOutputPath>Test\$(RelativeOutputPath)</RelativeOutputPath>
    <EnableStyleCop>false</EnableStyleCop>
    <StyleCopOverrideSettingsFile Condition="'$(StyleCopOverrideSettingsFile)' == ''">$(MSBuildThisFileDirectory)Settings.StyleCop</StyleCopOverrideSettingsFile>
    <SigningType Condition="'$(SigningType)' == ''">Test</SigningType>
    <ShippingScope Condition="'$(ShippingScope)' == ''">InternalOnly</ShippingScope>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    
    <!-- Default in product source is to generate code without attributes.  However attributes are required for unittests. -->
    <GenerateTargetFrameworkAttribute Condition="'$(GenerateTargetFrameworkAttribute)' == ''">true</GenerateTargetFrameworkAttribute>

    <ShouldGenerateVersionConstantsFile Condition="'$(ShouldGenerateVersionConstantsFile)' == ''">true</ShouldGenerateVersionConstantsFile>
  </PropertyGroup>

  <!--TODO this works for both debug and release; do you want it to only rub for debug?-->
  <PropertyGroup>
    <BaseAppConfigFileName>App.config</BaseAppConfigFileName>
    <NativeBaseAppConfigPath>$(MSBuildProjectDirectory)\$(BaseAppConfigFileName)</NativeBaseAppConfigPath>
    <SharedBaseAppConfigPath>$(MSBuildThisFileDirectory)\$(BaseAppConfigFileName)</SharedBaseAppConfigPath>
    <DebugAppConfigFileName>App.Debug.config</DebugAppConfigFileName>
    <DebugAppConfigPath>$(MSBuildThisFileDirectory)\$(DebugAppConfigFileName)</DebugAppConfigPath>
  </PropertyGroup>

  <!--TODO use choose-->
  <PropertyGroup Condition="Exists($(NativeBaseAppConfigPath))">
    <BaseAppConfigPath>$(NativeBaseAppConfigPath)</BaseAppConfigPath>
  </PropertyGroup>
  <PropertyGroup Condition="!Exists($(NativeBaseAppConfigPath))">
    <BaseAppConfigPath>$(SharedBaseAppConfigPath)</BaseAppConfigPath>
  </PropertyGroup>

  <ItemGroup>
    <None Include="$(BaseAppConfigPath)" Link="$(BaseAppConfigFileName)" Condition="!Exists($(BaseAppConfigFileName))" />
    <None Include="$(DebugAppConfigPath)" Link="App_Config\$(DebugAppConfigFileName)">
      <DependentUpon>$(BaseAppConfigPath)</DependentUpon>
    </None>
  </ItemGroup>

  <PropertyGroup>
    <TransformTaskPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v16.0\Web\Microsoft.Web.Publishing.Tasks.dll</TransformTaskPath>
  </PropertyGroup>
  <UsingTask TaskName="TransformXml" AssemblyFile="$(TransformTaskPath)" />

  <Target Name="Transform" AfterTargets="Build">
    <Error Condition="!Exists($(TransformTaskPath))" Text="Transform task not found $(TransformTaskPath)" />
    <TransformXml Source="$(BaseAppConfigPath)" Transform="$(DebugAppConfigPath)" Destination="$(OutputPath)\$(TargetFileName).config" />
  </Target>
  
  <Import Project="..\Build.props" />
  <Import Project="$(CustomBuildExtensionsPath)\Versioning.props" />

</Project>
