<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Test.Environment</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Test.Environment.EmptyEnvironment">
            <summary>
            A <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> that is immutable.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.DistributedEnvironment">
            <summary>
            Test configuration is the root for configuration operations.
            </summary>
            <remarks>For this component you must call DistributedEnvironment.Load or
            DistributedEnvironment.LoadFromFile to initialize the configuration information before using
            the component to retrieve configuration values.  If you call two or more of these methods without calling
            TestConfiguration.Clear() in between the results will be merged.
            TestConfiguration uses moniker values to initialize <see cref="T:Microsoft.Test.Environment.Component"/> and
            <see cref="T:Microsoft.Test.Environment.ComponentProperty"/> as well as classes derived from those classes.  These moniker values are specific
            to each component or value node, but the format for these moniker values is universal.  Each moniker value is
            specified as the value for the node in question.  The format for these moniker values is "Identifier=Moniker" and
            multiple values are separated with a pipe character |.  For example if you had a
            <see cref="T:Microsoft.Test.Environment.ServiceComponent"/> node the value for its moniker might be as follows.
            <code>
            "MachineKey=MachineName|ServiceKey=ServiceName|DependsOnKey=Dependency|StopServiceKey=StopService|StartServiceKey=StartService"
            </code>
            This tells the <see cref="T:Microsoft.Test.Environment.ServiceComponent"/> instance to take the value for the machine the service is
            located on from its value node MachineName, to take the name of the service that the node represents from its
            value node ServiceName, etc.  If a component node does not have a value then there are no parameters to
            pass to it.  Most component nodes have defaults for these values, they are specified in the documentation for
            each value node. <see cref="T:Microsoft.Test.Environment.ComponentProperty"/> and classes derived from it require a value.  This makes sense
            because a value node is designed to store a specific value with a key. Moniker nodes do not have default moniker
            but they do have optional monikers.  The optional monikers are used to change the behavior of the particular
            value node in question.
            In addition to moniker values both <see cref="T:Microsoft.Test.Environment.Component"/> and <see cref="T:Microsoft.Test.Environment.ComponentProperty"/> types have a
            class associated with them.  If class is not set to anything it defaults to <see cref="T:Microsoft.Test.Environment.Component"/> and
            <see cref="T:Microsoft.Test.Environment.ComponentProperty"/> depending on the node type being processed.  Class tells TestConfiguration what
            class to create and initialize for that particular node.</remarks>
        </member>
        <member name="F:Microsoft.Test.Environment.DistributedEnvironment.MaxMruEntries">
            <summary>The maximum number of transaction database file MRU entries.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.DistributedEnvironment.components">
            <summary>The collection of components in this configuration.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.DistributedEnvironment.globalAliases">
            <summary>The global aliases for this configuration.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.DistributedEnvironment.id">
            <summary>The unique ID for this configuration instance.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.DistributedEnvironment.toRestart">
            <summary>The collection of services to restart when the changes made via this configuration are reverted.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.DistributedEnvironment.txManager">
            <summary>The transaction manager that provides change tracking for this environment instance.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> class.
            </summary>
            <remarks>
            This constructor does not initialize the object with configuration information. One of
            the Load methods must be invoked to load configuration information into this configuration instance.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.Clear">
            <summary>
            Clears out the current configuration information.
            </summary>
            <remarks>
            This method firsts restores each configuration value to its original based on the restoration
            code. Then it returns the configuration object to a clean state, which means it has to be 
            reloaded before it will contain any configuration information.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection of components (at any level) in this 
            configuration.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator{T}"/> that can be used to iterate through the 
            collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection of components (at any level) in this 
            configuration.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the 
            collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.Load(Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Loads data into this configuration instance using the default configuration template
            and the given mapping.
            </summary>
            <param name="mapping">The mapping that maps machines to roles.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.Load(Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Loads data into this configuration instance from the given template and mapping
            data.
            </summary>
            <param name="environmentTemplate">The template that contains information about the roles, components and their properties.</param>
            <param name="mapping">The mapping that maps machines to roles.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.Recover(System.String)">
            <summary>
            Walks through all transactions in the specified transaction log file and
            restores the value of each item whose value was modified to the original
            value.
            </summary>
            <remarks>
            <see cref="P:DistributedEnvironment.TransactionLogFiles"/> is a collection
            of the last <see cref="F:MaxMruEntries"/> number of log files ordered
            by the earliest to the latest. Note that <see cref="P:IsReadOnly"/> must
            return <c>true</c> in order for this method to proceed.
            </remarks>
            <param name="txLogFilePath">The path to the transaction log file.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.CreateBuilder(Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Creates the instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentBuilder"/> that contains the implementation
            need to combine the given <see cref="T:Microsoft.Test.Environment.Model.EnvironmentTemplate"/> and <see cref="T:Microsoft.Test.Environment.Model.Mapping"/> into this
            environment instance.
            </summary>
            <param name="environmentTemplate">The environment template that contains the role and template information from.</param>
            <param name="mapping">The mapping object that contains the machine to role mappings.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironment.OnInitialized">
            <summary>
            Signals all global aliases, child components and component properties to perform 
            post-load initialization.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.DistributedEnvironment.s_roEmptyInstance">
            <summary>The single instance of the immutable empty distributed environment.</summary>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.Default">
            <summary>
            Gets the default instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/>. 
            </summary>
            <remarks>
            A new instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> is created by this implementation.
            Invoking implementations much cache the returned object and use that instance.
            </remarks>
            <value>The default.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.PathResolver">
            <summary>
            Gets or sets the delegate that is invoked to resolve the full path to the
            template and mapping file that is retrieved from the application settings file
            by the <see cref="P:DistributedEnvironment.Default"/> implementation.
            </summary>
            <value>The path resolver.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.TransactionLogFiles">
            <summary>
            Gets a read-only collection of the transaction log files that have been used by the current
            user including the current transaction log file.
            </summary>
            <value>The transaction log files.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.Aliases">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IKeyedCollection{K,V}"/> of the all
            the global aliases for this configuration.
            </summary>
            <value>The aliases.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.Components">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IKeyedCollection{K,V}"/> of the all
            the top level components for this configuration.
            </summary>
            <value>The components.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.CurrentTransactionLogFile">
            <summary>
            Gets the current transaction log file used by the <see cref="P:TransactionManager"/> instance
            associated with this environment instance.
            </summary>
            <value>The current transaction log file.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.Id">
            <summary>
            Gets or sets the unique ID for this configuration instance.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.IsReadOnly">
            <summary>
            Gets a value indicating whether this configuration is read-only.
            </summary>
            <remarks>
            To make a configuration writable, invoke the <see cref="M:EnableWriters"/> method.
            </remarks>
            <value><c>true</c> if this configuration is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.IsValid">
            <summary>
            Gets a value indicating whether this configuration instance is valid.
            </summary>
            <value><c>true</c> if this configuration is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.ItemPath">
            <summary>
            Gets the path to this environment entity.
            </summary>
            <remarks>
            This is always the instance <see cref="P:ItemPath.Root"/>.
            </remarks>
            <value>The path to this entity.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.ServicesToRestart">
            <summary>
            Gets the collection of services to be restarted.
            </summary>
            <value>The services to restart.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.TransactionManager">
            <summary>
            Gets the transaction manager which is associated with this environment instance.
            </summary>
            <value>The transaction manager.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.DistributedEnvironment.Empty">
            <summary>
            Gets an instance of a <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> that is empty and immutable.
            </summary>
            <value>The immutable empty environment.</value>
        </member>
        <member name="F:Microsoft.Test.Environment.EmptyEnvironment.components">
            <summary>Empty components.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.EmptyEnvironment.aliases">
            <summary>Empty aliases.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.EmptyEnvironment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyEnvironment"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.EmptyEnvironment.Clear">
            <summary>
            Clears out the current configuration information.
            </summary>
            <remarks>
            This method firsts restores each configuration value to its original based on the restoration
            code. Then it returns the configuration object to a clean state, which means it has to be
            reloaded before it will contain any configuration information.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.EmptyEnvironment.Load(Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Loads data into this configuration instance from the given template and mapping
            data.
            </summary>
            <param name="environmentTemplate">The template that contains information about the roles, components and their properties.</param>
            <param name="mapping">The mapping that maps machines to roles.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.EmptyEnvironment.Load(Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Loads data into this configuration instance using the default configuration template
            and the given mapping.
            </summary>
            <param name="mapping">The mapping that maps machines to roles.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.EmptyEnvironment.Recover(System.String)">
            <summary>
            Walks through all transactions in the specified transaction log file and
            restores the value of each item whose value was modified to the original
            value.
            </summary>
            <param name="txLogFilePath">The path to the transaction log file.</param>
            <remarks>
            	<see cref="P:DistributedEnvironment.TransactionLogFiles"/> is a collection
            of the last <see cref="F:MaxMruEntries"/> number of log files ordered
            by the earliest to the latest. Note that <see cref="P:IsReadOnly"/> must
            return <c>true</c> in order for this method to proceed.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.EmptyEnvironment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.EmptyEnvironment.Aliases">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IKeyedCollection{K,V}"/> of the all
            the global aliases for this configuration.
            </summary>
            <value>The aliases.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.EmptyEnvironment.Components">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IKeyedCollection{K,V}"/> of the all
            the top level components for this configuration.
            </summary>
            <value>The components.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.EmptyEnvironment.IsReadOnly">
            <summary>
            Gets a value indicating whether this configuration is read-only.
            </summary>
            <value>
            	<c>true</c> if this configuration is read only; otherwise, <c>false</c>.
            </value>
            <remarks>
            To make a configuration writable, invoke the <see cref="M:EnableWriters"/> method.
            </remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.EmptyEnvironment.TransactionManager">
            <summary>
            Gets the transaction manager which is associated with this environment instance.
            </summary>
            <value>The transaction manager.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.EmptyEnvironment.CurrentTransactionLogFile">
            <summary>
            Gets the current transaction log file used by the <see cref="P:TransactionManager"/> instance
            associated with this environment instance.
            </summary>
            <value>The current transaction log file.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.EmptyEnvironment.IsValid">
            <summary>
            Gets a value indicating whether this configuration instance is valid.
            </summary>
            <value>
            	<c>true</c> if this configuration is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.IEnumerableRoleExtensions">
            <summary>
            Contains XML LINQ like extension methods for collections of Component instances.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.IEnumerableRoleExtensions.Ancestors(System.Collections.Generic.IEnumerable{Microsoft.Test.Environment.Model.Role})">
            <summary>
            Retrieves a collection of the immediate ancestor of each of the roles in the given
            source collection.
            </summary>
            <param name="roles">The roles.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable{T}"/> of the ancestor roles.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.IEnumerableRoleExtensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{Microsoft.Test.Environment.Model.Role})">
            <summary>
            Retrieves a collection of the immediate ancestor of each of the roles in the given
            source collection and the role itself.
            </summary>
            <param name="roles">The roles.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable{T}"/> of the ancestor roles.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.IEnumerableRoleExtensions.Descendents(System.Collections.Generic.IEnumerable{Microsoft.Test.Environment.Model.Role})">
            <summary>
            Retrieves a collection of all the descendants at any level of the specified roles.
            </summary>
            <param name="roles">The roles.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable{T}"/> of roles.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.IEnumerableRoleExtensions.DescendentsAndSelf(System.Collections.Generic.IEnumerable{Microsoft.Test.Environment.Model.Role})">
            <summary>
            Retrieves a collection of all the descendants at any level and the roles in the
            specified collection.
            </summary>
            <param name="roles">The roles.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable{T}"/> of roles.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.IEnumerableComponentExtensions">
            <summary>
            Contains XML LINQ like extension methods for collections of Component instances.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.IEnumerableComponentExtensions.Ancestors(System.Collections.Generic.IEnumerable{Microsoft.Test.Environment.Component})">
            <summary>
            Retrieves a collection of the immediate ancestor of each of the components in the given
            source collection.
            </summary>
            <param name="components">The components.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable{T}"/> of the ancestor components.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.IEnumerableComponentExtensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{Microsoft.Test.Environment.Component})">
            <summary>
            Retrieves a collection of the immediate ancestor of each of the components in the given
            source collection and the component itself.
            </summary>
            <param name="components">The components.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable{T}"/> of the ancestor components.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.IEnumerableComponentExtensions.Attributes(System.Collections.Generic.IEnumerable{Microsoft.Test.Environment.Component})">
            <summary>
            Retrieves a collection of all the properties for the specified components.
            </summary>
            <param name="components">The components.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable{T}"/> of component properties.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.IEnumerableComponentExtensions.Descendents(System.Collections.Generic.IEnumerable{Microsoft.Test.Environment.Component})">
            <summary>
            Retrieves a collection of all the descendants at any level of the specified components.
            </summary>
            <param name="components">The components.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable{T}"/> of components.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.IEnumerableComponentExtensions.DescendentsAndSelf(System.Collections.Generic.IEnumerable{Microsoft.Test.Environment.Component})">
            <summary>
            Retrieves a collection of all the descendants at any level and the components in the
            specified collection.
            </summary>
            <param name="components">The components.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable{T}"/> of components.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.Collections.KeyedCollection`2">
            <summary>
            A keyed collection that preserves enforces the uniqueness of the items in this collection using a key.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.IKeyedCollection`2">
            <summary>
            Represents a collection from which values can be retrieved by key.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:Microsoft.Test.Environment.IKeyedCollection`2.Combine(Microsoft.Test.Environment.IKeyedCollection{`0,`1})">
            <summary>
            Merges the values in the specified <see cref="T:IKeyedCollection{K,V}"/> with this
            collection. 
            </summary>
            <param name="other">The source <see cref="T:IKeyedCollection{K,V}"/> to merge with.</param>
            <remarks>
            Existing values with the same key are replaced with the new value from <paramref name="other"/>.
            Values from <paramref name="other"/> whose keys do not exist in this collection are added to
            this collection.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.IKeyedCollection`2.Contains(`0)">
            <summary>
            Determines whether the collection contains an element with the specifiedkey.
            </summary>
            <param name="key">The key to locate in the <see cref="T:IKeyedCollection{TKey,TItem}"/></param>
            <returns>
            true if the <see cref="T:IKeyedCollection{TKey,TItem}"/> contains an element with
            the specified key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.IKeyedCollection`2.Copy">
            <summary>
            Gets a new <see cref="T:IKeyedCollection{K,V}"/> that contains the same values
            as this collection.
            </summary>
            <returns>A copy of this collection.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.IKeyedCollection`2.Merge(Microsoft.Test.Environment.IKeyedCollection{`0,`1})">
            <summary>
            Merges the values in the specified <see cref="T:IKeyedCollection{K,V}"/> with this
            collection.
            </summary>
            <remarks>
            Values whose keys do not exist in this collection should be added. Values that already
            exist with the same key should be replaced.
            </remarks>
            <param name="other">The source <see cref="T:IKeyedCollection{K,V}"/> to merge with.</param>
            <returns>A new <see cref="T:IKeyedCollection{K,V}"/> that contains the values from this
            collection and <paramref name="other"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.IKeyedCollection`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the <see cref="T:IKeyedCollection{TKey,TItem}"/>.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false. This method
            also returns false if key is not found in the <see cref="T:IKeyedCollection{TKey,TItem}"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            key is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.IKeyedCollection`2.Replace(`1)">
            <summary>
            Replaces the element with the the key for <paramref name="value"/> with <paramref name="value"/>.
            </summary>
            <param name="value">The value to add.</param>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.IKeyedCollection`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.</param>
            <returns>
            <c>true</c> if the object that implements <see cref="T:System.Collections.Generic.IKeyedCollection{K,V}"/> contains an element with the specified key; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
        </member>
        <member name="P:Microsoft.Test.Environment.IKeyedCollection`2.Keys">
            <summary>
            Gets a read-only <see cref="T:System.Collections.Generic.ICollection{TKey}"/> of all keys in the 
            keyed collection.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.IKeyedCollection`2.Values">
            <summary>
            Gets a read-only <see cref="T:System.Collections.Generic.ICollection{TValue}"/> of all the values
            in this keyed collection.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.IKeyedCollection`2.Item(`0)">
            <summary>
            Gets the element with the specified key.
            </summary>
            <value></value>
            <returns>
            The element with the specified key. If an element with the specified key
            is not found, an exception is thrown.</returns>
            <exception cref="T:System.ArgumentNullException">
            key is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            An element with the specified key does not exist in the collection.</exception>
        </member>
        <member name="F:Microsoft.Test.Environment.Collections.KeyedCollection`2.comparer">
            <summary>The comparer to use to compare item keys.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Collections.KeyedCollection`2.keyValueMap">
            <summary>Maintains the key to index map.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KeyedCollection"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Collections.KeyedCollection`2"/> class.
            </summary>
            <param name="keyComparer">The key comparer.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.Add(`1)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The key for <paramref name="item"/> already exists.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.Combine(Microsoft.Test.Environment.IKeyedCollection{`0,`1})">
            <summary>
            Merges the values in the specified <see cref="T:IKeyedCollection{K,V}"/> with this
            collection. 
            </summary>
            <param name="other">The source <see cref="T:IKeyedCollection{K,V}"/> to merge with.</param>
            <remarks>
            Existing values with the same key are replaced with the new value from <paramref name="other"/>.
            Values from <paramref name="other"/> whose keys do not exist in this collection are added to
            this collection.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.Contains(`1)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection{T}"/> contains a
            specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection{T}"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.Contains(`0)">
            <summary>
            Determines whether the collection contains an element with the specifiedkey.
            </summary>
            <param name="key">The key to locate in the <see cref="T:IKeyedCollection{TKey,TItem}"/></param>
            <returns>
            true if the <see cref="T:IKeyedCollection{TKey,TItem}"/> contains an element with
            the specified key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.Copy">
            <summary>
            Gets a new <see cref="T:ModelKeyedCollection{K,V}"/> that contains the same values
            as this collection.
            </summary>
            <returns>A copy of this collection.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.CopyTo(`1[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection{T}"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection{T}"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection{T}"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator{T}"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.Merge(Microsoft.Test.Environment.IKeyedCollection{`0,`1})">
            <summary>
            Merges the values in the specified <see cref="T:IKeyedCollection{K,V}"/> with this
            collection.
            </summary>
            <param name="other">The source <see cref="T:IKeyedCollection{K,V}"/> to merge with.</param>
            <returns>
            A new <see cref="T:IKeyedCollection{K,V}"/> that contains the values from this
            collection and <paramref name="other"/>.
            </returns>
            <remarks>
            Values whose keys do not exist in this collection should be added. Values that already
            exist with the same key should be replaced.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.Remove(`1)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection{T}"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the <see cref="T:IKeyedCollection{TKey,TItem}"/>.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false. This method
            also returns false if key is not found in the <see cref="T:IKeyedCollection{TKey,TItem}"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            key is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.Replace(`1)">
            <summary>
            Replaces the element with the the key for <paramref name="value"/> with <paramref name="value"/>.
            </summary>
            <param name="value">The value to add.</param>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.</param>
            <returns>
            true if the object that implements <see cref="T:System.Collections.Generic.IDictionary{K,V}"/> contains an element with the specified key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.EnforceReadOnly">
            <summary>
            Checks and throws an exception if this collection is read-only.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.GetKeyForItem(`1)">
            <summary>
            When implemented in a derived class, extracts the key from the specified item.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified item.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollection`2.CreateEmptyCopy">
            <summary>
            When implemented in a derived class, creates an empty copy of this collection.
            </summary>
            <returns>An empty copy of this collection with the same state except for the items in the collection.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.KeyedCollection`2.Comparer">
            <summary>
            Gets the comparer used to comparer two keys in this collection.
            </summary>
            <value>The comparer.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.KeyedCollection`2.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.KeyedCollection`2.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.KeyedCollection`2.Keys">
            <summary>
            Gets a read-only <see cref="T:System.Collections.Generic.ICollection{TKey}"/> of all keys in the
            keyed collection.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.KeyedCollection`2.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection{T}"/> containing the values in the <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection{T}"/> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.KeyedCollection`2.Item(`0)">
            <summary>
            Gets the <typeparamref name="TValue"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:Microsoft.Test.Environment.Collections.KeyedCollectionDebugView`2">
            <summary>
            Provides the debugger view of an <see cref="T:Microsoft.Test.Environment.Collections.KeyedCollection`2"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Collections.KeyedCollectionDebugView`2.keys">
            <summary>The keys.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Collections.KeyedCollectionDebugView`2.values">
            <summary>The values.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.KeyedCollectionDebugView`2.#ctor(Microsoft.Test.Environment.Collections.KeyedCollection{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:OrderedKeyedCollectionDebugView"/> type.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.KeyedCollectionDebugView`2.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.KeyedCollectionDebugView`2.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.CooperMappingExtensions">
            <summary>
            Contains extensions to the <see cref="T:Microsoft.Test.Environment.Model.Mapping"/> type to allow merging of data
            from Cooper into the <see cref="T:Microsoft.Test.Environment.Model.Mapping"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.CooperMappingExtensions.Load(Microsoft.Test.Environment.Model.Mapping,System.Int32)">
            <summary>
            Loads data for this mapping from the specified Cooper environment ID.
            </summary>
            <param name="mapping">The mapping.</param>
            <param name="environmentId">The Cooper environment id.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.CooperMappingExtensions.LoadMachines(Microsoft.Test.Environment.Model.Mapping,Microsoft.Test.Environment.Cooper.Service,System.Int32)">
            <summary>
            Loads logical-machine-name to actual machine-name macros for the specified environment ID into 
            this mapping as global aliases.
            </summary>
            <param name="mapping">The mapping.</param>
            <param name="cooper">The cooper.</param>
            <param name="environmentId">The environment id.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.CooperMappingExtensions.LoadMacros(Microsoft.Test.Environment.Model.Mapping,Microsoft.Test.Environment.Cooper.Service,System.Int32)">
            <summary>
            Loads all global macros for the specified environment ID into this mapping
            as global aliases.
            </summary>
            <param name="mapping">The mapping.</param>
            <param name="cooper">The cooper.</param>
            <param name="environmentId">The environment id.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.CooperMappingExtensions.LoadUrls(Microsoft.Test.Environment.Model.Mapping,Microsoft.Test.Environment.Cooper.Service,System.Int32)">
            <summary>
            Loads all AdCenter URL data for the specified environment ID into this
            Cooper mapping as global aliases.
            </summary>
            <param name="mapping">The mapping.</param>
            <param name="cooper">The cooper.</param>
            <param name="environmentId">The environment id.</param>
        </member>
        <member name="T:Microsoft.Test.Environment.DistributedEnvironmentBuilder">
            <summary>
            Represents a builder that uses a <see cref="T:Microsoft.Test.Environment.Model.EnvironmentTemplate"/>
            and a <see cref="T:Microsoft.Test.Environment.Model.Mapping"/> to populate an instance of 
            <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DistributedEnvironmentBuilder"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.Load(System.Type,Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Loads data into an instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> from a <see cref="T:Microsoft.Test.Environment.Model.Mapping"/>
            and a <see cref="T:Microsoft.Test.Environment.Model.EnvironmentTemplate"/> object.
            </summary>
            <param name="deType">The <see cref="T:System.Type"/> of the <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> object to create.</param>
            <param name="environmentTemplate">The environment template to read role and template information from.</param>
            <param name="mapping">The mapping object to read machine to role mappings from.</param>
            <returns>
            An instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> containing data loaded by
            combining <paramref name="environmentTemplate"/> and <paramref name="mapping"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.Load(Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Loads data into an instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> from a <see cref="T:Microsoft.Test.Environment.Model.Mapping"/>
            and a <see cref="T:Microsoft.Test.Environment.Model.EnvironmentTemplate"/> object.
            </summary>
            <param name="environmentTemplate">The environment template to read role and template information from.</param>
            <param name="mapping">The mapping object to read machine to role mappings from.</param>
            <returns>An instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> containing data loaded by 
            combining <paramref name="environmentTemplate"/> and <paramref name="mapping"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.Load(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Loads data into an instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> from a <see cref="T:Microsoft.Test.Environment.Model.Mapping"/>
            and a <see cref="T:Microsoft.Test.Environment.Model.EnvironmentTemplate"/> object.
            </summary>
            <param name="environment">The environment instance into which data is to be loaded.</param>
            <param name="environmentTemplate">The environment template to read role and template information from.</param>
            <param name="mapping">The mapping object to read machine to role mappings from.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.GetAliasType(System.String)">
            <summary>
            Gets the default <see cref="T:System.Type"/> for a configuration alias.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns>An instance of <see cref="T:System.Type"/> or <c>null</c> if the type could not be located.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.GetComponentType(System.String)">
            <summary>
            Gets the default <see cref="T:System.Type"/> for a component.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns>An instance of <see cref="T:System.Type"/> or <c>null</c> if the type could not be located.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.GetPropertyType(System.String)">
            <summary>
            Gets the default <see cref="T:System.Type"/> for a component property.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns>An instance of <see cref="T:System.Type"/> or <c>null</c> if the type could not be located.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.FindRole(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.MappingNode)">
            <summary>
            Retrieves the <see cref="T:Role"/> instance for the given node.
            </summary>
            <param name="environment">The environment instance into which data is to be loaded.</param>
            <param name="environmentTemplate">The template that contains information about the roles, components and their properties.</param>
            <param name="node">The node.</param>
            <returns>
            An instance of <see cref="T:Role"/> or <c>null</c>.
            </returns>
            <exception cref="T:ApplicationException">If the role for the given node is not found.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.FindType(System.String)">
            <summary>
            Finds the specified type. The type name must be namespace qualified, but need not be assembly 
            qualified. At present, this method simply inspects all loaded assemblies. It does not inspect
            non-loaded assemblies.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns>An instance of <see cref="T:System.Type"/></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.LoadAliases(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Invoked by the <see cref="T:Load"/> method to merge and load global aliases into this
            configuration.
            </summary>
            <param name="environment">The environment instance into which data is to be loaded.</param>
            <param name="environmentTemplate">The template that contains information about the roles, components and their properties.</param>
            <param name="mapping">The mapping that maps machines to roles.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.LoadAliases(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.Component,Microsoft.Test.Environment.Model.Role,Microsoft.Test.Environment.Model.MappingNode)">
            <summary>
            Invoked by the <see cref="T:LoadComponent"/> method to merge and load aliases for the
            specified component.
            </summary>
            <param name="environment">The environment instance into which data is to be loaded.</param>
            <param name="component">The component to load properties for.</param>
            <param name="role">The role that the given node maps to.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.LoadComponent(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Component,Microsoft.Test.Environment.Model.Role,Microsoft.Test.Environment.Model.MappingNode)">
            <summary>
            Invoked by the <see cref="T:LoadComponents"/> method to merge and load components into this
            configuration.
            </summary>
            <param name="environment">The environment instance into which data is to be loaded.</param>
            <param name="environmentTemplate">The template.</param>
            <param name="parent">The parent component. May be <c>null</c>.</param>
            <param name="role">The role that the given node maps to.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.LoadComponents(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Invoked by the <see cref="T:Load"/> method to merge and load components into this
            configuration.
            </summary>
            <param name="environment">The environment instance into which data is to be loaded.</param>
            <param name="environmentTemplate">The template that contains information about the roles, components and their properties.</param>
            <param name="mapping">The mapping that maps machines to roles.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.LoadInheritedProperties(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.Component)">
            <summary>
            Invoked by the <see cref="T:LoadProperties"/> method to merge and load inherited properties for the
            specified component.
            </summary>
            <param name="environment">The environment instance into which data is to be loaded.</param>
            <param name="component">The component to load properties for.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentBuilder.LoadProperties(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.Component,Microsoft.Test.Environment.Model.Role,Microsoft.Test.Environment.Model.MappingNode)">
            <summary>
            Invoked by the <see cref="T:LoadComponent"/> method to merge and load properties for the
            specified component.
            </summary>
            <param name="environment">The environment instance into which data is to be loaded.</param>
            <param name="component">The component to load properties for.</param>
            <param name="role">The role that the given node maps to.</param>
            <param name="node">The node.</param>
        </member>
        <member name="T:Microsoft.Test.Environment.DistributedEnvironmentException">
            <summary>
            A <see cref="T:System.Exception"/> raised by the distributed environment library.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DistributedEnvironmentException"/> type with
            a specified error message.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/> class with a 
            specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a 
            <c>null</c>null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/> class with serialized
            data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentException.Create(System.String)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/> given a message text.
            </summary>
            <param name="message">The message text.</param>
            <returns>
            An instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentException.Create(System.Exception,System.String)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/> given a message text and
            an inner exception.
            </summary>
            <param name="innerException">The inner exception.</param>
            <param name="message">The message text.</param>
            <returns>
            An instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentException.Create(System.String,System.Object[])">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/> given a message text
            and a sequence of message arguments.
            </summary>
            <param name="message">The message text.</param>
            <param name="arguments">The arguments to format.</param>
            <returns>
            An instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.DistributedEnvironmentException.Create(System.Exception,System.String,System.Object[])">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/> given a message text, a
            sequence of message arguments and an inner exception.
            </summary>
            <param name="innerException">The inner exception.</param>
            <param name="message">The message text.</param>
            <param name="arguments">The arguments to format.</param>
            <returns>
            An instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentException"/>.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.ItemPath">
            <summary>
            Represents the path to an environment entity.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.AttributeClose">
            <summary>Closes an attribute selector.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.AttributeOpen">
            <summary>Opens an attribute selector.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.AttributeValueSeparator">
            <summary>Separates an attribute and its value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.ComponentKey">
            <summary>The key used to identify a component in a path.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.EnvironmentKey">
            <summary>The key used to identify the root environment instance in a path.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.Escape">
            <summary>Escapes an attribute value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.NameAttributeKey">
            <summary>The key used to identify the name attribute of an item in a path.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.PathSeparator">
            <summary>Separates two items in the path.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.PropertyItemKey">
            <summary>The key used to identify a property subitem in a path.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.PropertyKey">
            <summary>The key used to identify a component property in a path.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.currentPath">
            <summary>The current value of this item path.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ItemPath"/> type.
            </summary>
            <param name="initialPath">The initial path.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.op_Implicit(Microsoft.Test.Environment.ItemPath)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:Microsoft.Test.Environment.ItemPath"/> to 
            <see cref="T:System.String"/>.
            </summary>
            <param name="path">The path instance.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.op_Addition(Microsoft.Test.Environment.ItemPath,Microsoft.Test.Environment.Component)">
            <summary>
            Implements the + operator. This is the only manner in which path values can be constructed.
            </summary>
            <param name="left">The left operand.</param>
            <param name="right">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.op_Addition(Microsoft.Test.Environment.ItemPath,Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            Implements the + operator. This is the only manner in which path values can be constructed.
            </summary>
            <param name="left">The left operand.</param>
            <param name="right">The right operand.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.Parse(System.String)">
            <summary>
            Parses the specified path string into an <see cref="T:ItemPath"/> instance.
            </summary>
            <param name="path">The path string to parse.</param>
            <returns>An instance of <see cref="T:ItemPath"/> or <see cref="P:ItemPath.Empty"/> if <paramref name="path"/> is <c>null</c> or empty.</returns>
            <exception cref="T:Microsoft.Test.Environment.DistributedEnvironmentException">If <paramref name="path"/> cannot be parsed into an item path.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.Add(Microsoft.Test.Environment.Component)">
            <summary>
            Alternative to the + operator. 
            </summary>
            <param name="right">The component whose path is to be combined with this item path.</param>
            <returns>A new instance of <see cref="T:Microsoft.Test.Environment.ItemPath"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.Add(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            Alternative to the + operator. 
            </summary>
            <param name="right">The component property whose path is to be combined with this item path.</param>
            <returns>A new instance of <see cref="T:Microsoft.Test.Environment.ItemPath"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:ItemPath"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:ItemPath"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:ItemPath"/>; otherwise, false.</returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:ItemPath"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.Locate(Microsoft.Test.Environment.DistributedEnvironment)">
            <summary>
            Locates the entity specified by this item path in the given environment.
            </summary>
            <param name="environment">The environment.</param>
            <returns>The entity that corresponds to this path or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="environment"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:ItemPath"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:ItemPath"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.Parse">
            <summary>
            Parses this item path into individual path components.
            </summary>
            <returns>A list of path components.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.ItemPath.Empty">
            <summary>
            Gets the empty path.
            </summary>
            <value>The empty path.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ItemPath.Root">
            <summary>
            Gets the path to the root environment instance.
            </summary>
            <value>The root item path.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.ItemPath.ItemType">
            <summary>
            Specifies the type of the item in a path.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.ItemType.Environment">
            <summary>The root environment item.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.ItemType.Component">
            <summary>A component.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.ItemType.Property">
            <summary>A component property.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.ItemType.Item">
            <summary>A subitem of a component property.</summary>
        </member>
        <member name="T:Microsoft.Test.Environment.ItemPath.PathComponent">
            <summary>
            Represents a component of a path.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.PathComponent.index">
            <summary>The index of the entity identified by this path component.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.PathComponent.name">
            <summary>The name of the entity identified by this path component.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ItemPath.PathComponent.type">
            <summary>The type of this path component.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ItemPath.PathComponent.Create(System.String)">
            <summary>
            Creates a path component instance given the path specification for that item.
            </summary>
            <param name="part">The part specification.</param>
            <returns>An instance of PathComponent.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.ItemPath.PathComponent.Index">
            <summary>
            Gets or sets the index of the item referred to by this path component.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ItemPath.PathComponent.Name">
            <summary>
            Gets or sets the name of the item referred to by this path component.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ItemPath.PathComponent.Type">
            <summary>
            Gets or sets the type of the item referred to by this path component.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Mantis.MantisConfigurationBuilder">
            <summary>
            An instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentBuilder"/> that contains the legacy logic necessary
            to combine Mantis Distributed Configuration template files and Mantis miniconfig files.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisConfigurationBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MantisConfigurationBuilder"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisConfigurationBuilder.FindRole(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.MappingNode)">
            <summary>
            Retrieves the <see cref="T:Role"/> instance for the given node.
            </summary>
            <param name="environment">The environment instance into which data is to be loaded.</param>
            <param name="environmentTemplate">The template that contains information about the roles, components and their properties.</param>
            <param name="node">The node.</param>
            <returns>
            An instance of <see cref="T:Role"/> or <c>null</c>.
            </returns>
            <exception cref="T:ApplicationException">If the role for the given node is not found.</exception>
        </member>
        <member name="T:Microsoft.Test.Environment.Mantis.MantisDistributedEnvironment">
            <summary>
            A <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/> instance that can load data from Mantis
            distributed configuration template and miniconfig files. This class exists for 
            backward compatibility.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisDistributedEnvironment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Mantis.MantisDistributedEnvironment"/> class.
            </summary>
            <remarks>
            This constructor does not initialize the object with configuration information. One of
            the Load methods must be invoked to load configuration information into this configuration instance.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisDistributedEnvironment.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MantisDistributedEnvironment"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisDistributedEnvironment.Load(Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Loads data into this configuration instance from the given template and mapping
            data.
            </summary>
            <param name="environmentTemplate">The template that contains information about the roles, components and their properties.</param>
            <param name="mapping">The mapping that maps machines to roles.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisDistributedEnvironment.Load(Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Loads data into this configuration instance using the default configuration template
            and the given mapping.
            </summary>
            <param name="mapping">The mapping that maps machines to roles.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisDistributedEnvironment.CreateBuilder(Microsoft.Test.Environment.Model.EnvironmentTemplate,Microsoft.Test.Environment.Model.Mapping)">
            <summary>
            Creates the instance of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentBuilder"/> that contains the implementation
            need to combine the given <see cref="T:Microsoft.Test.Environment.Model.EnvironmentTemplate"/> and <see cref="T:Microsoft.Test.Environment.Model.Mapping"/> into this
            environment instance.
            </summary>
            <param name="environmentTemplate">The environment template that contains the role and template information from.</param>
            <param name="mapping">The mapping object that contains the machine to role mappings.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisDistributedEnvironment.OnInitialized">
            <summary>
            Signals all global aliases, child components and component properties to perform
            post-load initialization.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Mantis.MantisEnvironmentTemplate">
            <summary>
            Loads role and template information from a Mantis Distributed Configuration template file.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.EnvironmentTemplate">
            <summary>
            Represents a test configuration template document.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.AliasElementKey">
            <summary>The name of the element that represents an Alias in XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.AliasesElementKey">
            <summary>The name of the top level element that contains individual global aliases.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.ConfigurationTemplateRootElementKey">
            <summary>The name of the root element for a configuration template XML document.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.RoleElementKey">
            <summary>The name of the element that represents a Role in XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.RolesElementKey">
            <summary>The name of the top level element that contains individual roles.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.TemplateElementKey">
            <summary>The name of the element that represents a Template in XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.TemplatesElementKey">
            <summary>The name of the top level element that contains individual templates.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.s_defaultTemplateInstance">
            <summary>The default configuration tempalate singleton instance.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.aliases">
            <summary>The collection of global aliases defined in the configuration template.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.roles">
            <summary>The collection of roles defined in the configuration template.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.validationData">
            <summary>The schema validation data.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Template"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.CreateResolver">
            <summary>
            Creates an instance of <see cref="T:System.Xml.XmlResolver"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.Clear">
            <summary>
            Clears all data from this configuration template.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.Load(System.String)">
            <summary>
            Loads data for this template from the specified template file.
            </summary>
            <param name="templateFile">The template file.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.Load(System.IO.TextReader)">
            <summary>
            Loads data for this template from the specified template reader.
            </summary>
            <param name="templateReader">The template reader.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.Load(System.Xml.XmlDocument)">
            <summary>
            Loads data for this template from the specified template document.
            </summary>
            <param name="templateDocument">The template document.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.Save(System.String)">
            <summary>
            Saves data from this template to the specified template file.
            </summary>
            <param name="templateFile">The template file.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.Save(System.IO.TextWriter)">
            <summary>
            Saves data from this template to the specified template writer.
            </summary>
            <param name="templateWriter">The template writer.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.Save(System.Xml.XmlDocument)">
            <summary>
            Saves data from this template to the specified template document.
            </summary>
            <param name="templateDocument">The template document.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.InitializeLoadSettings">
            <summary>
            Initializes the XML reader settings to use when loading a configuration template file.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.InitializeSaveSettings">
            <summary>
            Initializes the XML reader settings to use when saving to a configuration template file.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.InitializeSchema">
            <summary>
            Gets the configuration template schema instance to use to validate when loading configuration
            data into this template instance from a configuration template file.
            </summary>
            <value>The configuration template schema.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplate.Default">
            <summary>
            Gets the default configuration template. The default configuration template is a 
            read-only template that contains no aliases, roles or templates.
            </summary>
            <value>The default configuration template.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplate.Aliases">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> of <see cref="T:Alias"/>es
            that contains all the global aliases in this configuration template.
            </summary>
            <value>The aliases.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplate.BuilderType">
            <summary>
            Gets the type of the implementation of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentBuilder"/> that
            can combine this environment template with an instance of <see cref="T:Microsoft.Test.Environment.Model.Mapping"/>.
            </summary>
            <value>The type of the builder.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplate.LoadSettings">
            <summary>
            Gets or sets the <see cref="T:System.Xml.XmlReaderSettings"/> to use to load data into configuration 
            template from a file.
            </summary>
            <value>The load settings.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplate.Roles">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> of <see cref="T:Role"/>s
            that contains all the roles in this configuration template.
            </summary>
            <value>The roles.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplate.SaveSettings">
            <summary>
            Gets or sets the <see cref="T:System.Xml.XmlWriterSettings"/> to use to save this configuration template to a file.
            </summary>
            <value>The save settings.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplate.Schema">
            <summary>
            Gets or sets the <see cref="T:System.Xml.Schema.XmlSchema"/> to use to validate that
            a configuration template file is valid.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplate.ValidationData">
            <summary>
            Gets or sets the container that contains data about validation errors or warnings or exceptions
            raised while loading a configuration template file.
            </summary>
            <value>The validation data.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType">
            <summary>
            The type of the default empty configuration template instance.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.aliases2">
            <summary>Empty RO alias collection.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.roles2">
            <summary>Empty RO role collection.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.Clear">
            <summary>
            Clears all data from this configuration template.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.Load(System.String)">
            <summary>
            Loads data for this template from the specified template file.
            </summary>
            <param name="templateFile">The template file.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.Load(System.IO.TextReader)">
            <summary>
            Loads data for this template from the specified template reader.
            </summary>
            <param name="templateReader">The template reader.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.Load(System.Xml.XmlDocument)">
            <summary>
            Loads data for this template from the specified template document.
            </summary>
            <param name="templateDocument">The template document.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.Save(System.String)">
            <summary>
            Saves data from this template to the specified template file.
            </summary>
            <param name="templateFile">The template file.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.Save(System.IO.TextWriter)">
            <summary>
            Saves data from this template to the specified template writer.
            </summary>
            <param name="templateWriter">The template writer.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.Save(System.Xml.XmlDocument)">
            <summary>
            Saves data from this template to the specified template document.
            </summary>
            <param name="templateDocument">The template document.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.Aliases">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> of <see cref="T:Alias"/>es
            that contains all the global aliases in this configuration template.
            </summary>
            <value>The aliases.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplate.DefaultConfigurationTemplateType.Roles">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> of <see cref="T:Role"/>s
            that contains all the roles in this configuration template.
            </summary>
            <value>The roles.</value>
        </member>
        <member name="F:Microsoft.Test.Environment.Mantis.MantisEnvironmentTemplate.MantisConfigTemplateElementKey">
            <summary>The name of the root XML element in a Mantis Distributed Configuration template file.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Mantis.MantisEnvironmentTemplate.templates">
            <summary>The list of &lt;Template&gt; instances.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisEnvironmentTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MantisEnvironmentTemplate"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisEnvironmentTemplate.Load(System.Xml.XmlDocument)">
            <summary>
            Loads data for this template from the specified template document.
            </summary>
            <param name="templateDocument">The template document.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisEnvironmentTemplate.Save(System.Xml.XmlDocument)">
            <summary>
            Saves data from this template to the specified template document.
            </summary>
            <param name="templateDocument">The template document.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisEnvironmentTemplate.InitializeSchema">
            <summary>
            Gets the configuration template schema instance to use to validate when loading configuration
            data into this template instance from a configuration template file.
            </summary>
            <value>The configuration template schema.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Mantis.MantisEnvironmentTemplate.BuilderType">
            <summary>
            Gets the type of the implementation of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentBuilder"/> that
            can combine this environment template with an instance of <see cref="T:Microsoft.Test.Environment.Model.Mapping"/>.
            </summary>
            <value>The type of the builder.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Mantis.MantisEnvironmentTemplate.Templates">
            <summary>
            Gets the templates.
            </summary>
            <value>The templates.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Mantis.MantisMapping">
            <summary>
            Loads machine-to-role mapping information and aliases from a Mantis Distributed Configuration miniconfig file.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.Mapping">
            <summary>
            Represents a in-memory representation of a machine to role mapping.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Mapping.AliasElementKey">
            <summary>The name of the element that represents an Alias in XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Mapping.AliasesElementKey">
            <summary>The name of the top level element that contains individual global aliases.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Mapping.MappingRootElementKey">
            <summary>The name of the root element for a mapping XML document.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Mapping.NodeElementName">
            <summary>The name of the element used to persist a mapping node in XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Mapping.id">
            <summary>The unique ID for this mapping.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Mapping.mappingAliases">
            <summary>The global aliases in this mapping.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Mapping.nodes">
            <summary>The top level nodes in this mapping.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Mapping.validationData">
            <summary>The schema validation data.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapping"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.CreateResolver">
            <summary>
            Creates an instance of <see cref="T:System.Xml.XmlResolver"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.Clear">
            <summary>
            Clears all data from this configuration template.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Mapping"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Mapping"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Mapping"/>; otherwise, false.</returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Mapping"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.Load(System.String)">
            <summary>
            Loads data for this mapping from the specified mapping file.
            </summary>
            <param name="mappingFile">The mapping file.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.Load(System.IO.TextReader)">
            <summary>
            Loads data for this mapping from the specified mapping reader.
            </summary>
            <param name="mappingReader">The mapping reader.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.Load(System.Xml.XmlDocument)">
            <summary>
            Loads data for this template from the specified template document.
            </summary>
            <param name="templateDocument">The template document.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.Save(System.String)">
            <summary>
            Saves data from this template to the specified template file.
            </summary>
            <param name="templateFile">The template file.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.Save(System.IO.TextWriter)">
            <summary>
            Saves data from this template to the specified template writer.
            </summary>
            <param name="templateWriter">The template writer.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.Save(System.Xml.XmlDocument)">
            <summary>
            Saves data from this template to the specified template document.
            </summary>
            <param name="templateDocument">The template document.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Mapping"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Mapping"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.InitializeLoadSettings">
            <summary>
            Initializes the XML reader settings to use when loading a configuration template file.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.InitializeSaveSettings">
            <summary>
            Initializes the XML reader settings to use when saving to a configuration template file.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Mapping.InitializeSchema">
            <summary>
            Gets the configuration template schema instance to use to validate when loading mapping
            data into this instance from a mapping file.
            </summary>
            <value>The mapping schema.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Mapping.Aliases">
            <summary>
            Gets the global alias collection for this mapping.
            </summary>
            <value>The aliases.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Mapping.BuilderType">
            <summary>
            Gets the type of the implementation of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentBuilder"/> that
            can combine this mapping with an instance of <see cref="T:Microsoft.Test.Environment.Model.EnvironmentTemplate"/>.
            </summary>
            <value>The type of the builder.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Mapping.Children">
            <summary>
            Gets the top level nodes in this mapping.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Mapping.Id">
            <summary>
            Gets or sets the unique ID for this mapping.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Mapping.LoadSettings">
            <summary>
            Gets or sets the <see cref="T:System.Xml.XmlReaderSettings"/> to use to load data into configuration 
            template from a file.
            </summary>
            <value>The load settings.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Mapping.SaveSettings">
            <summary>
            Gets or sets the <see cref="T:System.Xml.XmlWriterSettings"/> to use to save this configuration template to a file.
            </summary>
            <value>The save settings.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Mapping.Schema">
            <summary>
            Gets or sets the <see cref="T:System.Xml.Schema.XmlSchema"/> to use to validate that
            a mapping file is valid.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Mapping.ValidationData">
            <summary>
            Gets or sets a container that contains data about validation errors or warnings or exceptions
            raised while loading a mapping file.
            </summary>
            <value>The validation data.</value>
        </member>
        <member name="F:Microsoft.Test.Environment.Mantis.MantisMapping.MiniConfigElementKey">
            <summary>The name of the root XML element in the Mantis distributed configuration miniconfig file.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MantisMapping"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisMapping.Load(System.Xml.XmlDocument)">
            <summary>
            Loads data for this template from the specified template document.
            </summary>
            <param name="templateDocument">The template document.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisMapping.Save(System.Xml.XmlDocument)">
            <summary>
            Saves data from this template to the specified template document.
            </summary>
            <param name="templateDocument">The template document.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisMapping.Load(Microsoft.Test.Environment.Mantis.MantisMappingNode,System.Xml.XmlElement)">
            <summary>
            Loads child node data into the specified parent node from the given XML element containing
            the node data.
            </summary>
            <param name="parentNode">The parent node.</param>
            <param name="xmlNode">The XML node containing the node data.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Mantis.MantisMapping.BuilderType">
            <summary>
            Gets the type of the implementation of <see cref="T:Microsoft.Test.Environment.DistributedEnvironmentBuilder"/> that
            can combine this mapping with an instance of <see cref="T:Microsoft.Test.Environment.Model.EnvironmentTemplate"/>.
            </summary>
            <value>The type of the builder.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Mantis.MantisMappingNode">
            <summary>
            Represents a <see cref="T:Microsoft.Test.Environment.Model.MappingNode"/> specialized for loading node data from a Mantis distributed
            configuration miniconfig file.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.MappingNode">
            <summary>
            Represents abstract information about a specific mapping node. This information is loaded from
            the mapping file or another mapping data source.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.MappingNode.NodeElementName">
            <summary>The name of the element used to persist a mapping node in XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.MappingNode.PropertyElementName">
            <summary>The name of the element used to persist a property in XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.MappingNode.childNodes">
            <summary>The child nodes for this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.MappingNode.id">
            <summary>The ID for this mapping.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.MappingNode.nodeName">
            <summary>The name of this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.MappingNode.parentNode">
            <summary>The parent node for this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.MappingNode.properties">
            <summary>The properties for this mapping.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNode.#ctor(Microsoft.Test.Environment.Model.MappingNode)">
            <summary>
            Initializes a new instance of the <see cref="T:MappingNode"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:MappingNode"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:MappingNode"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:MappingNode"/>; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNode.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNode.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this node instance from the specified ConfigurationTemplateMappingNode XML element.
            </summary>
            <param name="nodeElement">The node element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNode.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this node instance to the specified ConfigurationTemplateMappingNode XML element.
            </summary>
            <param name="nodeElement">The node element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNode.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:ConfigurationTemplateMappingNode"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:ConfigurationTemplateMappingNode"/>.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MappingNode.AllProperties">
            <summary>
            Gets all properties for this mapping node including the properties inherited
            from the configuration node.
            </summary>
            <remarks>
             The returned collection is a copy that can be modified. The property instances
             in the collection are references.
            </remarks>
            <value>A <see cref="T:IKeyedCollection{K,V}"/> of all the properties for this node.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MappingNode.Children">
            <summary>
            Gets a collection of the child nodes for this mapping node.
            </summary>
            <value>The child nodes.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MappingNode.Id">
            <summary>
            Gets or sets the unique ID for this node.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MappingNode.IsValid">
            <summary>
            Gets a value indicating whether this node is valid (dictated by whether the Name 
            property is valid.)
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MappingNode.Name">
            <summary>
            Gets or sets the name for this node.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MappingNode.Parent">
            <summary>
            Gets or sets the configuration mapping node for this node.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MappingNode.Properties">
            <summary>
            Gets the properties for this mapping node.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="F:Microsoft.Test.Environment.Mantis.MantisMappingNode.originalName">
            <summary>The original name of this node.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisMappingNode.#ctor(Microsoft.Test.Environment.Model.MappingNode)">
            <summary>
            Initializes a new instance of the <see cref="T:MantisMappingNode"/> type.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Mantis.MantisMappingNode.OriginalName">
            <summary>
            Gets or sets the original name of this node. This property is used to keep 
            track of unnamed or non-uniquely named nodes that are renamed by the <see cref="M:MantisMapping.Load"/>
            method.
            </summary>
            <value>The original name of this node.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Mantis.MantisRole">
            <summary>
            Represents a &lt;Role&gt; entry in a Mantis Distributed Configuration template
            file.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.Role">
            <summary>
            Represents abstract information about a specific role. This information is loaded from
            the configuration template file.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.EnvironmentTemplateNode">
            <summary>
            Represents abstract information about a specific node. This information is loaded from
            the configuration template file.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.AliasElementKey">
            <summary>The name of the element used to persist the child aliases for this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.PropertyElementKey">
            <summary>The name of the element used to persist the child properties for this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.aliases">
            <summary>The aliases for this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.id">
            <summary>The ID for this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.properties">
            <summary>The properties for this node.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EnvironmentTemplateNode"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EnvironmentTemplateNode"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EnvironmentTemplateNode"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EnvironmentTemplateNode"/>; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this node instance from the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The node element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this node instance to the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The node element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:EnvironmentTemplateNode"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:EnvironmentTemplateNode"/>.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.Aliases">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> that contains all
            the aliases for this node.
            </summary>
            <value>The aliases.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.Id">
            <summary>
            Gets or sets the unique ID for this node.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.IsValid">
            <summary>
            Gets a value indicating whether this node instance is valid.
            </summary>
            <value><c>true</c> if this node instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.EnvironmentTemplateNode.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> that contains all
            the properties for this node.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.NameAttributeKey">
            <summary>The name of the attribute used to store the role name in XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.TemplateNameAttributeKey">
            <summary>The name of the template for this role.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.s_default">
            <summary>The default role instance.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.childRoles">
            <summary>The child roles that inherit properties from this role.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.name">
            <summary>The name of this role.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.parent">
            <summary>The parent role for this role.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.template">
            <summary>The template to be used for the component repersented by this role.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.templateName">
            <summary>The ID of the template for this role.</summary>
            <remarks>This field is only used while role and template data is being loaded from a </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Role.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EnvironmentTemplateNode"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Role.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EnvironmentTemplateNode"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EnvironmentTemplateNode"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EnvironmentTemplateNode"/>; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Role.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:EnvironmentTemplateNode"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Role.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this role instance from the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The role element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Role.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this role instance to the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The role element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Role.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:EnvironmentTemplateNode"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:EnvironmentTemplateNode"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Role.CreateConfigurationItem(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.DistributedEnvironmentBuilder)">
            <summary>
            Creates the configuration item to represent this role based on the template assigned
            to this role.
            </summary>
            <param name="environment">The environment instance that is requesting the item to be created.</param>
            <param name="builder">The builder that is invoking this method to create an instance of a component to add to <paramref name="environment"/>.</param>
            <returns>An instance of <see cref="T:Component"/>.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.Default">
            <summary>
            Gets the default role for nodes not mapped to a specified role.
            </summary>
            <value>The default.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.Children">
            <summary>
            Gets the child roles for this role.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.InheritedAliases">
            <summary>
            Gets a <see cref="T:Microsoft.Test.Environment.IKeyedCollection{K,V}"/> of all 
            the aliases inherited from the ancestor roles for this role.
            </summary>
            <value>The inherited aliases.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.InheritedProperties">
            <summary>
            Gets a <see cref="T:Microsoft.Test.Environment.IKeyedCollection{K,V}"/> of all 
            the properites inherited from the ancestor roles for this role.
            </summary>
            <value>The inherited properties.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.IsValid">
            <summary>
            Determines whether this role instance is valid.
            </summary>
            <returns>
            	<c>true</c> if this role instance is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.Name">
            <summary>
            Gets or sets the name of this role.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.Parent">
            <summary>
            Gets or sets the parent role for this role.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.Template">
            <summary>
            Gets or sets the template for this role.
            </summary>
            <value>The template.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.TemplateName">
            <summary>
            Gets or sets the name of the template for this role.
            </summary>
            <remarks>
            Used by the configuration template file type to cache the template name during
            deserialization from XML.
            </remarks>
            <value>The template name.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.Role.GenericComponentRole">
            <summary>
            The default role for a generic component.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.GenericComponentRole.aliases">
            <summary>The aliases.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.GenericComponentRole.properties">
            <summary>The properties.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Role.GenericComponentRole.roles">
            <summary>The child roles.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Role.GenericComponentRole.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Model.Role.GenericComponentRole"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Role.GenericComponentRole.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this role instance from the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="roleElement">The role element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Role.GenericComponentRole.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this role instance to the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The role element.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.GenericComponentRole.Aliases">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> that contains all
            the aliases for this node.
            </summary>
            <value>The aliases.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.GenericComponentRole.Children">
            <summary>
            Gets the child roles for this role.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.GenericComponentRole.Name">
            <summary>
            Gets or sets the name of this role.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.GenericComponentRole.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> that contains all
            the properties for this node.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Role.GenericComponentRole.Template">
            <summary>
            Gets or sets the template for this role.
            </summary>
            <value>The template.</value>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisRole.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MantisRole"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisRole.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this role instance from the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The role element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisRole.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this role instance to the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The role element.</param>
        </member>
        <member name="T:Microsoft.Test.Environment.Mantis.MantisTemplate">
            <summary>
            Represents a &lt;Template&gt; entry in a Mantis Distributed Configuration template
            file.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.Template">
            <summary>
            Represents abstract information about a specific template. This information is loaded from
            the configuration template file.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Template.ClassAttributeKey">
            <summary>The name of the attribute used to persist the component role class name of a property to XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Template.MonikerAttributeKey">
            <summary>The name of the attribute used to persist the value to XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Template.NameAttributeKey">
            <summary>The name of the attribute used to persist the template name to XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Template.defaultInstance">
            <summary>The default template singleton instance.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Template.className">
            <summary>The name of the type that expanded instances of this template will be.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Template.initializationMoniker">
            <summary>The initialization moniker attribute value for this template.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Template.templateName">
            <summary>The name (ID) of this template.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Template.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EnvironmentTemplateNode"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Template.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Template.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Template.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this template instance from the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The template element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Template.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this template instance to the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The template element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Template.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:EnvironmentTemplateNode"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:EnvironmentTemplateNode"/>.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Template.Default">
            <summary>
            Gets the default template node instance.
            </summary>
            <value>The default.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Template.IsValid">
            <summary>
            Determines whether this template instance is valid.
            </summary>
            <returns>
            	<c>true</c> if this template instance is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Template.Moniker">
            <summary>
            Gets or sets the value of the initialization moniker for this template.
            </summary>
            <value>The initialization moniker string.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Template.Name">
            <summary>
            Gets or sets the name (ID) of this template. 
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Template.TypeName">
            <summary>
            Gets or sets the name of the component that implements this template.
            </summary>
            <value>The class.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.Template.DefaultTemplateType">
            <summary>
            The type of the default template instance.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Template.DefaultTemplateType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Model.Template.DefaultTemplateType"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Template.DefaultTemplateType.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this template instance from the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="templateElement">The template element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Template.DefaultTemplateType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Template.DefaultTemplateType.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Template.DefaultTemplateType.Aliases">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> that contains all
            the aliases for this node.
            </summary>
            <value>The aliases.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Template.DefaultTemplateType.Moniker">
            <summary>
            Gets or sets the value of the value attribute for this template.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Template.DefaultTemplateType.Name">
            <summary>
            Gets or sets the name (ID) of this template.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Template.DefaultTemplateType.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> that contains all
            the properties for this node.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Template.DefaultTemplateType.TypeName">
            <summary>
            The name of the attribute used to persist the component role class name of a property to XML.
            </summary>
            <value>The class.</value>
        </member>
        <member name="F:Microsoft.Test.Environment.Mantis.MantisTemplate.IdentifyingAttributesKey">
            <summary>The name of the XML attribute that contains the identifying attributes.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Mantis.MantisTemplate.ValueAttributeKey">
            <summary>The name of the XML attribute that maps to the <see cref="P:Moniker"/> property.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Mantis.MantisTemplate.ValueElementKey">
            <summary>The name of the XML element that maps to a <see cref="T:Microsoft.Test.Environment.Model.Property"/> object.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Mantis.MantisTemplate.identifyingProperties">
            <summary>The list of </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MantisTemplate"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisTemplate.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this template instance from the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The template element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisTemplate.Matches(Microsoft.Test.Environment.Model.Role,Microsoft.Test.Environment.Model.MappingNode,System.Int32@)">
            <summary>
            Checks whether the given role/node combination has all the properties required to match this
            template.
            </summary>
            <param name="role">The role data from a Mantis distributed configuration template file.</param>
            <param name="node">The node data from a Mantis distributed configuration miniconfig file.</param>
            <param name="matchedAttributes">The number of attributes that were matched.</param>
            <returns>
            	<c>true</c> if the given role/node combination matches this template; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisTemplate.Matches(Microsoft.Test.Environment.Model.EnvironmentTemplateNode,Microsoft.Test.Environment.Model.MappingNode)">
            <summary>
            Checks whether the given role/node combination has all the properties required to match this
            template.
            </summary>
            <param name="role">The role data from a Mantis distributed configuration template file.</param>
            <param name="node">The node data from a Mantis distributed configuration miniconfig file.</param>
            <returns>
            	The number of matched attributes, or -1 if the given role/node combination does not match this template.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Mantis.MantisTemplate.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this template instance to the specified EnvironmentTemplateNode XML element.
            </summary>
            <param name="nodeElement">The template element.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Mantis.MantisTemplate.IdentifyingProperties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection{T}"/> of properties that a 
            node must have in order to match this template.
            </summary>
            <value>The selector properties.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.MultipleProperty">
            <summary>
            Represents a named property that is a collection of multiple properties with the same
            name but potentially different types and values.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.Property">
            <summary>
            Represents data about a single Property child element for a EnvironmentTemplateNode element
            in the test configuration template file.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Property.ClassAttributeKey">
            <summary>The name of the attribute used to persist the component role class name of a property to XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Property.NameAttributeKey">
            <summary>The name of the attribute used to persist the name of a property to XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Property.ValueAttributeKey">
            <summary>The name of the attribute used to persist the value of a property to XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Property.className">
            <summary>The component node class name for this property.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Property.name">
            <summary>The name of this macro.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Property.propertyValue">
            <summary>The unexpanded template value of this property.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Property.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Property"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Property.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Property"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Property"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Property"/>; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Property.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Property"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Property.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this Property instance from the specified XML element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Property.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this Property instance into the specified XML element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Property.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Property"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Property"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Property.CreateConfigurationItem(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.DistributedEnvironmentBuilder)">
            <summary>
            Creates the configuration item to represent this property.
            </summary>
            <param name="environment">The environment instance that is requesting the item to be created.</param>
            <param name="builder">The builder that is invoking this method to create an instance of a component property to add to <paramref name="environment"/>.</param>
            <returns>
            An instance of <see cref="T:ComponentProperty"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Property.IsValid">
            <summary>
            Gets a value indicating whether this property is valid.
            </summary>
            <value><c>true</c> if this property is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Property.Name">
            <summary>
            Gets or sets the name of this property.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Property.TypeName">
            <summary>
            Gets or sets the component node class name for this property.
            </summary>
            <value>The class.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Property.Value">
            <summary>
            Gets or sets the unexpanded value of this property.
            </summary>
            <value>The value.</value>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.MultipleProperty.items">
            <summary>The individual property items in this multi-property collection.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MultipleProperty"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.Add(Microsoft.Test.Environment.Model.MultiplePropertyItem)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.Contains(Microsoft.Test.Environment.Model.MultiplePropertyItem)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection{T}"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection{T}"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.CopyTo(Microsoft.Test.Environment.Model.MultiplePropertyItem[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection{T}"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection{T}"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection{T}"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator{T}"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.IndexOf(Microsoft.Test.Environment.Model.MultiplePropertyItem)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList{T}"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList{T}"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.Insert(System.Int32,Microsoft.Test.Environment.Model.MultiplePropertyItem)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList{T}"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList{T}"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList{T}"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this Property instance from the specified XML element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.Remove(Microsoft.Test.Environment.Model.MultiplePropertyItem)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection{T}"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList{T}"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList{T}"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this Property instance into the specified XML element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.CreateConfigurationItem(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.DistributedEnvironmentBuilder)">
            <summary>
            Creates the configuration item to represent this property.
            </summary>
            <param name="environment">The environment instance that is requesting the item to be created.</param>
            <param name="builder">The builder that is invoking this method to create an instance of a component property to add to <paramref name="environment"/>.</param>
            <returns>
            An instance of <see cref="T:ComponentProperty"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultipleProperty.Verify(Microsoft.Test.Environment.Model.MultiplePropertyItem)">
            <summary>
            Verifies that <paramref name="property"/> has the same the name as this property and that the instance is not <c>null</c>.
            </summary>
            <param name="property">The property to verify.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="property"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="property"/> does not have the same name as this multi-property collection.</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MultipleProperty.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MultipleProperty.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MultipleProperty.IsValid">
            <summary>
            Gets a value indicating whether this property is valid.
            </summary>
            <value><c>true</c> if this property is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MultipleProperty.TypeName">
            <summary>
            This property is not valid for instances of <see cref="T:Microsoft.Test.Environment.Model.MultipleProperty"/>.
            </summary>
            <value>The implementation class name for this property.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MultipleProperty.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Test.Environment.Model.Property"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.MultiplePropertyItem">
            <summary>
            An instance of <see cref="T:Microsoft.Test.Environment.Model.Property"/> that represents a single property in a multi-valued property.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultiplePropertyItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MultiPropertyItem"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultiplePropertyItem.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this Property instance from the specified XML element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MultiplePropertyItem.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this Property instance into the specified XML element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.MultiplePropertyItem.Name">
            <summary>
            Gets or sets the name of this property.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.TemplateCollection">
            <summary>
            A collection to hold <see cref="T:Microsoft.Test.Environment.Model.Template"/> values. This collection automatically
            enforces unique template names(IDs).
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.TemplateCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TemplateCollection"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.TemplateCollection.Load(System.Xml.XmlElement,System.String)">
            <summary>
            Instantiates <see cref="T:Template"/> instances from the XML elements that are children of the 
            given configuration element and have the specified name and adds the instances to this collection.
            </summary>
            <param name="parent">The configuration element.</param>
            <param name="elementName">Name of the child element(s).</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="parent"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.TemplateCollection.Save(System.Xml.XmlElement,System.String)">
            <summary>
            Persists all valid templates in this collection as child elements of the specified configuration
            element.
            </summary>
            <param name="parent">The configuration XML element which contains the child elements.</param>
            <param name="elementName">Name of the child element.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="parent"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">if <paramref name="elementName"/> is <c>null</c> or empty.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.TemplateCollection.GetKeyForItem(Microsoft.Test.Environment.Model.Template)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.TemplateCollection.CreateEmptyCopy">
            <summary>
            When implemented in a derived class, creates an empty copy of this collection.
            </summary>
            <returns>
            An empty copy of this collection with the same state except for the items in the collection.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2">
            <summary>
            A non-modifiable empty read-only keyed collection.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyROKeyedCollection"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.Combine(Microsoft.Test.Environment.IKeyedCollection{`0,`1})">
            <summary>
            Merges the values in the specified <see cref="T:IKeyedCollection{K,V}"/> with this
            collection.
            </summary>
            <param name="other">The source <see cref="T:IKeyedCollection{K,V}"/> to merge with.</param>
            <remarks>
            Existing values with the same key are replaced with the new value from <paramref name="other"/>.
            Values from <paramref name="other"/> whose keys do not exist in this collection are added to
            this collection.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.Contains(`0)">
            <summary>
            Determines whether the collection contains an element with the specifiedkey.
            </summary>
            <param name="key">The key to locate in the <see cref="T:IKeyedCollection{TKey,TItem}"/></param>
            <returns>
            true if the <see cref="T:IKeyedCollection{TKey,TItem}"/> contains an element with
            the specified key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.Copy">
            <summary>
            Gets a new <see cref="T:IKeyedCollection{K,V}"/> that contains the same values
            as this collection.
            </summary>
            <returns>A copy of this collection.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.Merge(Microsoft.Test.Environment.IKeyedCollection{`0,`1})">
            <summary>
            Merges the values in the specified <see cref="T:IKeyedCollection{K,V}"/> with this
            collection.
            </summary>
            <param name="other">The source <see cref="T:IKeyedCollection{K,V}"/> to merge with.</param>
            <returns>
            A new <see cref="T:IKeyedCollection{K,V}"/> that contains the values from this
            collection and <paramref name="other"/>.
            </returns>
            <remarks>
            Values whose keys do not exist in this collection should be added. Values that already
            exist with the same key should be replaced.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the <see cref="T:IKeyedCollection{TKey,TItem}"/>.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false. This method
            also returns false if key is not found in the <see cref="T:IKeyedCollection{TKey,TItem}"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            key is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.Replace(`1)">
            <summary>
            Replaces the element with the the key for <paramref name="value"/> with <paramref name="value"/>.
            </summary>
            <param name="value">The value to add.</param>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.</param>
            <returns>
            	<c>true</c> if the object that implements <see cref="T:System.Collections.Generic.IKeyedCollection{K,V}"/> contains an element with the specified key; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.Keys">
            <summary>
            Gets a read-only <see cref="T:System.Collections.Generic.ICollection{TKey}"/> of all keys in the
            keyed collection.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.Values">
            <summary>
            Gets a read-only <see cref="T:System.Collections.Generic.ICollection{TValue}"/> of all the values
            in this keyed collection.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.EmptyROKeyedCollection`2.Item(`0)">
            <summary>
            Gets the <typeparamref name="TValue"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:Microsoft.Test.Environment.ClusteredGroupComponent">
            <summary>
            Provides the functionality to interact with a clustered group resource and a clustered service
            resource.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.ServiceComponent">
            <summary>
            Provides base functionality for a component that describes a service.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Component">
            <summary>
            Represents a generic component in a configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Component.aliases">
            <summary>The aliases for this component.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Component.childComponents">
            <summary>The configuration values for this component.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Component.configuration">
            <summary>The configuration containing this component as a descendent.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Component.name">
            <summary>The name of this component.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Component.parentComponent">
            <summary>The parent component containing this component.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Component.properties">
            <summary>The configuration values for this component.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.#ctor(Microsoft.Test.Environment.DistributedEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Component"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetAlias(System.String)">
            <summary>
            Gets the value of the configuration alias with the specified name.
            </summary>
            <param name="aliasName">Name of the configuration alias.</param>
            <returns>
            The value of the configuration alias entry with the specified name.
            </returns>
            <exception cref="T:Microsoft.Test.Environment.DistributedEnvironmentException">The alias was not found.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetAlias(System.String,System.Boolean)">
            <summary>
            Gets the value of the configuration alias with the specified name.
            </summary>
            <param name="aliasName">Name of the configuration alias.</param>
            <param name="throwIfNotFound">If <c>true</c> then this method will throw an exception if an alias with the specified name does not exist.</param>
            <returns>
            The value of the configuration alias entry with the specified name or <c>null</c> if <paramref name="throwIfNotFound"/> is not <c>true</c>.
            </returns>
            <exception cref="T:Microsoft.Test.Environment.DistributedEnvironmentException">The alias was not found and <paramref name="throwIfNotFound"/> is <c>true</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetComponent(System.String)">
            <summary>
            Returns the child component with the given name.
            </summary>
            <param name="componentName">The name of the component to retrieve.</param>
            <returns>The component found or <c>null</c> if the specified value does not exist.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetComponent``1(System.String)">
            <summary>
            Returns the child component with the given name.
            </summary>
            <typeparam name="T">The type to cast the return value to.</typeparam>
            <param name="componentName">The name of the component to retrieve.</param>
            <returns>
            The component found or <c>null</c> if the specified component does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetComponent``1(System.String,System.Boolean)">
            <summary>
            Returns the child component with the given name.
            </summary>
            <typeparam name="T">The type to cast the return value to.</typeparam>
            <param name="componentName">The name of the component to retrieve.</param>
            <param name="throwOnNull">if set to <c>true</c> an exception is thrown if a component with the name <paramref name="componentName"/> is not found.</param>
            <returns>
            The component found or <c>null</c> if the specified value does not exist and <paramref name="throwOnNull"/> is not <c>true</c>.
            </returns>
            <exception cref="T:System.ArgumentException">If a component with name <paramref name="componentName"/> is not found and <paramref name="throwOnNull"/> is <c>true</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection of the properties for this component.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator{T}"/> that can be used to iterate through 
            the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetPropertyValue``1(System.String)">
            <summary>
            Returns the value of the configuration value with the given name.
            </summary>
            <typeparam name="T">The type to cast the return value to.</typeparam>
            <param name="propertyName">The name of the configuration value to retrieve.</param>
            <returns>
            The value found or <c>null</c> if the specified value does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetPropertyValue``1(System.String,System.Boolean)">
            <summary>
            Returns the value of the configuration value with the given name.
            </summary>
            <typeparam name="T">The type to cast the return value to.</typeparam>
            <param name="propertyName">The name of the configuration value to retrieve.</param>
            <param name="throwOnNull">if set to <c>true</c> an exception is thrown if a value with the name <paramref name="propertyName"/> is not found.</param>
            <returns>
            The value found or <c>null</c> if the specified value does not exist and <paramref name="throwOnNull"/> is not <c>true</c>.
            </returns>
            <exception cref="T:System.ArgumentException">If a value with name <paramref name="propertyName"/> is not found and <paramref name="throwOnNull"/> is <c>true</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection of the properties for this component.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through 
            the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.Initialize(System.String,System.String)">
            <summary>
            Initializes this component with from a name-value pair.
            </summary>
            <param name="componentName">The name or key for this component.</param>
            <param name="initializer">The initialization value for this component.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.OnInitialized">
            <summary>
            Called after initialization is done to allow finalization of initialization after other
            dependencies have been created.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.OnInitializing">
            <summary>
            Called before load is performed to allow pre-load initialization.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.AssociateWithParent">
            <summary>
            Adds an entry for this component to the parent component or the parent configuration. 
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetAliasValue(System.String,System.Boolean)">
            <summary>
            Gets the value of the configuration alias with the specified name.
            </summary>
            <param name="aliasName">Name of the configuration alias.</param>
            <param name="throwOnNull">If <c>true</c> then this method will throw an exception if an alias with the specified name does not exist.</param>
            <returns>
            The value of the configuration alias entry with the specified name or <c>null</c> if <paramref name="throwOnNull"/> is not <c>true</c>.
            </returns>
            <exception cref="T:Microsoft.Test.Environment.DistributedEnvironmentException">The alias was not found and <paramref name="throwOnNull"/> is <c>true</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetComponent(System.String,System.Boolean)">
            <summary>
            Gets the child component with the specified name.
            </summary>
            <param name="componentName">Name of the component.</param>
            <param name="throwOnNull">If <c>true</c> then this method will throw an exception if a component with the specified name does not exist.</param>
            <returns>
            The component with the specified name or <c>null</c> if <paramref name="throwOnNull"/> is not <c>true</c>.
            </returns>
            <exception cref="T:Microsoft.Test.Environment.DistributedEnvironmentException">The component was not found and <paramref name="throwOnNull"/> is <c>true</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.GetPropertyValue(System.String,System.Boolean)">
            <summary>
            Gets the value of the configuration value with the specified name.
            </summary>
            <param name="valueName">Name of the configuration value.</param>
            <param name="throwOnNull">If <c>true</c> then this method will throw an exception if a value with the specified name does not exist.</param>
            <returns>
            The value of the configuration value entry with the specified name or <c>null</c> if <paramref name="throwOnNull"/> is not <c>true</c>.
            </returns>
            <exception cref="T:Microsoft.Test.Environment.DistributedEnvironmentException">The value was not found and <paramref name="throwOnNull"/> is <c>true</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the 
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.SafeEvaluateProperty(System.String)">
            <summary>
            Safes the evaluate property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Component.UnassociateFromParent">
            <summary>
            Removes the entry for this property from the parent component or the parent configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Component.Aliases">
            <summary>
            Gets a <see cref="T:IKeyedCollection{K,V}"/> containing the aliases for this component.
            </summary>
            <value>The aliases.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Component.Components">
            <summary>
            Gets a <see cref="T:IKeyedCollection{K,V}"/> containing the child components for this component.
            </summary>
            <value>The child components.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Component.Configuration">
            <summary>
            Gets the parent configuration containing this component.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Component.IsReadOnly">
            <summary>
            Gets a value indicating whether this component is read-only.
            </summary>
            <value>
            	<c>true</c> if this component is read-only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Component.IsValid">
            <summary>
            Determines whether this instance was setup correctly.
            </summary>
            <returns>
            	<c>true</c> if this configuration value was setup correctly; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Component.ItemPath">
            <summary>
            Gets the path to this component from the root environment object.
            </summary>
            <value>The path to this entity.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Component.Name">
            <summary>
            Gets or sets the name of this component.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Component.Parent">
            <summary>
            Gets or sets the parent component for this component.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Component.Properties">
            <summary>
            Gets a <see cref="T:IKeyedCollection{K,V}"/> containing the configuration values for this component.
            </summary>
            <value>The values.</value>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.DependsOnKey">
            <summary>Moniker key for the dependency value associated with this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.MachineKey">
            <summary>Moniker key for the machine value associated with this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.MonitorProcessKey">
            <summary>Moniker key for the process to monitor associated with this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.ServiceKey">
            <summary>Moniker key for the service value associated with this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.StartServiceKey">
            <summary>Moniker key for the start service value associated with this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.StopServiceKey">
            <summary>Moniker key for the stop service value associated with this node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.DefaultTimeToWaitForStatusChange">
            <summary>Default time to wait for the service to change status.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.MaxRetries">
            <summary>The maximum number of times to try to stop a service.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.dependentOnKey">
            <summary>The name of the configuration value that provides the dependent services value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.machineNameKey">
            <summary>The name of the configuration value that provides the machine name value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.monitorProcessKey">
            <summary>The name of the configuration value that provides the process to monitor value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.serviceNameKey">
            <summary>The name of the configuration value that provides the service name value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.startServiceKey">
            <summary>The name of the configuration value that provides the service to start value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ServiceComponent.stopServiceKey">
            <summary>The name of the configuration value that provides the service to stop value.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.#ctor(Microsoft.Test.Environment.DistributedEnvironment)">
            <summary>
            Creates a new service component node
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.BlockUntilStarted(System.TimeSpan)">
            <summary>
            Blocks until the serivce status has changed to running or <paramref name="timeToWait"/> 
            expires whichever comes first.
            </summary>
            <param name="timeToWait">Time to wait before failing.</param>
            <exception cref="T:System.ServiceProcess.TimeoutException">Time to wait expired.</exception>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.BlockUntilStopped(System.TimeSpan)">
            <summary>
            Blocks until the serivce status has changed to stopped or timeToWait expires whichever comes first
            </summary>
            <param name="timeToWait">Time to wait before failing</param>
            <exception cref="T:System.ServiceProcess.TimeoutException">Time to wait expired</exception>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.CycleService">
            <summary>
            Cycles the service associated with this component, blocking until complete.
            </summary>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default wait period expired without the service starting or
            stopping</exception>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.KillServiceProcess">
            <summary>
            Kills all the OS process(es) for the service represented by this component.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.OnInitialized">
            <summary>
            Called after initialization is done to allow finalization of initialization after other
            dependencies have been created.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.StartService">
            <summary>
            Starts the service associated with this component, blocking until complete.
            </summary>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default wait period expired without the service starting</exception>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.StartServiceAsync">
            <summary>
            Starts the service associated with this component asynchronously.
            </summary>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.StopService">
            <summary>
            Stops the service associated with this component, blocking until complete.
            </summary>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default wait period expired without the service stopping</exception>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.StopServiceAsync">
            <summary>
            Stops the service associated with this component asynchronously.
            </summary>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ServiceComponent.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.DependsOnServices">
            <summary>
            Name of the NT service(s) that this service is dependent on.
            </summary>
            <returns>A collection of the names of services that this service is dependent on.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.MachineName">
            <summary>
            Machine that this service is running on.
            </summary>
            <value>The name of the machine.</value>
            <exception cref="T:System.ArgumentNullException">The MachineName property was not set properly in XML</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.Paused">
            <summary>
            Gets a value indicating whether this the service represented by this component is paused.
            </summary>
            <value><c>true</c> if paused; otherwise, <c>false</c>.</value>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.ProcessRunning">
            <summary>
            Gets a value indicating whether the service process represented by this component is alive.
            </summary>
            <value><c>true</c> if the service process is alive; otherwise, <c>false</c>.</value>
            <exception cref="T:System.ArgumentNullException">The MachineName or ProcessToMonitor property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ProcessToMonitor property is set to an invalid value
            </exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.ProcessToMonitor">
            <summary>
            Name of the process that is monitored by this component.
            </summary>
            <value>The process to monitor.</value>
            <exception cref="T:System.ArgumentNullException">The ProcessToMonitor property was not set properly in XML</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.Running">
            <summary>
            Gets a value indicating whether the service represented by this component is running.
            </summary>
            <value><c>true</c> if the service is running; otherwise, <c>false</c>.</value>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.ServiceName">
            <summary>
            Name of the NT service that this service component represents.
            </summary>
            <value>The name of the service.</value>
            <exception cref="T:System.ArgumentNullException">The ServiceName property was not set properly in XML</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.StartPending">
            <summary>
            Gets a value indicating whether the service represented by this component is starting.
            </summary>
            <value><c>true</c> if the service is starting; otherwise, <c>false</c>.</value>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.StartServiceName">
            <summary>
            Name of the NT service that this component will start.
            </summary>
            <value>The start name of the service.</value>
            <exception cref="T:System.ArgumentNullException">The ServiceName property was not set properly in XML</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.StopPending">
            <summary>
            Gets a value indicating whether the service represented by this component is stopping.
            </summary>
            <value><c>true</c> if the service is stopping; otherwise, <c>false</c>.</value>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.StopServiceName">
            <summary>
            Name of the NT service that this component will stop.
            </summary>
            <value>The name of the stop service.</value>
            <exception cref="T:System.ArgumentNullException">The ServiceName property was not set properly in XML</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ServiceComponent.Stopped">
            <summary>
            True if the service represented by this component is stopped, false otherwise.
            </summary>
            <value><c>true</c> if stopped; otherwise, <c>false</c>.</value>
            <exception cref="T:System.ArgumentNullException">The MachineName or ServiceName property was not set properly in
            XML</exception>
            <exception cref="T:System.ArgumentException">The MachineName or ServiceName property is set to an invalid value
            </exception>
            <exception cref="T:System.ComponentModel.Win32Exception">A failure occurred in the service control manager</exception>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusteredGroupComponent.ClusterGroupNameMoniker">
            <summary>Moniker key identifying the value that contains the cluster group name.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusteredGroupComponent.ClusterNameMoniker">
            <summary>Moniker key identifying the value that contains the cluster virtual name resource.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusteredGroupComponent.ServiceResourceNameMoniker">
            <summary>Moniker key identifying the value that contains the clustered service resource name.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusteredGroupComponent.cluster">
            <summary>The handle to the cluster.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusteredGroupComponent.clusterGroupNameKey">
            <summary>Name of the configuration value that contains the cluster virtual name resource.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusteredGroupComponent.clusterNameKey">
            <summary>Name of the value that contains the cluster group name.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusteredGroupComponent.disposed">
            <summary>Flag to indicate if this component has been displosed.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusteredGroupComponent.groupResource">
            <summary>Handle to the cluster group resource.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusteredGroupComponent.serviceResource">
            <summary>Handle to the cluster service resource.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusteredGroupComponent.serviceResourceNameKey">
            <summary>Name of the configuration value that contains the clustered service resource name.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.#ctor(Microsoft.Test.Environment.DistributedEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.ClusteredGroupComponent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.Finalize">
            <summary>
            Frees the unmanaged resources associated with the cluster group component node before object is
            garbage collected
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.BlockUntilOffline(System.TimeSpan)">
            <summary>
            Blocks until the group resource is taken offline or until the timeout specified expires.
            </summary>
            <param name="timeToWait">Time to wait for the cluster group to be taken offline</param>
            <exception cref="T:System.ServiceProcess.TimeoutException">Timeout period expired before the cluster operation completed</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.BlockUntilOnline(System.TimeSpan)">
            <summary>
            Blocks until the group resource comes online or until the timeout specified expires.
            </summary>
            <param name="timeToWait">Time to wait for the cluster group to come online</param>
            <exception cref="T:System.ServiceProcess.TimeoutException">Timeout period expired before the cluster operation completed</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.BlockUntilStarted(System.TimeSpan)">
            <summary>
            Blocks until the service resource comes online or the timeout period expires.
            </summary>
            <param name="timeToWait">Time to wait before timing out</param>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default timeout period expired before the cluster operation
            completed</exception>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.BlockUntilStopped(System.TimeSpan)">
            <summary>
            Blocks until the service resource comes offline or the timeout period expires.
            </summary>
            <param name="timeToWait">Time to wait before timing out</param>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default timeout period expired before the cluster operation
            completed</exception>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.BringOnline">
            <summary>
            Brings the cluster group this component represents online, blocks until completed.
            </summary>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default timeout period expired before the cluster operation
            completed</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.BringOnlineAsync">
            <summary>
            Brings the cluster group this component represents online, returns immediately.
            </summary>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.BringOnlineOnNode(System.String)">
            <summary>
            Brings the cluster group this component represents online on the specified node, blocks until
            completed.
            </summary>
            <param name="nodeName">Node to use to bring the cluster group online</param>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default timeout period expired before the cluster operation
            completed</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.BringOnlineOnNodeAsync(System.String)">
            <summary>
            Brings the cluster group this component represents online on the specified node, returns
            immediately
            </summary>
            <param name="nodeName">Node to use to bring the cluster group online</param>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting 
            unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.MoveGroup">
            <summary>
            Moves the clustered resource group to the next node in the available nodes list and blocks until
            it has come back online on that node.
            </summary>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default timeout period expired before the cluster operation
            completed</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.MoveGroupAsync">
            <summary>
            Moves the clustered resource group to the next node in the available nodes list and brings it
            online returning immediately.
            </summary>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.MoveGroupToNode(System.String)">
            <summary>
            Moves the clustered resource group to the node specified and blocks until it has come back
            online.
            </summary>
            <param name="nodeName">Node to use to bring the group online</param>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default timeout period expired before the cluster operation completed</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.MoveGroupToNodeAsync(System.String)">
            <summary>
            Moves the clustered resource group to the node specified and brings it online asynchronously.
            </summary>
            <param name="nodeName">Node to move the clustered resource group to.</param>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.StartServiceAsync">
            <summary>
            Attempts to bring the service resource online asynchrnously.
            </summary>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.StopServiceAsync">
            <summary>
            Attempts to take the service resource online asynchrnously.
            </summary>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.TakeOffline">
            <summary>
            Takes the cluster group this component represents offline, blocks until completed
            </summary>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default timeout period expired before the cluster operation
            completed</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.TakeOfflineAsync">
            <summary>
            Takes the cluster group this component represents offline, returns immediately
            </summary>
            <exception cref="T:System.ServiceProcess.TimeoutException">The default timeout period expired before the cluster operation
            completed</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="flag"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release 
            only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.ThrowWrapperWin32Exception(System.String,System.Object[])">
            <summary>
            Extracts information about a native Win32 exception and throws that exception
            wrapped as an application exception.
            </summary>
            <param name="messageFormat">The message format.</param>
            <param name="args">The message arguments.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.ThrowWrapperWin32Exception(System.Int32,System.String,System.Object[])">
            <summary>
            Extracts information about a native Win32 exception and throws that exception
            wrapped as an application exception.
            </summary>
            <param name="win32Result">The Win32 result.</param>
            <param name="messageFormat">The message format.</param>
            <param name="args">The message arguments.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.BringOnlineAsync(System.IntPtr)">
            <summary>
            Brings the online async.
            </summary>
            <param name="nodeHandle">The node handle.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.GetClusterNode(System.String)">
            <summary>
            Gets the cluster node.
            </summary>
            <param name="nodeName">Name of the node.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.InitializeCluster">
            <summary>
            Initializes the handle to cluster represented by this component.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.InitializeGroupResource">
            <summary>
            Initializes the handle to the group resource for the cluster represented by this component.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.InitializeServiceResource">
            <summary>
            Initializes the handle to the service resource for the cluster represented by this component.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ClusteredGroupComponent.MoveGroupAsync(System.IntPtr)">
            <summary>
            Moves the group async.
            </summary>
            <param name="nodeHandle">The node handle.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.ClusterHandle">
            <summary>
            Gets a handle to the cluster represented by this component.
            </summary>
            <value>The cluster handle.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.ClusterName">
            <summary>
            Returns the name of the cluster name resource.
            </summary>
            <value>The name of the cluster.</value>
            <exception cref="T:System.ArgumentNullException">The ClusterName property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.CurrentNode">
            <summary>
            The node that currently owns the resource group
            </summary>
            <value>The current node.</value>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.GroupHandle">
            <summary>
            Gets the handle to the cluster group represented by this component.
            </summary>
            <value>The group handle.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.GroupName">
            <summary>
            The name of this clustered resource group
            </summary>
            <value>The name of the group.</value>
            <exception cref="T:System.ArgumentNullException">The GroupName property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.GroupState">
            <summary>
            Current state of the cluster resource group
            </summary>
            <value>The state of the group.</value>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.Offline">
            <summary>
            Gets a value indicating whether the cluster group is offline.
            </summary>
            <value><c>true</c> if offline; otherwise, <c>false</c>.</value>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.Online">
            <summary>
            True if the cluster group is online, false otherwise.
            </summary>
            <value><c>true</c> if online; otherwise, <c>false</c>.</value>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.Paused">
            <summary>
            Always returns false, paused isn't a valid state for a clustered component.
            </summary>
            <value><c>false</c></value>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.PreferredNode">
            <summary>
            The name of the preferred node for this clustered resource group.
            </summary>
            <value>The preferred node.</value>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.ResourceHandle">
            <summary>
            Gets the handle to the cluster resource represented by this component.
            </summary>
            <value>The resource handle.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.Running">
            <summary>
            Returns true if the service resource is currently online false otherwise
            </summary>
            <value></value>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.ServiceResourceName">
            <summary>
            Returns the name of the service resource
            </summary>
            <value>The name of the service resource.</value>
            <exception cref="T:System.ArgumentNullException">The ServiceResourceName property was not set properly in the configuration for this component.
            </exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.ServiceState">
            <summary>
            Current state of the clustered service resource.
            </summary>
            <value>The state of the service.</value>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.StartPending">
            <summary>
            Returns true if the service resource is currently going online false otherwise
            </summary>
            <value></value>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.StopPending">
            <summary>
            Returns true if the service resource is currently going offline false otherwise
            </summary>
            <value></value>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.Stopped">
            <summary>
            Returns true if the service resource is currently offline false otherwise
            </summary>
            <value></value>
            <exception cref="T:System.ArgumentNullException">A required property was not set properly in the configuration for this component.</exception>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.ClusteredGroupComponent.ValidNodes">
            <summary>
            Lists all the valid nodes for this clustered resource.
            </summary>
            <returns></returns>
            <exception cref="T:System.ApplicationException">A cluster API failed, the failure is wrapped in an application
            exception</exception>
        </member>
        <member name="T:Microsoft.Test.Environment.Collections.ComponentCollection">
            <summary>
            Container for component nodes indexed by the component name.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ComponentCollection.#ctor">
            <summary>
            Allow creation only internally and by derived classes
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ComponentCollection.GetKeyForItem(Microsoft.Test.Environment.Component)">
            <summary>
            When implemented in a derived class, extracts the key from the specified item.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified item.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ComponentCollection.CreateEmptyCopy">
            <summary>
            When implemented in a derived class, creates an empty copy of this collection.
            </summary>
            <returns>
            An empty copy of this collection with the same state except for the items in the collection.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.ConfigurationAlias">
            <summary>
            Represents an alias (macro) for a configuration or component.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ConfigurationAlias.aliasValue">
            <summary>The value for this alias.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ConfigurationAlias.configuration">
            <summary>The parent configuration for this alias.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ConfigurationAlias.evaluator">
            <summary>The instance used to evaluate references in values.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ConfigurationAlias.name">
            <summary>The name of this alias.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ConfigurationAlias.parentComponent">
            <summary>The parent component for this configuration alias.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ConfigurationAlias.#ctor(Microsoft.Test.Environment.DistributedEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.ConfigurationAlias"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ConfigurationAlias.Initialize(System.String,System.String)">
            <summary>
            Initializes this component with from a name-value pair.
            </summary>
            <param name="aliasName">The name or key for this component.</param>
            <param name="initializer">The initialization value for this component.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ConfigurationAlias.AliasEvaluator(System.String)">
            <summary>
            Retrieves the value of the specified alias reference from the parent configuration alias list.
            </summary>
            <param name="aliasName">The name of the alias.</param>
            <returns>The alias value or <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ConfigurationAlias.AssociateWithParent">
            <summary>
            Adds an entry for this property to the parent configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ConfigurationAlias.EnvironmentEvaluator(System.String)">
            <summary>
            Retrieves the value of the specified environment variable from the environment.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <returns>The variable value or <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ConfigurationAlias.EvaluatorSink(System.String)">
            <summary>
            Terminating evaluator. Throws an exception since invocation of this evaluator in the 
            macro evaluator chain indicates that the reference was not found.
            </summary>
            <param name="aliasName">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ConfigurationAlias.ExpandValue(System.String)">
            <summary>
            Expands the specified text by substituting macro references.
            </summary>
            <param name="text">Original (unexpanded) value</param>
            <returns><paramref name="text"/> expanded by replacing embedded macro references recursively.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ConfigurationAlias.UnassociateFromParent">
            <summary>
            Removes the entry for this property from the parent configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.ConfigurationAlias.Configuration">
            <summary>
            Gets the parent configuration for this alias.
            </summary>
            <value>The parent configuration.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ConfigurationAlias.Value">
            <summary>
            Gets the expanded value for this alias.
            </summary>
            <value>The expanded value.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ConfigurationAlias.Name">
            <summary>
            Identifier for this alias
            </summary>
            <value>The alias.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ConfigurationAlias.Parent">
            <summary>
            Gets or sets the parent component for this component property.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ConfigurationAlias.RawValue">
            <summary>
            Substitution value for this alias
            </summary>
            <value>The alias value.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Collections.ConfigurationAliasCollection">
            <summary>
            Container for configuration aliases
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ConfigurationAliasCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Collections.ConfigurationAliasCollection"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ConfigurationAliasCollection.GetKeyForItem(Microsoft.Test.Environment.ConfigurationAlias)">
            <summary>
            When implemented in a derived class, extracts the key from the specified item.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified item.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ConfigurationAliasCollection.CreateEmptyCopy">
            <summary>
            When implemented in a derived class, creates an empty copy of this collection.
            </summary>
            <returns>
            An empty copy of this collection with the same state except for the items in the collection.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.WildcardResolver">
            <summary>
            Resolves wildcard URIs in XInclude elements when processing an XML document.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.WildcardResolver.W3XIncludeNamespace">
            <summary>The XML Inclusions XML namespace.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.WildcardResolver.evaluator">
            <summary>The macro evaluator used to resolve environment variable references in URIs</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.WildcardResolver.defaultResolver">
            <summary>The default <see cref="T:System.Xml.XmlResolver"/> instance used to resolve URIs that this instance does not process.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.WildcardResolver.rootElementName">
            <summary>The name of the root element for XML documents generated in-memory for wildcard inclusions.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.WildcardResolver.rootElementNamespace">
            <summary>The namespace of the root element for XML documents generated in-memory for wildcard inclusions.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.WildcardResolver.trackedEntities">
            <summary>Queue to track entities returned by the <see cref="M:GetEntity"/> method.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WildcardResolver"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.EnvironmentEvaluator(System.String)">
            <summary>
            Retrieves the value of the specified environment variable from the environment.
            </summary>
            <param name="name">The name of the variable.</param>
            <returns>The variable value or <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.EvaluatorSink(System.String)">
            <summary>
            Terminating evaluator. Throws an exception since invocation of this evaluator in the 
            macro evaluator chain indicates that the reference was not found.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.ResolveUri(System.Uri,System.String)">
            <summary>
            When overridden in a derived class, resolves the absolute URI from the base and relative URIs.
            </summary>
            <param name="baseUri">The base URI used to resolve the relative URI</param>
            <param name="relativeUri">The URI to resolve. The URI can be absolute or relative. If absolute, 
            this value effectively replaces the <paramref name="baseUri"/> value. If relative, it combines with the 
            <paramref name="baseUri"/> to make an absolute URI.</param>
            <returns>
            A <see cref="T:System.Uri"/> representing the absolute URI or null if the relative URI cannot be resolved.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="relativeUri"/> is null</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.GetEntity(System.Uri,System.String,System.Type)">
            <summary>
            When overridden in a derived class, maps a URI to an object containing the actual resource.
            </summary>
            <param name="absoluteUri">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)"/>.</param>
            <param name="role">The current version does not use this parameter when resolving URIs. This is provided for future extensibility purposes. 
            For example, this can be mapped to the xlink:role and used as an implementation specific argument in other scenarios.</param>
            <param name="ofObjectToReturn">The type of object to return. The current version only returns System.IO.Stream objects.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> object or <c>null</c> if a type other than stream is specified.
            </returns>
            <exception cref="T:System.Xml.XmlException"><paramref name="ofObjectToReturn"/> is not a <see cref="T:System.IO.Stream"/> type.</exception>
            <exception cref="T:System.UriFormatException">The specified URI is not an absolute URI.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="absoluteUri"/> is null.</exception>
            <exception cref="T:System.Exception">
            There is a runtime error (for example, an interrupted server connection).
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.Track(System.Object)">
            <summary>
            Tracks the specified entity.
            </summary>
            <param name="entity">The entity to track.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.Finish">
            <summary>
            Cleans up all tracked entities.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.GetEntity(System.Uri,System.String[])">
            <summary>
            Generates an in-memory XML fragment or document that contains all the listed files in <paramref name="files"/>.
            </summary>
            <param name="absoluteUri">The absolute URI of the base document.</param>
            <param name="files">The array of files to generate XIncludes to.</param>
            <returns>An instance of <see cref="T:System.Xml.XmlReader"/> or <see cref="T:System.IO.Stream"/> to read the resource.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.GenerateXml(System.String[])">
            <summary>
            Generates a string containing either an XML document or an XML fragment containing XInclude' elements for the each of the specified
            files in <paramref name="files"/>.
            </summary>
            <param name="files">The files to xinclude.</param>
            <returns>The XML string.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.HasWildcards(System.String)">
            <summary>
            Determines whether the specified path has wildcard characters.
            </summary>
            <param name="path">The path to check.</param>
            <returns>
            	<c>true</c> if the specified path has wildcard characters; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.IsDirectory(System.String)">
            <summary>
            Determines whether the specified path is a directory and not a file.
            </summary>
            <param name="path">The path to check.</param>
            <returns>
            	<c>true</c> if the specified path is a directory; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.GetNameTable">
            <summary>
            Gets an instance of <see cref="T:System.Xml.XmlNameTable"/> to use to ensure that an instance of <see cref="T:GotDotNet.XInclude.XIncludingReader"/>
            recognizes the XInclude elements and attributes in a generated in-memory fragment resulting from wildcard URIs
            in XInclude href attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.GetFragmentReaderSettings(System.Xml.XmlNameTable)">
            <summary>
            Gets an instance of <see cref="T:System.Xml.XmlReaderSettings"/> to read XML fragments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.Evaluate(System.String)">
            <summary>
            Evaluates a path containing wildcards into a fully resolved list of files.
            </summary>
            <param name="path">The path to evaluate.</param>
            <returns>An enumeration of the all the files that match the specified path.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.Parse(System.String)">
            <summary>
            Parses a path containing wildcards into a sequence of strings that represent the individual
            components of the path.
            </summary>
            <param name="path">The path to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.WildcardResolver.NormalizePath(System.String)">
            <summary>
            Normalizes the specified path by removing redundant dots, slashes and 
            </summary>
            <param name="path">The path to normalize.</param>
            <returns>The normalized path.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.WildcardResolver.RootElementName">
            <summary>
            Gets or sets the name of the root element for the XIncudes generated in-memory from 
            wildcards.
            </summary>
            <value>The name of the root element.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.WildcardResolver.RootElementNamespace">
            <summary>
            Gets or sets the namespace of the root element for the XIncudes generated in-memory from 
            wildcards.
            </summary>
            <value>The namespace of the root element.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.WildcardResolver.GenerateDocument">
            <summary>
            Gets or sets a value indicating whether this xincludes generated from wildcard URIs should
            be placed into a document element. The default is to generate a XML fragment only.
            </summary>
            <value><c>true</c> if a document element should be generated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.WildcardResolver.Credentials">
            <summary>
            When overridden in a derived class, sets the credentials used to authenticate Web requests.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Net.ICredentials"/> object. If this property is not set, 
            the value defaults to null; that is, the XmlResolver has no user credentials.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.Moniker">
            <summary>
            Configuration initialization hash built from moniker string.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Moniker.DefaultKeyValueDelimiter">
            <summary>The default separator between a key and its value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Moniker.DefaultParameterDelimiter">
            <summary>The default separator between two key-value pairs.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Moniker.keyComparer">
            <summary>The comparer used to compare keys.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Moniker.keyValuePairs">
            <summary>The underlying dictionary that this moniker provides a wrapper around.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Moniker"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Moniker"/> class.
            </summary>
            <param name="source">The source from key value pairs have to be copied.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Moniker"/> class.
            </summary>
            <param name="keyComparer">The key comparer.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.Add(System.String,System.String)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IDictionary{K,V}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.Add(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection{T}"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection{T}"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary{K,V}"/> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary{K,V}"/> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection{T}"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection{T}"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection{T}"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.FromMonikerString(System.String)">
            <summary>
            Parses a moniker string into key value pairs and adds them to this dictionary.
            </summary>
            <param name="initializationValue">The initialization string to parse.</param>
            <returns>
            	<c>true</c> if the string was parsed properly; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.FromMonikerString(System.String,System.Char,System.Char)">
            <summary>
            Parses a moniker string into key value pairs and adds them to this dictionary.
            </summary>
            <param name="initializationValue">The initialization string to parse.</param>
            <param name="keyValueDelimiter">Delimiter between a key and its value</param>
            <param name="parameterDelimiter">Delimiter between each moniker key/value pair</param>
            <returns>
            	<c>true</c> if the string was parsed properly; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator{T}"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.Merge(Microsoft.Test.Environment.Moniker)">
            <summary>
            Merges all key-value pairs in the source moniker into this moniker replacing 
            existing keys with new values from the specified source.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key"/> was not found in the original <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IDictionary{K,V}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection{T}"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.ToMonikerString">
            <summary>
            Returns all key-value pairs in this moniker as a parseable moniker string.
            </summary>
            <returns>A parseable moniker string of all key-value pairs in this dictionary.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.ToMonikerString(System.Char,System.Char)">
            <summary>
            Returns all key-value pairs in this moniker as a parseable moniker string.
            </summary>
            <returns>A parseable moniker string of all key-value pairs in this dictionary.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Moniker.TryGetValue(System.String,System.String@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.</param>
            <returns>
            true if the object that implements <see cref="T:System.Collections.Generic.IDictionary{K,V}"/> contains an element with the specified key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
        </member>
        <member name="P:Microsoft.Test.Environment.Moniker.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Moniker.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Moniker.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection{T}"/> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection{T}"/> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Moniker.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection{T}"/> containing the values in the <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection{T}"/> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary{K,V}"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Moniker.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.String"/> with the specified key.
            </summary>
            <value>The value for the specified key if it is found, otherwise <see cref="F:String.Empty"/></value>
        </member>
        <member name="T:Microsoft.Test.Environment.ComponentProperty">
            <summary>
            Represents a name-value pair in a configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ComponentProperty.AliasDelimiter">
            <summary>Delimiter that surrounds an alias reference in a value string</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ComponentProperty.currentValue">
            <summary>The current value for this component property.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ComponentProperty.evaluator">
            <summary>The instance used to evaluate references in values.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ComponentProperty.name">
            <summary>The name of this component property.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ComponentProperty.originalValue">
            <summary>The original value for this component property.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ComponentProperty.parentComponent">
            <summary>The parent component for this component property.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.ComponentProperty"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.Initialize(System.String,System.String)">
            <summary>
            Initializes this component property with the given name and value.
            </summary>
            <param name="propertyName">Name of the this component property.</param>
            <param name="initializer">The initialization value.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.OnInitialized">
            <summary>
            Called after initialization is done to allow finalization of initialization after other
            dependencies have been created.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.OnInitializing">
            <summary>
            Called before load is performed to allow pre-load initialization.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.Revert(System.Object)">
            <summary>
            Reverts the value of this property to the original value. This method is used by the
            transaction manager to rollback to restore property values when a changeset is rolled back.
            </summary>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.AssociateWithParent">
            <summary>
            Adds an entry for this property to the parent component.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.ExpandValue(System.String)">
            <summary>
            Expands the value string with aliases and referenced component node values
            </summary>
            <param name="original">Original (unexpanded) value</param>
            <returns>
            The new value string with expanded values
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the 
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.SetInitialValue(System.Object)">
            <summary>
            Sets the original and current value of this component property to the
            specified value.
            </summary>
            <param name="value">The original value.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.UnassociateFromParent">
            <summary>
            Removes the entry for this property from the parent component.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.UpdateValueInternal(System.Object)">
            <summary>
            When implemented in a derived class persists the value of this component property
            to the underlying datastore.
            </summary>
            <remarks>Invoked by the <see cref="M:UpdateValueTransactional"/> method to update the value
            for this configuration value as part of the transaction.</remarks>
            <param name="value">The value.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.UpdateValueTransactional(System.Object)">
            <summary>
            Performs a transactional write to a component property.
            </summary>
            <param name="data">Data to write</param>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.EnvironmentEvaluator(System.String)">
            <summary>
            Retrieves the value of the specified environment variable from the environment.
            </summary>
            <param name="variableName">The name of the variable.</param>
            <returns>The variable value or <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.EvaluatorSink(System.String)">
            <summary>
            Terminating evaluator. Throws an exception since invocation of this evaluator in the 
            macro evaluator chain indicates that the reference was not found.
            </summary>
            <param name="aliasName">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.ParentAliasEvaluator(System.String)">
            <summary>
            Retrieves the value of the specified alias reference from the parent alias list.
            </summary>
            <param name="aliasName">The name of the alias.</param>
            <returns>The alias value or <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.ParentConfigurationAliasEvaluator(System.String)">
            <summary>
            Retrieves the value of the specified alias reference from the parent configuration alias list.
            </summary>
            <param name="aliasName">The name of the alias.</param>
            <returns>The alias value or <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.ComponentProperty.ParentPropertyEvaluator(System.String)">
            <summary>
            Retrieves the value of the specified property reference from the parent component properties.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns>The property value or <c>null</c>.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.ComponentProperty.Configuration">
            <summary>
            Gets the parent configuration that contains this value as a descendent.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ComponentProperty.IsModified">
            <summary>
            Gets a value indicating whether the value for thiscomponent property has been modified.
            </summary>
            <value><c>true</c> if the current value of this component property is different from the original value; 
            otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ComponentProperty.IsReadOnly">
            <summary>
            Gets a value indicating whether this component property is read-only.
            </summary>
            <value>
            	<c>true</c> if this component property is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.ComponentProperty.IsValid">
            <summary>
            Determines whether this instance was setup correctly.
            </summary>
            <returns>
            	<c>true</c> if this component property was setup correctly; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.ComponentProperty.ItemPath">
            <summary>
            Gets the path to this property from the root environment object.
            </summary>
            <value>The path to this entity.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ComponentProperty.Name">
            <summary>
            Name associated with this component property
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ComponentProperty.OriginalValue">
            <summary>
            Gets the original value for this component property.
            </summary>
            <value>The original value.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ComponentProperty.Parent">
            <summary>
            Gets or sets the parent component for this component property.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ComponentProperty.Value">
            <summary>
            Gets or sets the current value for thiscomponent property.
            </summary>
            <remarks>
            Using the set method to set the value of this component property will be a transactional
            operation. The <see cref="M:TransactionManager.BeginChanges"/> must be invoked before
            any property values are updated to ensure that a change set is initiated.
            </remarks>
            <value>The current value.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.ComponentProperty.DebugDisplayValue">
            <summary>
            Gets the value to display in the debugger.
            </summary>
            <value>The debug display value.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Collections.ComponentPropertyCollection">
            <summary>
            A container for component properties keyed by the property name.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Collections.ComponentPropertyCollection.parentComponent">
            <summary>The parent component for this component property.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ComponentPropertyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Collections.ComponentPropertyCollection"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ComponentPropertyCollection.Add(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The key for <paramref name="item"/> already exists.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ComponentPropertyCollection.Remove(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection{T}"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ComponentPropertyCollection.AddToMultiValueNodeCollection(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            If the key for the specified configuration value is a multiple configuration value collection
            then adds the specified configuration value to that collection.
            </summary>
            <param name="value">The value to add.</param>
            <returns><c>true</c> if the key for the specified value is a multiple configuration value collection; <c>false</c>, otherwise.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ComponentPropertyCollection.GetKeyForItem(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            When implemented in a derived class, extracts the key from the specified item.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified item.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ComponentPropertyCollection.RemoveFromMultiValueNodeCollection(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            If the key for the specified configuration value is a multiple configuration value collection
            then removes the specified configuration value from that collection.
            </summary>
            <param name="value">The value to remove.</param>
            <returns><c>true</c> if the key for the specified value is a multiple configuration value collection; <c>false</c>, otherwise.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ComponentPropertyCollection.CreateEmptyCopy">
            <summary>
            When implemented in a derived class, creates an empty copy of this collection.
            </summary>
            <returns>
            An empty copy of this collection with the same state except for the items in the collection.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.ComponentPropertyCollection.Parent">
            <summary>
            Gets or sets the parent component for this component property.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.ClusterGroupEnumeration">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterGroupEnumeration.ClusterGroupEnumContains">
            <summary></summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterGroupEnumeration.ClusterGroupEnumNodes">
            <summary></summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterGroupEnumeration.ClusterGroupEnumAll">
            <summary></summary>
        </member>
        <member name="T:Microsoft.Test.Environment.ClusterGroupState">
            <summary>
            Enumeration that describes the current state of a clustered group.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterGroupState.Unknown">
            <summary>Cluster group state was unable to be retrieved or is erroneous.  </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterGroupState.ClusterGroupOnline">
            <summary>The cluster group is currently online</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterGroupState.ClusterGroupOffline">
            <summary>The cluster group is currently offline</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterGroupState.ClusterGroupFailed">
            <summary>The cluster group has failed (and is offline)</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterGroupState.ClusterGroupPartialOnline">
            <summary>The cluster group is partially online, one or more resources are currently offline</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterGroupState.ClusterGroupPending">
            <summary>The cluster group is online pending</summary>
        </member>
        <member name="T:Microsoft.Test.Environment.ClusterResourceState">
            <summary>
            Enumeration describing the state of a particular clustered resource.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterResourceState.Unknown">
            <summary>The cluster resource state was unable to be retrieved or is erroneous</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterResourceState.ClusterResourceInherited">
            <summary>The cluster resource state is inherited from another resource.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterResourceState.ClusterResourceInitializing">
            <summary>The cluster resource is initializing</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterResourceState.ClusterResourceOnline">
            <summary>The cluster resource is online</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterResourceState.ClusterResourceOffline">
            <summary>The cluster resource is offline</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterResourceState.ClusterResourceFailed">
            <summary>The cluster resource has failed</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterResourceState.ClusterResourcePending">
            <summary>The cluster resource is in a pending state</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterResourceState.ClusterResourceOnlinePending">
            <summary>The cluster resource is online pending</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterResourceState.ClusterResourceOfflinePending">
            <summary>The cluster resource is offline pending</summary>
        </member>
        <member name="T:Microsoft.Test.Environment.ClusterReturns">
            <summary>
            Return values returned by the Win32 cluster API.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterReturns.ErrorSuccess">
            <summary></summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterReturns.ErrorIOPending">
            <summary></summary>
        </member>
        <member name="F:Microsoft.Test.Environment.ClusterReturns.ErrorMoreData">
            <summary></summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.MacroEvaluator">
            <summary>
            Provides behavior to evaluate a string with embedded macro references.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.MacroEvaluator.evaluators">
            <summary>The function to invoke to evaluate a macro reference.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.MacroEvaluator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MacroParser"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.MacroEvaluator.Expand(System.String)">
            <summary>
            Expands the specified input by replacing macro references recursively.
            </summary>
            <param name="input">The input string to expand.</param>
            <returns>A string in which all macro references are replaced with the macros expanded value.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.MacroEvaluator.Parse(System.String)">
            <summary>
            Parses the specified input string into a sequence of <see cref="T:Microsoft.Test.Environment.Parser.MacroLexerToken"/> 
            instances. 
            </summary>
            <param name="input">The input string to parse.</param>
            <returns>A <see cref="T:System.Collections.Generic.ICollection{T}"/> of <see cref="T:Microsoft.Test.Environment.Parser.MacroLexerToken"/> instances.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.MacroEvaluator.ExpandRecursive(System.String,Microsoft.Test.Environment.Parser.MacroLexerToken)">
            <summary>
            Evaluates the specified macro reference.
            </summary>
            <param name="macroName">The name of the macro to evaluate.</param>
            <param name="originalToken">The original token that is being evaluated.</param>
            <returns>The evaluated macro value.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.MacroEvaluator.ExpandRecursive(System.String,System.Collections.Generic.List{System.String},Microsoft.Test.Environment.Parser.MacroLexerToken)">
            <summary>
            Evaluates the specified macro reference.
            </summary>
            <param name="macroName">The name of the macro to evaluate.</param>
            <param name="originalToken">The original token that is being evaluated.</param>
            <param name="referenceChain">The macro reference chain to use to detect cycles.</param>
            <returns>The evaluated macro value.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.MacroEvaluator.ExpandSingle(System.String)">
            <summary>
            Walks through the list of single macro value evaluators and retrieves
            the first value that is not <c>null</c>.
            </summary>
            <param name="macroName">The name of the macro whose value is to be retrieved.</param>
            <returns>The value of the macro.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.MacroEvaluator.Evaluators">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IList{T}"/> of functions
            to invoke to evaluate a macro reference.
            </summary>
            <remarks>
            If a macro reference cannot be resolved, the last evaluator in the chain
            must thrown an exception. If a macro value is <c>null</c>, then <see cref="F:String.Empty"/>
            must be returned.
            </remarks>
            <value>The reference evaluator(s).</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.Token">
            <summary>
            Summary Canonical example of MPLEX automaton
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.Token.EndOfFile">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.Token.MaxParseToken">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.IColorScan">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.IColorScan.GetNext(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the next.
            </summary>
            <param name="state">The state.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.IColorScan.SetSource(System.String,System.Int32)">
            <summary>
            Sets the source.
            </summary>
            <param name="source">The source.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.ScanBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.ScanBase.yylex">
            <summary>
            Yylexes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.ScanBase.EolState">
            <summary>
            Gets or sets the state of the eol.
            </summary>
            <value>The state of the eol.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.ScanBase.CurrentSc">
            <summary>
            Gets or sets the current sc.
            </summary>
            <value>The current sc.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.ScanBuff">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.ScanBuff.EOF">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.ScanBuff.GetString(System.Int32,System.Int32)">
            <summary>
            Gets the string.
            </summary>
            <param name="b">The b.</param>
            <param name="e">The e.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.ScanBuff.Peek">
            <summary>
            Peeks this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.ScanBuff.Read">
            <summary>
            Reads this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.ScanBuff.Pos">
            <summary>
            Gets or sets the pos.
            </summary>
            <value>The pos.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.ScanBuff.ReadPos">
            <summary>
            Gets the read pos.
            </summary>
            <value>The read pos.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.Scanner">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.Scanner.buffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Parser.Scanner"/> class.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Parser.Scanner"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.GetNext(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the next.
            </summary>
            <param name="currentState">The state.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.SetSource(System.String,System.Int32)">
            <summary>
            Sets the source.
            </summary>
            <param name="source">The source.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.yylex">
            <summary>
            Yylexes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.Scanner.Handler">
            <summary>
            Gets or sets the handler.
            </summary>
            <value>The handler.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.Scanner.yytext">
            <summary>
            Gets the yytext.
            </summary>
            <value>The yytext.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.Scanner.CurrentSc">
            <summary>
            Gets or sets the current sc.
            </summary>
            <value>The current sc.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.Scanner.BigEndTextBuff">
            <summary>
            This is the Buffer for Big-endian UTF16 files.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.Scanner.TextBuff">
            <summary>
            This is the Buffer for UTF8 files.
            It attempts to read the encoding preamble, which for 
            this encoding should be unicode point \uFEFF which is 
            encoded as EF BB BF
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.Scanner.TextBuff.bufferedStream">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.Scanner.TextBuff.delta">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.TextBuff.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Parser.Scanner.TextBuff"/> class.
            </summary>
            <param name="stream">The STR.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.TextBuff.Dispose(System.Boolean)">
            <summary>
            Disposes of the object.
            </summary>
            <param name="disposing">Whether or not the object is disposing.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.TextBuff.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.TextBuff.NewTextBuff(System.IO.Stream)">
            <summary>
            TextBuff factory.  Reads the file preamble
            and returns a TextBuff, LittleEndTextBuff or
            BigEndTextBuff according to the result.
            </summary>
            <param name="stream">The underlying stream</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.TextBuff.GetString(System.Int32,System.Int32)">
            <summary>
            Returns the string from the buffer between
            the given file positions.  This needs to be
            done carefully, as the number of characters
            is, in general, not equal to (end - beg).
            </summary>
            <param name="b">Begin filepos</param>
            <param name="e">End filepos</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.TextBuff.Peek">
            <summary>
            Peeks this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.TextBuff.Read">
            <summary>
            Reads this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.Scanner.TextBuff.Pos">
            <summary>
            Gets or sets the pos.
            </summary>
            <value>The pos.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.Scanner.TextBuff.ReadPos">
            <summary>
            Gets the read pos.
            </summary>
            <value>The read pos.</value>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.BigEndTextBuff.Read">
            <summary>
            Reads this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.Scanner.LittleEndTextBuff">
            <summary>
            This is the Buffer for Little-endian UTF16 files.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.LittleEndTextBuff.Read">
            <summary>
            Reads this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.Scanner.StreamBuff">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.StreamBuff.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Parser.Scanner.StreamBuff"/> class.
            </summary>
            <param name="str">The STR.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.StreamBuff.Dispose(System.Boolean)">
            <summary>
            Disposes of the object.
            </summary>
            <param name="disposing">Whether or not the object is disposing.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.StreamBuff.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.StreamBuff.GetString(System.Int32,System.Int32)">
            <summary>
            Gets the string.
            </summary>
            <param name="beg">The beg.</param>
            <param name="end">The end.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.StreamBuff.Peek">
            <summary>
            Peeks this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.StreamBuff.Read">
            <summary>
            Reads this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.Scanner.StreamBuff.Pos">
            <summary>
            Gets or sets the pos.
            </summary>
            <value>The pos.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.Scanner.StreamBuff.ReadPos">
            <summary>
            Gets the read pos.
            </summary>
            <value>The read pos.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.Scanner.StringBuff">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.StringBuff.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Parser.Scanner.StringBuff"/> class.
            </summary>
            <param name="str">The STR.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.StringBuff.GetString(System.Int32,System.Int32)">
            <summary>
            Gets the string.
            </summary>
            <param name="beg">The beg.</param>
            <param name="end">The end.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.StringBuff.Peek">
            <summary>
            Peeks this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.Scanner.StringBuff.Read">
            <summary>
            Reads this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.Scanner.StringBuff.Pos">
            <summary>
            Gets or sets the pos.
            </summary>
            <value>The pos.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.Scanner.StringBuff.ReadPos">
            <summary>
            Gets the read pos.
            </summary>
            <value>The read pos.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.MacroLexerToken">
            <summary>
            Represents a token scanned by the macro lexer. Contains data about the scanned token
            such as start position, end position, text and type of the token.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.MacroLexerToken.end">
            <summary>The ending column of this token.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.MacroLexerToken.start">
            <summary>The starting column of this token.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.MacroLexerToken.text">
            <summary>The text for this token.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.MacroLexerToken.type">
            <summary>The type of this token.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Parser.MacroLexerToken.#ctor(Microsoft.Test.Environment.Parser.MacroTokenType,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Parser.MacroLexerToken"/> class.
            </summary>
            <param name="type">The type of the token.</param>
            <param name="text">The token text.</param>
            <param name="start">The starting column of the token.</param>
            <param name="end">The ending column of the token.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.MacroLexerToken.End">
            <summary>
            Gets the ending column position for this token.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.MacroLexerToken.Start">
            <summary>
            Gets the starting column position for this token.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.MacroLexerToken.Text">
            <summary>
            Gets the text for this token.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Parser.MacroLexerToken.MacroTokenType">
            <summary>
            Gets the type of this token.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Parser.MacroTokenType">
            <summary>
            The type of the token in a string with embedded macro references.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.MacroTokenType.None">
            <summary>Represents a string. No special handling required. Copied to output as is.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.MacroTokenType.Macro">
            <summary>Represents a macro reference. Resolved to the appropriate value dynamically.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Parser.MacroTokenType.EndOfFile">
            <summary>Represents end of input.</summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Transactions.AutoChangeScope">
            <summary>
            A disposable object that invokes the <see cref="M:ITransactionManager.RevertChanges"/>
            method when it is disposed. An instance of this object is returned by  
            <see cref="M:ITransactionManager.BeginChanges"/>
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.AutoChangeScope.manager">
            <summary>The transaction manager.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.AutoChangeScope.disposeType">
            <summary>The disposal time operation to be performed.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.AutoChangeScope.isDisposed">
            <summary>Flag to indicate if dispose has already been invoked.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.AutoChangeScope.#ctor(Microsoft.Test.Environment.Transactions.ITransactionManager,Microsoft.Test.Environment.Transactions.DisposeType)">
            <summary>
            Initializes a new instance of the <see cref="T:AutoRevertedChangeScope"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.AutoChangeScope.Dispose(System.Boolean)">
            <summary>
            Disposes of the object.
            </summary>
            <param name="disposing">Whether or not the object is disposing.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.AutoChangeScope.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Transactions.ChangeSet">
            <summary>
            A changeset is effectively a collection of transactions and a level indicating the
            depth of the changeset when changes are nested.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.ChangeSet.id">
            <summary>The unique ID for this changeset.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ChangeSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChangeSet"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ChangeSet.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ChangeSet.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ChangeSet.GetKeyForItem(Microsoft.Test.Environment.Transactions.Transaction)">
            <summary>
            When implemented in a derived class, extracts the key from the specified item.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified item.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ChangeSet.CreateEmptyCopy">
            <summary>
            When implemented in a derived class, creates an empty copy of this collection.
            </summary>
            <returns>
            An empty copy of this collection with the same state except for the items in the collection.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ChangeSet.Id">
            <summary>
            Gets the unique ID for this changeset.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Transactions.DisposeType">
            <summary>
            Represents the type of disposal operation performed by an instance of 
            <see cref="T:Microsoft.Test.Environment.Transactions.AutoChangeScope"/>
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.DisposeType.Persist">
            <summary>
            Indicates that the <see cref="M:ITransactionManager.PersistChanges"/>
            method must be invoked when an instance of <see cref="T:Microsoft.Test.Environment.Transactions.AutoChangeScope"/>
            is disposed.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.DisposeType.Revert">
            <summary>
            Indicates that the <see cref="M:ITransactionManager.RevertChanges"/>
            method must be invoked when an instance of <see cref="T:Microsoft.Test.Environment.Transactions.AutoChangeScope"/>
            is disposed.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Transactions.XmlTransactionLog">
            <summary>
            A transaction log that stores transaction details to a XML file.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.XmlTransactionLog.EntryElementName">
            <summary>The name of the element that contains data about a single transaction.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.XmlTransactionLog.PathAttributeName">
            <summary>The name of the attribute that contains the path to the item being modified.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.XmlTransactionLog.RootElementName">
            <summary>The name of the root element in the XML transaction log.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.XmlTransactionLog.TimestampAttributeName">
            <summary>The name of the attribute that contains the timestamp when the change was made.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.XmlTransactionLog.databaseName">
            <summary></summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.XmlTransactionLog.document">
            <summary></summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.XmlTransactionLog.initialized">
            <summary></summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.XmlTransactionLog.location">
            <summary></summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.XmlTransactionLog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmlTransactionLog"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.XmlTransactionLog.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Microsoft.Test.Environment.Transactions.XmlTransactionLog"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.XmlTransactionLog.Recover(System.String,Microsoft.Test.Environment.DistributedEnvironment)">
            <summary>
            Walks through all transactions in the specified transaction log file and
            restores the value of each item whose value was modified to the original
            value.
            </summary>
            <param name="txLogFilePath">The path to the transaction log file.</param>
            <param name="environment">The environment instance to locate items in.</param>
            <remarks>
            	<see cref="P:DistributedEnvironment.TransactionLogFiles"/> is a collection
            of the last <see cref="F:DistributedEnvironment.MaxMruEntries"/> number of log files ordered
            by the earliest to the latest. Note that <see cref="P:DistributedEnvironment.IsReadOnly"/> of
            <paramref name="environment"/> must return <c>true</c> in order for this method to proceed.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.XmlTransactionLog.Add(Microsoft.Test.Environment.Transactions.ITransaction)">
            <summary>
            Adds data about the specified transaction to the transaction log.
            </summary>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.XmlTransactionLog.Initialize">
            <summary>
            Initializes this transaction log.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.XmlTransactionLog.Remove(Microsoft.Test.Environment.Transactions.ITransaction)">
            <summary>
            Removes data about the specified transaction from the transaction log.
            </summary>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.XmlTransactionLog.Uninitialize">
            <summary>
            Tears down this transaction log.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.XmlTransactionLog.SamePath(System.Xml.Linq.XElement,Microsoft.Test.Environment.Transactions.ITransaction)">
            <summary>
            Determines if the path in the specified transaction log entry is the same as the path in the specified transaction entry.
            </summary>
            <param name="entry">The transaction log entry.</param>
            <param name="tx">The transaction.</param>
            <returns><c>true</c> if the paths are equal; <c>false</c>, otherwise.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.XmlTransactionLog.SameTime(System.Xml.Linq.XElement,Microsoft.Test.Environment.Transactions.ITransaction)">
            <summary>
            Determines if the timestamp in the specified transaction log entry is the same as the timestamp in the specified transaction entry.
            </summary>
            <param name="entry">The transaction log entry.</param>
            <param name="tx">The transaction.</param>
            <returns><c>true</c> if the paths are equal; <c>false</c>, otherwise.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.XmlTransactionLog.DatabaseFileName">
            <summary>
            Gets the name of the database file.
            </summary>
            <value>The name of the database file.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.XmlTransactionLog.DatabaseName">
            <summary>
            Gets or sets the name of the transaction log database.
            </summary>
            <value>The database name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.XmlTransactionLog.IsInitialized">
            <summary>
            Gets a value indicating whether this transaction log has been initialized.
            </summary>
            <value>
            	<c>true</c> if this transaction log has been initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.XmlTransactionLog.Location">
            <summary>
            Gets or sets the folder where the database files are placed.
            </summary>
            <value>The folder.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Transactions.ITransaction">
            <summary>
            Represents a transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ITransaction.EndTransaction">
            <summary>
            Ends this transaction. If this transaction is marked finished by an invocation of <see cref="M:FinishTransaction"/>
            then the transaction record is persisted. Otherwise, the transaction record is discarded.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ITransaction.FinishTransaction">
            <summary>
            Marks this transaction as finished.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ITransaction.CreateTime">
            <summary>
            Gets the timestamp at which this transaction was created.
            </summary>
            <value>The timestamp.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ITransaction.FinishTime">
            <summary>
            Gets the timestamp at which this transaction was finished
            </summary>
            <value>The timestamp.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ITransaction.Id">
            <summary>
            Gets the unique ID for this transaction.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ITransaction.IsEnded">
            <summary>
            Gets a value indicating whether this transaction has ended.
            This is achieved by invoking the <see cref="M:RevertChanges"/> method at least once.
            </summary>
            <value>
            	<c>true</c> if this transaction has ended; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ITransaction.IsFinished">
            <summary>
            Gets a value indicating whether this transaction is finished.
            This is achieved by invoking the <see cref="M:FinishTransaction"/> method at least once.
            </summary>
            <value>
            	<c>true</c> if this transaction is finished; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ITransaction.Path">
            <summary>
            Gets the path to the item whose value is being changed.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ITransaction.StartTime">
            <summary>
            Gets the timestamp at which this transaction was started
            </summary>
            <value>The timestamp.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ITransaction.TransactionManager">
            <summary>
            Gets the transaction manager that created this transaction.
            </summary>
            <value>The transaction manager.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ITransaction.Value">
            <summary>
            Gets the current value of the item whose value is being changed.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Transactions.ITransactionManager">
            <summary>
            Basic interface implemented by a transaction manager.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ITransactionManager.BeginChanges">
            <summary>
            Begins a new changeset.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ITransactionManager.Create(System.String,System.Object)">
            <summary>
            Creates a new transaction instance.
            </summary>
            <returns>An instance of <see cref="T:ITransaction"/></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ITransactionManager.PersistChanges">
            <summary>
            Ends the current changeset but does not revert any of the changes made in that
            changeset. All changes are permanent and cannot be restored at a later time.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.ITransactionManager.RevertChanges">
            <summary>
            Ends the current changeset and reverts all changes recorded in that changeset.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.ITransactionManager.IsReadOnly">
            <summary>
            Gets a value indicating whether a changeset is in scope. When a changeset is not in scope,
            property values cannot be modified.
            </summary>
            <value>
            	<c>true</c> if this a changeset is in scope; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.Test.Environment.Transactions.Logger">
            <summary>
            A type that provides behavior to emit logging messages.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.Logger.sink">
            <summary>The sink to write to.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.Logger.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Logger"/> type.
            </summary>
            <param name="id">The ID of the root environment object.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.Logger.Log(System.String)">
            <summary>
            Logs a message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.Logger.Log(System.String,System.Object[])">
            <summary>
            Logs a message.
            </summary>
            <param name="message">The message.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="T:Microsoft.Test.Environment.Transactions.Transaction">
            <summary>
            An entity that defines the scope within which all changes made to one or more component
            properties are made.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.Transaction.creationTimestamp">
            <summary>The timestamp at which the transaction was created.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.Transaction.ended">
            <summary>Flag to indicate if this transaction has ended.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.Transaction.finished">
            <summary>Flag to indicate if this transaction finished.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.Transaction.finshTimestamp">
            <summary>The timestamp at which the transaction was finished.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.Transaction.id">
            <summary>The unique ID of this transaction.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.Transaction.itemValue">
            <summary>The current value of the item whose value is being changed.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.Transaction.manager">
            <summary>The transaction manager that created this transaction.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.Transaction.path">
            <summary>The path to the item whose value is being changed.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.Transaction.#ctor(System.String,System.Object,Microsoft.Test.Environment.Transactions.TransactionManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Transaction"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.Transaction.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.Transaction.EndTransaction">
            <summary>
            Ends this transaction. If this transaction is marked finished by an invocation of <see cref="M:FinishTransaction"/>
            then the transaction record is persisted. Otherwise, the transaction record is discarded.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.Transaction.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.Transaction.FinishTransaction">
            <summary>
            Marks this transaction as finished.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.Transaction.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.Transaction.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.Transaction.CreateTime">
            <summary>
            Gets the timestamp at which this transaction was created.
            </summary>
            <value>The timestamp.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.Transaction.FinishTime">
            <summary>
            Gets the timestamp at which this transaction was finished
            </summary>
            <value>The timestamp.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.Transaction.Id">
            <summary>
            Gets the unique ID for this transaction.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.Transaction.IsEnded">
            <summary>
            Gets a value indicating whether this transaction has ended.
            This is achieved by invoking the <see cref="M:RevertChanges"/> method at least once.
            </summary>
            <value>
            	<c>true</c> if this transaction has ended; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.Transaction.IsFinished">
            <summary>
            Gets a value indicating whether this transaction is finished.
            This is achieved by invoking the <see cref="M:FinishTransaction"/> method at least once.
            </summary>
            <value>
            	<c>true</c> if this transaction is finished; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.Transaction.Path">
            <summary>
            Gets the path to the item whose value is being changed.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.Transaction.StartTime">
            <summary>
            Gets the timestamp at which this transaction was started
            </summary>
            <value>The timestamp.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.Transaction.TransactionManager">
            <summary>
            Gets the transaction manager that created this transaction.
            </summary>
            <value>The transaction manager.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.Transaction.Value">
            <summary>
            Gets the current value of the item whose value is being changed.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Transactions.TransactionManager">
            <summary>
            An entity to manage transactions.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.TransactionManager.changeStack">
            <summary>Keeps track of the nested changesets.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.TransactionManager.current">
            <summary>The current changeset.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.TransactionManager.environment">
            <summary>The distributed environment instance with which this transaction manager is associated.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.TransactionManager.xactLogger">
            <summary>The logger that is used to sink log messages.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Transactions.TransactionManager.txLog">
            <summary>The transaction log that contains the transaction data.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.TransactionManager.#ctor(Microsoft.Test.Environment.DistributedEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:TransactionManager"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.TransactionManager.BeginChanges">
            <summary>
            Begins a new changeset.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.TransactionManager.Commit(Microsoft.Test.Environment.Transactions.Transaction)">
            <summary>
            Commits the specified transaction. This ensures that the transaction is associated
            with the current changeset. This ensures that the changes made in this transaction
            can be rolled back at a later time.
            </summary>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.TransactionManager.Create(System.String,System.Object)">
            <summary>
            Creates a new transaction instance and sets this instance as the current scope with
            which all component changes are associated. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.TransactionManager.Delete(Microsoft.Test.Environment.Transactions.Transaction)">
            <summary>
            Deletes the specified transaction from the transaction log.
            </summary>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.TransactionManager.PersistChanges">
            <summary>
            Ends the current changeset but does not revert any of the changes made in that
            changeset. All changes are permanent and cannot be restored at a later time
            without initiating a recovery from the log file.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.TransactionManager.Recover(System.String)">
            <summary>
            Walks through all transactions in the specified transaction log file and
            restores the value of each item whose value was modified to the original
            value.
            </summary>
            <remarks>
            <see cref="P:DistributedEnvironment.TransactionLogFiles"/> is a collection
            of the last <see cref="F:DistributedEnvironment.MaxMruEntries"/> number of log files ordered
            by the earliest to the latest. Note that <see cref="P:DistributedEnvironment.IsReadOnly"/> must
            return <c>true</c> in order for this method to proceed.
            </remarks>
            <param name="txLogFilePath">The path to the transaction log file.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.TransactionManager.Revert(Microsoft.Test.Environment.Transactions.Transaction)">
            <summary>
            Reverts the specified transaction by restoring the original value of the
            item with the configuration path <see cref="P:Transaction.Path"/>.
            </summary>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.TransactionManager.RevertChanges">
            <summary>
            Ends the current changeset and reverts all changes recorded in that
            changeset.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Transactions.TransactionManager.Rollback(Microsoft.Test.Environment.Transactions.Transaction)">
            <summary>
            Discards the specified transaction. This ensures that the change record for the
            specified transaction that was created when the transaction was created is
            deleted.
            </summary>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.TransactionManager.IsReadOnly">
            <summary>
            Gets a value indicating whether a changeset is in scope. When a changeset is not in scope,
            property values cannot be modified.
            </summary>
            <value>
            	<c>true</c> if this a changeset is in scope; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Transactions.TransactionManager.TransactionLog">
            <summary>
            Gets the transaction log used by this transaction manager.
            </summary>
            <value>The transaction log.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.ConversionDirection">
            <summary>
            Represents the direction of conversion of a path in an instance of <see cref="T:PathValueNode"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ConversionDirection.LocalToUNC">
            <summary>
            The path is converted from a local path to a UNC path.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ConversionDirection.UNCToLocal">
            <summary>
            The path is converted from a UNC path to a local path.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.IRegistryValueNode">
            <summary>
            Interface used to interact with a value that is stored in the machine registry.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.IRegistryValueNode.InitializeRegistryValue(System.String,System.String,System.String)">
            <summary>
            Dynamically initializes this node to point to the registry value specified
            </summary>
            <param name="pathToKey">Path to the key that contains the registry value for this property.</param>
            <param name="valueName">Name of the registry value that this property refers to.</param>
            <param name="remoteMachine">The remote machine.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.IRegistryValueNode.RegistryKeyName">
            <summary>
            Gets the path to the registry key that contains the registry value that this instance represents.
            </summary>
            <value>The name of the registry key.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.IRegistryValueNode.RegistryValueName">
            <summary>
            Gets the name for the registry value that this instance represents.
            </summary>
            <value>The name of the registry value.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.IRegistryValueNode.RemoteComputerName">
            <summary>
            Gets the name of the machine that contains the registry entry that this instance represents.
            </summary>
            <value>The name of the remote computer.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.LinkedConfigValueNode">
            <summary>
            Represents a property value that is linked to another value
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.LinkedConfigValueNode.LinkMoniker">
            <summary>Moniker key for the value that specifies the component to link to</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.LinkedConfigValueNode.initValue">
            <summary>The initialization value for this property.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.LinkedConfigValueNode.linkedNodes">
            <summary>The linked properties.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.LinkedConfigValueNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Values.LinkedConfigValueNode"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.LinkedConfigValueNode.CreateLink(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            Creates a link between this property and another.
            </summary>
            <param name="linkedValue">Property to link to.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.LinkedConfigValueNode.Initialize(System.String,System.String)">
            <summary>
            Initializes this configuration value with the given name and value.
            </summary>
            <param name="propertyName">Name of the this configuration value.</param>
            <param name="initializer">The initialization value.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.LinkedConfigValueNode.UpdateValueTransactional(System.Object)">
            <summary>
            Performs a transactional write to a configuration value.
            </summary>
            <param name="data">Data to write.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.LinkedConfigValueNode.Count">
            <summary>
            The number of properties that this node is linked to
            </summary>
            <value>Number of links</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.LinkedConfigValueNode.IsReadOnly">
            <summary>
            Gets a value indicating whether this property value is read-only.
            </summary>
            <value>
            	<c>true</c> if this component property is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.LinkedConfigValueNode.LinkedComponents">
            <summary>
            Gets a <see cref="T:IKeyedCollection"/> of all the components that this 
            property is linked to.
            </summary>
            <value>The components that this property is linked to.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.LinkedConfigValueNode.LinkedProperties">
            <summary>
            All the properties that this property is linked to.
            </summary>
            <value>The linked properties.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.LinkedConfigValueNode.Value">
            <summary>
            Gets the current value for this configuration value.
            </summary>
            <value>The current value.</value>
            <remarks>
            Returns the moniker(s) for the node(s) that this node is linked to
            </remarks>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.MonikerValueNode">
            <summary>
            Represents a component property whose value is a moniker string.
            </summary>
            <remarks>This configuration value node processes the string provided to split it into key 
            value pairs. The key and value are separated by <see cref="F:Moniker.DefaultKeyValueDelimiter"/>
            and the key-value pairs are separated by <see cref="F:Moniker.DefaultParameterDelimiter"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.MonikerValueNode.IsReadOnly">
            <summary>
            Gets a value indicating whether this configuration value is read-only.
            </summary>
            <value>
            	<c>true</c> if this configuration value is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.MonikerValueNode.Value">
            <summary>
            Splits the value string into key value pairs. The key and value are separated by <see cref="F:Moniker.DefaultKeyValueDelimiter"/>
            and the key-value pairs are separated by <see cref="F:Moniker.DefaultParameterDelimiter"/>.
            </summary>
            <value>Returns an instance of <see cref="T:Microsoft.Test.Environment.Moniker"/> that holds the key value pairs.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Collections.MultiplePropertyCollection">
            <summary>
            A collection to contain configuration values with the same key.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.values">
            <summary>The underlying list for this collection.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Collections.MultiplePropertyCollection"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.Add(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.Contains(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection{T}"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection{T}"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.CopyTo(Microsoft.Test.Environment.ComponentProperty[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection{T}"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection{T}"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection{T}"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator{T}"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.IndexOf(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList{T}"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList{T}"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.Insert(System.Int32,Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList{T}"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList{T}"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList{T}"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.OnInitialized">
            <summary>
            Called when the configuration information has completed loading
            </summary>
            <returns>
            True if the node has been initialized properly, false otherwise
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.Remove(Microsoft.Test.Environment.ComponentProperty)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection{T}"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList{T}"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList{T}"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.UpdateValueTransactional(System.Object)">
            <summary>
            Performs a transacted write on all the nodes that are contained in this node
            </summary>
            <param name="data">Data to write</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether this configuration value is read-only.
            </summary>
            <value>
            	<c>true</c> if this configuration value is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.Value">
            <summary>
            Gets the current value for this configuration value.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.MultiplePropertyCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Test.Environment.ComponentProperty"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.PathValueNode">
            <summary>Class used to split a path into its different components.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.ConvertKey">
            <summary>The key used to retrieve the value of the <see cref="P:ConvertTo"/> property from the initialization moniker string.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.InvokeMemberKey">
            <summary>The key used to retrieve the value of the <see cref="P:InvokeMember"/> property from the initialization moniker string.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.MachineKey">
            <summary>The key used to retrieve the value of the <see cref="P:MachineName"/> property from the initialization moniker string.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.ParameterDelimiter">
            <summary>The delimited used to separate the parameters to pass to the method referred to by <see cref="P:InvokeMember"/>.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.ParametersKey">
            <summary>The key used to retrieve the value of the <see cref="P:Parameters"/> property from the initialization moniker string.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.PathValueKey">
            <summary>The key used to retrieve the value of the <see cref="P:Path"/> property from the initialization moniker string.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.convertVerb">
            <summary>The conversion direction. One of ToUNC or ToLocal.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.invokeMember">
            <summary>The name of the method in <see cref="T:System.IO.Path"/> to invoke.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.machineName">
            <summary>The machine name to replace when converting from a local to UNC path.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.parameters">
            <summary>The parameters to pass to the static method <see cref="T:System.IO.Path"/> that is invoked to process the path.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PathValueNode.path">
            <summary>The original path.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.PathValueNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PathValueNode.Direction">
            <summary>
            Gets the direction the path should be converted in.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PathValueNode.InvokeMember">
            <summary>One of the static methods in the Path class.</summary>
            <summary>
            Gets the name of the static method in <see cref="T:System.IO.Path"/> to invoke.
            </summary>
            <value>The name of the method to invoke.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PathValueNode.MachineName">
            <summary>
            Gets the machine name to use to convert a local path to a UNC path.
            </summary>
            <value>
            A machine name to access the local path through the administrative share.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PathValueNode.Parameters">
            <summary>
            Gets the parameters to pass to the static method referred to by <see cref="P:InvokeMember"/>. 
            </summary>
            <remarks>
            These should be in order and multiple parameters should be separated by a semi-colon.
            </remarks>
            <value>The parameters.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PathValueNode.Path">
            <summary>
            Gets the original path value for this property. This is the path value before the path
            is converted.
            </summary>
            <value>Either the local path (if converting to UNC) or the UNC path (if converting to local).</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PathValueNode.Value">
            <summary>
            Gets the value of this property after the method referred to by <see cref="P:InvokedMember"/> is 
            invoked on the original path value. 
            </summary>
            <value>The current value of the path after all transformations have been applied.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.PerformanceCounterNode">
            <summary>
            A component property that represents a performance counter. This is a dynamic property
            that always retrieves most uptodate value of the specified performance counter.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PerformanceCounterNode.CategoryNameKey">
            <summary>The key used to retrieve the value of the <see cref="P:"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PerformanceCounterNode.CounterNameKey">
            <summary>The key used to retrieve the value of the <see cref="P:"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PerformanceCounterNode.InstanceNameKey">
            <summary>The key used to retrieve the value of the <see cref="P:"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PerformanceCounterNode.MachineNameKey">
            <summary>The key used to retrieve the value of the <see cref="P:"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PerformanceCounterNode.categoryName">
            <summary>The category of the performance counter for which data has to be retrieved.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PerformanceCounterNode.counterInstance">
            <summary>The cached performance counter instance.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PerformanceCounterNode.counterName">
            <summary>The name of the counter for which data has to be retrieved.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PerformanceCounterNode.instanceName">
            <summary>The name of the instance for which the counter data has to be retrieved if the counter supports multiple instances. Most do not.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.PerformanceCounterNode.machineName">
            <summary>The machine from which the counter data has to be retrieved.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.PerformanceCounterNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PerformanceCounterNode"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.PerformanceCounterNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.PerformanceCounterNode.InitializeCounter">
            <summary>
            Initializes the cached instance of <see cref="T:System.Diagnostics.PerformanceCounter"/> 
            for the performance counter specified by this property.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PerformanceCounterNode.CategoryName">
            <summary>
            Gets the name of the performance counter category represented by this property.
            </summary>
            <value>The category name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PerformanceCounterNode.Counter">
            <summary>
            Gets the cached <see cref="T:PerformanceCounter"/> instance used by this property.
            </summary>
            <value>The counter.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PerformanceCounterNode.CounterName">
            <summary>
            Gets the name of the performance counter represented by this property.
            </summary>
            <value>The counter name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PerformanceCounterNode.InstanceName">
            <summary>
            Gets the name of the instance for the performance counter represented by this property.
            </summary>
            <value>The instance name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PerformanceCounterNode.MachineName">
            <summary>
            Gets the name of the machine from which this property is retrieved.
            </summary>
            <value>The machine name.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.PerformanceCounterNode.Value">
            <summary>
            Gets the current value for thiscomponent property.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.RegExValueNode">
            <summary>
            A component property that returns a regular expression match.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegExValueNode.AllowMultipleKey">
            <summary>The key used to retrieve the original value of the <see cref="P:AllowMultiple"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegExValueNode.GroupIndexKey">
            <summary>The key used to retrieve the original value of the <see cref="P:GroupIndex"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegExValueNode.RegexKey">
            <summary>The key used to retrieve the original value of the <see cref="P:Regex"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegExValueNode.ReplaceKey">
            <summary>The key used to retrieve the original value of the <see cref="P:Replace"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegExValueNode.SearchStringKey">
            <summary>The key used to retrieve the original value of the <see cref="P:SearchString"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegExValueNode.allowMultiple">
            <summary>The original value of the AllowMultiple moniker key.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegExValueNode.groupIndex">
            <summary>The original value of the GroupIndex moniker key.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegExValueNode.regularExpression">
            <summary>The original value of the Regex moniker key.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegExValueNode.replace">
            <summary>The original value of the Replace moniker key.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegExValueNode.searchString">
            <summary>The original value of the SearchString moniker key.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegExValueNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegExValueNode.AllowMultiple">
            <summary>
            Gets a value indicating whether multiple matches are allowed.
            </summary>
            <value><c>true</c> if multiple matches are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegExValueNode.GroupIndex">
            <summary>
            Gets the index of the group to return when the regular expression is matched.
            </summary>
            <value>The index of the group.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegExValueNode.Match">
            <summary>
            Gets the match object returned when the search string is searched with the regular expression.
            </summary>
            <value>An instance of <see cref="T:System.Text.RegularExpressions.Match"/>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegExValueNode.Regex">
            <summary>
            Gets the regular expression to be matched.
            </summary>
            <value>The regular expression to be matched.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegExValueNode.Replace">
            <summary>Regex replacement string</summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegExValueNode.SearchString">
            <summary>
            Gets the search string that is to be matched against the regular expression <see cref="P:RegEx"/>.
            </summary>
            <value>The search string.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegExValueNode.Value">
            <summary>
            Gets the result of the regular expression match(es).
            </summary>
            <value>The current value.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.RegistryValueNode">
            <summary>
            Represents a component property that retrieves a registry value.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueNode.KeyMoniker">
            <summary>Key for the moniker value that specifies the registry key for the registry value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueNode.MachineMoniker">
            <summary>Key for the moniker value that specifies the machine for the registry value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueNode.ValueMoniker">
            <summary>Key for the moniker value that specifies the name for the registry value.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueNode.cached">
            <summary>Flag to indicate if the value of this property has ever been retrieved.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueNode.registryKeyPath">
            <summary>The path to the registry key.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueNode.registryValueName">
            <summary>The name of the registry value to retrieve.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueNode.remoteMachineName">
            <summary>The machine name from which the registry value has to be retrieved.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueNode.valueKey">
            <summary>The cached instance of the <see cref="T:Microsoft.Win32.RegistryKey"/>.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Values.RegistryValueNode"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueNode.InitializeRegistryValue(System.String,System.String,System.String)">
            <summary>
            Dynamically initializes this node to point to the registry value specified
            </summary>
            <param name="pathToKey">Path to the key that contains the registry value for this property.</param>
            <param name="valueName">Name of the registry value that this property refers to.</param>
            <param name="remoteMachine">The remote machine.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueNode.BaseKey(System.String)">
            <summary>
            Determines the base registry key to use.
            </summary>
            <param name="baseKeyPath">The string that represents the base registry key.</param>
            <returns>
            An instance of <see cref="T:Microsoft.Win32.RegistryKey"/> that represents the registry key <paramref name="baseKeyPath"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueNode.GetValue">
            <summary>
            Retrieves the value that this property represents.
            </summary>
            <returns>The value this property represents.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueNode.RetrieveValue">
            <summary>
            Retrieves the value that this property represents.
            </summary>
            <returns>The value this property represents.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueNode.OpenKey(System.Boolean)">
            <summary>
            Opens the registry key this node represents and retrieves the value.
            </summary>
            <param name="writable">If <c>true</c>, the retrieved registry key is writeable.</param>
            <returns>An instance of <see cref="T:Microsoft.Win32.RegistryKey"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueNode.UpdateValueInternal(System.Object)">
            <summary>
            When implemented in a derived class persists the value of this configuration value
            to the underlying datastore.
            </summary>
            <param name="value">The value.</param>
            <remarks>Invoked by the <see cref="M:UpdateValueTransactional"/> method to update the value
            for this configuration value as part of the transaction.</remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueNode.IsReadOnly">
            <summary>
            Gets a value indicating whether this component property is read-only.
            </summary>
            <value>
            	<c>true</c> if this component property is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueNode.RegistryKeyName">
            <summary>
            Gets the path to the registry key that contains the registry value that this instance represents.
            </summary>
            <value>The name of the registry key.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueNode.RegistryValueName">
            <summary>
            Gets the name for the registry value that this instance represents.
            </summary>
            <value>The name of the registry value.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueNode.RemoteComputerName">
            <summary>
            Gets the name of the machine that contains the registry entry that this instance represents.
            </summary>
            <value>The name of the remote computer.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueNode.Value">
            <summary>
            Gets the current value for this configuration value.
            </summary>
            <remarks>
            The value is cached the first time it is retrieved.
            </remarks>
            <value>The current value.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.BaseKey">
            <summary>
            Registry base key type
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.BaseKey.None">
            <summary>
            Invalid base key.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.BaseKey.HKEY_CLASSES_ROOT">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.BaseKey.HKEY_CURRENT_USER">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.BaseKey.HKEY_LOCAL_MACHINE">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.BaseKey.HKEY_USERS">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.BaseKey.HKEY_PERFORMANCE_DATA">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.BaseKey.HKEY_PERFORMANCE_TEXT">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.BaseKey.HKEY_CURRENT_CONFIG">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.BaseKey.HKEY_DYN_DATA">
             <summary>
            
             </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.ProviderArchitecture">
            <summary>
            Flag indicate the system architecture 32-bit or 64-bit
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ProviderArchitecture.Default">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ProviderArchitecture.System32">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ProviderArchitecture.System64">
             <summary>
            
             </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.RegType">
            <summary>
            Registry type
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegType.None">
            <summary>
            Invalid registry type.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegType.REG_SZ">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegType.REG_EXPAND_SZ">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegType.REG_BINARY">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegType.REG_DWORD">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegType.REG_MULTI_SZ">
             <summary>
            
             </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.RegistryValueWmi">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.#ctor(System.String,Microsoft.Test.Environment.Values.BaseKey)">
            <summary>
            Opens registry hive in a remote server with default architecture
            </summary>
            <param name="serverName"> server name</param>
            <param name="baseKey"> registry base key</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.#ctor(System.String,Microsoft.Test.Environment.Values.ProviderArchitecture,Microsoft.Test.Environment.Values.BaseKey)">
            <summary>
            Opens registry hive in a remote server with specified architecture
            </summary>
            <param name="serverName">server name</param>
            <param name="providerArchitecture">system32/64</param>
            <param name="baseKey">registry base key</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.#ctor(System.String,Microsoft.Test.Environment.Values.ProviderArchitecture,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.String,System.String,Microsoft.Test.Environment.Values.BaseKey)">
            <summary>
            Opens registry hive in a remote server with specified architecture and authentication parameters
            </summary>
            <param name="serverName">server name</param>
            <param name="providerArchitecture">system32/64</param>
            <param name="impersonateLever">impersonate level</param>
            <param name="authenticationLevel">authenticate level</param>
            <param name="userName">username</param>
            <param name="password">password</param>
            <param name="baseKey">registry base key</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.Dispose(System.Boolean)">
            <summary>
            Disposes of the object.
            </summary>
            <param name="disposing">Whether or not the object is disposing.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.GetProviderArchitectureType(System.String)">
            <summary>
            Get the provider architecture for the provided string
            </summary>
            <param name="providerArchitecture">system32/64</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.CreateKey(System.String)">
            <summary>
             Create a key
            </summary>
            <param name="subkeyName">registry subkey name</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.DeleteKey(System.String)">
            <summary>
            Delete a key
            </summary>
            <param name="subkeyName">registry subkey name</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.DeleteValue(System.String,System.String)">
            <summary>
            Delete a key's value
            </summary>
            <param name="subkeyName">registry subkey name</param>
            <param name="valueName">registry value name</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.GetValue(System.String,System.String,Microsoft.Test.Environment.Values.RegType)">
            <summary>
            Get a key's value name with specified regType and return the value
            </summary>
            <param name="subkeyName">registry subkey name</param>
            <param name="valueName">registry value name</param>
            <param name="regType">registry type</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.GetValue(System.String,System.String)">
            <summary>
            Search for a key's value name with different regType and return the value
            </summary>
            <param name="subkeyName">registry subkey name</param>
            <param name="valueName">registry value name</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.GetValueType(System.String,System.String)">
            <summary>
            Get a value's registry type by examining the values under the specified sub key.
            </summary>
            <param name="subkeyName">The subkey that contains the value requested.</param>
            <param name="valueName">Requested value for determining the registry type.</param>
            <returns>The RegType of the specified value under the specified sub key.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.SetValue(System.String,System.String,System.Object)">
            <summary>
            Set value for a key's value name based on the value's type
            </summary>
            <param name="subkeyName">registry subkey</param>
            <param name="valueName">registry value name</param>
            <param name="value">new value</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.SetValue(System.String,System.String,System.Object,Microsoft.Test.Environment.Values.RegType)">
            <summary>
            Set value for a key's value name.
            </summary>
            <param name="subkeyName">registry subkey name</param>
            <param name="valueName">registry value name</param>
            <param name="value">new value</param>
            <param name="regType">registry type</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.GetRegType(System.Object)">
            <summary>
            Map a value type to a registry type
            </summary>
            <param name="value">value to be set for a registry key</param>
            <returns>Registry Type</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.SetManagementScope(System.String,System.Management.ConnectionOptions)">
            <summary>
            Set management scope
            </summary>
            <param name="serverName">server name</param>
            <param name="connectionOptions">connection option</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.SetRegistryConnectionOptions(Microsoft.Test.Environment.Values.ProviderArchitecture,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.String,System.String)">
            <summary>
            Setting connection options with username and password
            </summary>
            <param name="providerArchitecture"> system32/64</param>
            <param name="impersonateLevel">impersonate level</param>
            <param name="authenticationLevel">authentication level</param>
            <param name="userName">username</param>
            <param name="password">password</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmi.TryGetMethodTypeFromRegType(Microsoft.Test.Environment.Values.RegType,System.Boolean,System.String@,System.String@)">
            <summary>
            Helper method to retrieve the right method type name to call
            </summary>
            <param name="regType">registry type</param>
            <param name="isGetMethod">is Get or Set method name</param>
            <param name="methodType">method Type</param>
            <param name="valueType">value Type</param>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.RegistryValueWmiNode">
            <summary>Node that is designed to be attached to a registry value</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueWmiNode.KeyMoniker">
            <summary>Key for the moniker value that specifies the registry key for the registry value</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueWmiNode.MachineMoniker">
            <summary>Key for the moniker value that specifies the machine for the registry value</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueWmiNode.ProviderMoniker">
            <summary>Key for the moniker value that specifies the provider architecture 32-bit or 64-bit OS</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.RegistryValueWmiNode.ValueMoniker">
            <summary>Key for the moniker value that specifies the name for the registry value</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmiNode.#ctor">
            <summary>Creates a new registry value node</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmiNode.InitializeRegistryValue(System.String,System.String,System.String)">
            <summary>Dynamically initializes this node to point to the registry value specified</summary>
            <param name="pathToKey">Path to the key that contains the registry value for this node</param>
            <param name="valueName">Name of the value that this node points to</param>
            <param name="remoteMachine">Name of the machine that the registry value resides on or empty if this node 
            represents a local value</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmiNode.GetBaseKey(System.String)">
            <summary>Determines the base key to use for the registry key</summary>
            <param name="baseKeyPath">The string that represents the base key</param>
            <returns>The registry key that was specified in the base key</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmiNode.GetValue">
            <summary>Retrieves the value that this registry value node points to</summary>
            <returns>The value this value points to</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmiNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmiNode.OpenKey(System.Boolean,System.String@)">
            <summary>
            Helper used to open the registry key this node represents and retrieve the value
            </summary>
            <param name="writable">Whether or not to allow writes to key</param>
            <param name="subkeyPath">out registry subkey path</param>
            <returns>RegistryValueWmi key</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.RegistryValueWmiNode.UpdateValueInternal(System.Object)">
            <summary>
            When implemented in a derived class persists the value of this component property
            to the underlying datastore.
            </summary>
            <param name="value">The value.</param>
            <remarks>Invoked by the <see cref="M:UpdateValueTransactional"/> method to update the value
            for this configuration value as part of the transaction.</remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueWmiNode.IsReadOnly">
            <summary>Returns whether or not this value is read only</summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueWmiNode.Provider">
            <summary>Provider of architecture</summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueWmiNode.RegistryKeyName">
            <summary>Path to the registry key that contains the registry value that this node represents</summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueWmiNode.RegistryValueName">
            <summary>Name for the registry value that this node represents</summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueWmiNode.RemoteComputerName">
            <summary>Name of the machine that the registry value resides on</summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.RegistryValueWmiNode.Value">
            <summary>Moniker in the registry that this node represents</summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.SearchValuesNode">
            <summary>
            A component property that will search through the configuration container for specific value(s).
            </summary>
            <remarks>
            This component property type will search through the configuration and link to found value(s). This can be
            restricted to find only one value or to find multiple values <see cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.AllowMultipleValues"/>.
            If <see cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.AllowMultipleValues"/> is false and multiple values are returned this property
            will return null for <see cref="P:Microsoft.Test.Environment.Values.LinkedConfigValueNode.Value"/>. This property can also be extended to allow
            substring searches <see cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.SubstringMatches"/> and can be restricted to be case sensitive
            <see cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.CaseSensitive"/>. This node must specify the search names and search values
            (<see cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.SearchNames"/> and <see cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.SearchNames"/> as well as the name
            of the property to reference on the node(s) found (<see cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.ReferenceValue"/>.</remarks>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.AllowMultipleValuesKey">
            <summary>Moniker key that contains the setting that controls whether multiple values are allowed in the search results.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.CaseSensitiveKey">
            <summary>Moniker key that contains the setting that controls whether searches are case sensitive.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.ReferenceValueKey">
            <summary>Moniker key that contains the name of the property whose value will be retrieved after the search.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.SearchNamesKey">
            <summary>Moniker key that contains the setting .</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.SearchValuesKey">
            <summary>Moniker key that contains the setting .</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.SubstringMatchesKey">
            <summary>Moniker key that contains the setting that indicates if substring matches are to be used.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.allowMultipleValues">
            <summary>The unexpanded value of the <see cref="F:AllowMultipleValuesKey"/> entry in the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.caseSensitive">
            <summary>The unexpanded value of the <see cref="F:CaseSensitiveKey"/> entry in the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.referenceValue">
            <summary>The unexpanded value of the <see cref="F:ReferenceValueKey"/> entry in the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.searchNames">
            <summary>The unexpanded value of the <see cref="F:SearchNamesKey"/> entry in the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.searchValues">
            <summary>The unexpanded value of the <see cref="F:SearchValuesKey"/> entry in the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.SearchValuesNode.substringMatches">
            <summary>The unexpanded value of the <see cref="F:SubstringMatchesKey"/> entry in the initialization moniker.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.SearchValuesNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Values.SearchValuesNode"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.SearchValuesNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.SearchValuesNode.Matches(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Compares two strings and returns a flag indicating if the two strings match.
            </summary>
            <param name="valueToSearch">The string to search.</param>
            <param name="searchedValue">The string to search for.</param>
            <param name="matchSubstring">if set to <c>true</c> a substring match to check if <paramref name="searchedValue"/> is a substring of <paramref name="valueToSearch"/> is performed; otherwise an exact match is performed.</param>
            <param name="matchCase">if set to <c>true</c> matches are case sensitive.</param>
            <returns><c>true</c> if the two strings match according to the given criteria; otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.SearchValuesNode.AllowMultipleValues">
            <summary>
            Gets a value that indicates if multiple results are allowed as a result of the search operation.
            </summary>
            <value><c>true</c> if multiple results are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.SearchValuesNode.CaseSensitive">
            <summary>
            Gets a value indicating if searches are case sensitive.
            </summary>
            <value><c>true</c> if searches are case sensitive; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.SearchValuesNode.ReferenceValue">
            <summary>
            The name of the node to link to on each of the components returned by the search.
            </summary>
            <value>The reference value.</value>
            <remarks>This value is required.  With each component that is found as a result of the search this node
            will link to the node with the name specified in this moniker.  For example this moniker string could be
            specified as ReferenceValue=MachineName and thus this component's
            <see cref="P:Microsoft.Test.Environment.Values.LinkedConfigValueNode.Value"/> would return either a single MachineName as a result or a
            collection of MachineName values (<see cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.AllowMultipleValues"/>).</remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.SearchValuesNode.SearchNames">
            <summary>
            A semicolon delimited list of the names to use when searching for the required properies.
            </summary>
            <value>The search names.</value>
            <remarks>This list has a one to one correspondence to the <see cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.SearchValues"/> field.  This field is
            required and is specified in the moniker string as SearchNames=name1;name2;name3 etc.  These names
            (if multiples are specified) are the same as anding the names to search for together.</remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.SearchValuesNode.SearchNamesCollection">
            <summary>
            Helper to return a IList container that is equivalent to a parsed SearchNames property.
            </summary>
            <value>The search names collection.</value>
            <remarks><seealso cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.SearchNames"/></remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.SearchValuesNode.SearchValues">
            <summary>
            A semicolon delimited list of the values to use when searching for the required values.
            </summary>
            <value>The search values.</value>
            <remarks>This list has a one to one correspondence to the <see cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.SearchNames"/> field.  This field is
            required and is specified in the moniker string as SearchValues=value1;value2;value3 etc.  These values
            (if multiples are specified) are the same as anding the values to search for together.</remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.SearchValuesNode.SearchValuesCollection">
            <summary>
            Helper to return a IList container that is equivalent to a parsed SearchValues property.
            </summary>
            <value>The search values collection.</value>
            <remarks><seealso cref="P:Microsoft.Test.Environment.Values.SearchValuesNode.SearchValues"/></remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.SearchValuesNode.SubstringMatches">
            <summary>
            Gets a flag indicating if substring matches are allowed.
            </summary>
            <value><c>true</c> if substring matches are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.SearchValuesNode.Value">
            <summary>
            Returns the value(s) of the nodes this value node finds.
            </summary>
            <value>Node or nodes that this value node finds.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.SearchValuesNode.DebuggerDisplayString">
            <summary>
            Gets or sets the debugger display string.
            </summary>
            <value>The debugger display string.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.ServerXmlValueNode">
            <summary>
            Designed to retrieve a XML value from a server.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.XmlValueNode">
            <summary>
            A component property that refers to a value in a XML file that is specified with
            the XPath expression to use to retrieve the value.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.ConfigKeyElementName">
            <summary>The name of the attributes containing the value in the XML configuration file.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.ConfigKeyNameAttributeName">
            <summary>The name of the element in the XML configuration file.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.FileNameMonikerKey">
            <summary>The key used to retrieve the value of the <see cref="P:XmlFile"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.ValueTypeMonikerKey">
            <summary>The key used to retrieve the value of the <see cref="P:XmlNodeDataType"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.XPathMonikerKey">
            <summary>The key used to retrieve the value of the <see cref="P:XPathToKey"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.ConfigKeyTypeAttributeName">
            <summary>The type of the data in the XML attribute &quot;Val&quot;.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.ConfigKeyValueAttributeName">
            <summary>The name of the XML attribute containing the data that is retrieved.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.KeyMonikerKey">
            <summary>The key used to retrieve the value of the <see cref="P:XPathToKey"/> property from the initialization moniker if a key-value pair with key <see cref="F:XPathMonikerKey"/> is not present.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.XmlIntegerType">
            <summary>XML integer type code.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.XmlStringType">
            <summary>XML string type code.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.fileName">
            <summary>The XML file from which the value is retrieved.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.valueType">
            <summary>The type of data to retrieve from the located XML node.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.XmlValueNode.xPath">
            <summary>The XPath expression to evaluate.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.XmlValueNode.InitializeXmlValue(System.String,System.String)">
            <summary>
            Initializes this property.
            </summary>
            <param name="xmlFileName">The XML file from which this property will retrieve values.</param>
            <param name="xPathExpression">The XPath expression to evaluate on <paramref name="xmlFileName"/>.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.XmlValueNode.InitializeXmlValue(System.String,System.String,System.String)">
            <summary>
            Initializes this property.
            </summary>
            <param name="xmlFileName">The XML file from which this property will retrieve values.</param>
            <param name="xPathExpression">The XPath expression to evaluate on <paramref name="xmlFileName"/>.</param>
            <param name="xmlValueType">The type of the node data that is to be retrieved. This is one of OuterXml, InnerXml or Moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.XmlValueNode.OnInitialized">
            <summary>
            Called after initialization is done to allow finalization of initialization after other
            dependencies have been created.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.XmlValueNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.XmlValueNode.ReadValue(System.String,System.String)">
            <summary>
            Evaluates the specified XPath expression on the specified file and retrieves the evaluated
            value.
            </summary>
            <param name="xmlFileName">The name of the file on which the XPath expression has to be evaluated.</param>
            <param name="originalXPath">The XPath expression to evaluate.</param>
            <returns>The evalauted value.</returns>
            <exception cref="T:System.ArgumentException">One of the initialization values for this node is incorrrect.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.XmlValueNode.ReadValue(System.String,System.String,System.String)">
            <summary>
            Evaluates the specified XPath expression on the specified file and retrieves the evaluated
            value.
            </summary>
            <param name="xmlFileName">The name of the file on which the XPath expression has to be evaluated.</param>
            <param name="originalXPath">The XPath expression to evaluate.</param>
            <param name="xmlValueType">The type of data to retrieve. This may be one of InnerXml, OuterXml or Moniker.</param>
            <returns>The evalauted value.</returns>
            <exception cref="T:System.ArgumentException">One of the initialization values for this node is incorrrect.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.XmlValueNode.RegistryPathToXPath(System.String)">
            <summary>
            Used to build an XPath from a path specified in registry format.
            </summary>
            <param name="registryPath">The path to the value to retrieve in registry format.</param>
            <returns>
            An XPath expression equivalent to the specified path.
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.XmlValueNode.UpdateValueInternal(System.Object)">
            <summary>
            When implemented in a derived class persists the value of this component property
            to the underlying datastore.
            </summary>
            <param name="value">The value.</param>
            <remarks>Invoked by the <see cref="M:UpdateValueTransactional"/> method to update the value
            for this configuration value as part of the transaction.</remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.XmlValueNode.WriteValue(System.String,System.String,System.String,System.Object)">
            <summary>
            Modifies the value of the entry specified by the given XPath expression to a new value and 
            persists the changes to the underlying XML file.
            </summary>
            <param name="xmlFileName">The name of the file to persist the changes to.</param>
            <param name="originalXPath">The XPath expression that represents the node to modify.</param>
            <param name="xmlValueType">The type of the node data to modify. This may be one of InnerXml, OuterXml or Moniker.</param>
            <param name="data">The new value.</param>
            <exception cref="T:System.ArgumentException">One of the initialization values for this node is incorrrect</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.XmlValueNode.IsReadOnly">
            <summary>
            Gets a value indicating whether this component property is read-only.
            </summary>
            <value>
            	<c>true</c> if this component property is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.XmlValueNode.Value">
            <summary>
            Gets the current value for thiscomponent property.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.XmlValueNode.XPathToKey">
            <summary>
            Gets the XPath expression to the key for the value that this property represents.
            </summary>
            <value>The XPath expression.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.XmlValueNode.XmlFile">
            <summary>
            Gets the name of the file from the value of the XPath expression <see cref="P:XPathToKey"/>
            is retrieved.
            </summary>
            <value>The XML file.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.XmlValueNode.XmlNodeDataType">
            <summary>
            Gets the type of the value that is retrived. 
            </summary>
            <remarks>
            This can be one of InnerXml, OuterXml or Moniker.
            </remarks>
            <value>The type of the XML node data.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.XmlValueNode.UnderlyingFile">
            <summary>
            Gets or sets the raw initialization value of of the filename from which this property retrieves
            the value. See <see cref="P:XmlFile"/>.
            </summary>
            <value>The underlying file.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.XmlValueNode.ValueType">
            <summary>
            Gets or sets the raw initialization value of the type of the node data that is retrived. 
            </summary>
            <remarks>
            This is one of OuterXml, InnerXml or Moniker. See <see cref="P:XmlNodeDataType"/>
            </remarks>
            <value>The type of the value.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.XmlValueNode.ValueXPath">
            <summary>
            Gets or sets the raw initialization value of the XPath expression that is evaluated
            to retrieve the value for this property. See <see cref="P:XPathToKey"/>.
            </summary>
            <value>The XPath expression.</value>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ServerXmlValueNode.AdminClientSubkey">
            <summary>Registry key that contains configuration information for the AdDelivery admin client</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ServerXmlValueNode.ConfigLocationValue">
            <summary>Moniker that contains the directory location where the admin client looks for configuration 
            files</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ServerXmlValueNode.ProviderMoniker">
            <summary>Server moniker key that indicates which provider architecture we should query for registry key</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ServerXmlValueNode.ServerMoniker">
            <summary>Server moniker key that indicates the server on which the value lives</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ServerXmlValueNode.providerArchitecture">
            <summary>The provider architecture flag (32-bit or 64-bit) to query for registry key</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.ServerXmlValueNode.serverName">
            <summary>The server the underlying value is stored on</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.ServerXmlValueNode.InitializeServerValue(System.String,System.String,System.String)">
            <summary>
            Dynamically initializes the node to the point to the XML value specified
            </summary>
            <param name="newServerName">Server on which the value lives</param>
            <param name="pathToKey">Path to the key for the underlying value.</param>
            <param name="valueName">Name of the underlying value.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.ServerXmlValueNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.ServerXmlValueNode.ReadValue(System.String,System.String)">
            <summary>
            Evaluates the specified path expression on the specified server and retrieves the evaluated
            value.
            </summary>
            <param name="targetServerName">Name of the server to retrieve the value from.</param>
            <param name="pathToKey">The Path expression to evaluate.</param>
            <returns>The evalauted value.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.ServerXmlValueNode.KeyPath">
            <summary>
            Gets the path to the configuration item key whose value is represented by this property.
            </summary>
            <value>The key path.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.ServerXmlValueNode.Provider">
            <summary>
            Gets the provider architecture.
            </summary>
            <value>The provider architecture.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.ServerXmlValueNode.Server">
            <summary>
            Gets the name of the server on which the value represented by this property resides.
            </summary>
            <value>The server.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.ServerXmlValueNode.Value">
            <summary>
            Gets the current value for this component property.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.ServerXmlValueNode.XmlFileFoundIn">
            <summary>
            Gets the name of the file in which the value for this property was located.
            </summary>
            <value>The filename in which the value was located.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.ServerXmlValueNode.XmlFileLocation">
            <summary>
            Gets the location from which the AdDelivery admin client loads configuration files.
            </summary>
            <value>The XML file location.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Collections.ServiceComponentCollection">
            <summary>
            Class used to control services in unison.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Collections.ServiceComponentCollection"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Test.Environment.Component})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Collections.ServiceComponentCollection"/> class.
            </summary>
            <param name="nodes">The initial nodes in this collection.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.Dispose(System.Boolean)">
            <summary>
            Disposes of the collection.
            </summary>
            <param name="disposing">Whether or not the object is being disposed.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.Dispose">
            <summary>
            Disposes of the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.AddServiceNode(Microsoft.Test.Environment.ServiceComponent)">
            <summary>
            Adds a node to the service component collection for group management.
            </summary>
            <param name="nodeToAdd">The <see cref="T:ServiceComponent"/> to add.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection{T}"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection{T}"/> is read-only.
            </exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.CycleServices">
            <summary>
            Stops and then restarts all services in the collection asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.StartServices">
            <summary>
            Starts all services in the collection asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.StopServices">
            <summary>
            Stops all services in the collection asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.WaitUntilDone(System.TimeSpan)">
            <summary>
            Blocks until all previous operations have completed successfully.
            </summary>
            <param name="waitUntil">Time span to block for before exiting method.</param>
            <returns>
            <c>true</c> if wait was successful, <c>false</c> if there was a timeout before operations completed
            </returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.AddService(System.String,Microsoft.Test.Environment.ServiceComponent)">
            <summary>
            Adds the service.
            </summary>
            <param name="key">The key.</param>
            <param name="nodeToAdd">The node to add.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.EnqueueOperation(Microsoft.Test.Environment.Collections.ServiceComponentCollection.HandlerOperation)">
            <summary>
            Adds an operation to the operation queue and starts up a thread to execute
            the specified operation.
            </summary>
            <param name="operation">The operation to queue.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.HandleStartServices">
            <summary>
            Thread delegate that starts all services in this collection.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.HandleStopServices">
            <summary>
            Thread delegate that stops all services in this collection.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Collections.ServiceComponentCollection.HandlerThread">
            <summary>
            Handlers the thread.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.ServiceComponentCollection.DefaultWait">
            <summary>
            Gets the default wait period.
            </summary>
            <value>The default wait.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.ServiceComponentCollection.OperationsQueueSyncRoot">
            <summary>
            Gets the synchronization object used to synchronize access to the 
            operations queue.
            </summary>
            <value>The operations queue synchronization object.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Collections.ServiceComponentCollection.ServicesSyncRoot">
            <summary>
            Gets the services dictionary synchronization root.
            </summary>
            <value>The services sync root.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Collections.ServiceComponentCollection.HandlerOperation">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.TextFileValueNode">
            <summary>
            A component property that represents the contexts of a text file.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.TextFileValueNode.FileNameKey">
            <summary>The key used to retrieve the value of the <see cref="P:FileName"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.TextFileValueNode.fileName">
            <summary>The filename whose contents are retrieved by this property.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.TextFileValueNode.initialized">
            <summary>Flag to indicate if the value for this property has ever been read.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.TextFileValueNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.TextFileValueNode.UpdateValueInternal(System.Object)">
            <summary>
            When implemented in a derived class persists the value of this component property
            to the underlying datastore.
            </summary>
            <param name="value">The value.</param>
            <remarks>Invoked by the <see cref="M:UpdateValueTransactional"/> method to update the value
            for this configuration value as part of the transaction.</remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.TextFileValueNode.FileName">
            <summary>
            Gets the path to the file that read by this property.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.TextFileValueNode.Value">
            <summary>
            Gets the text in the file <see cref="P:FileName"/> represented as a string. 
            This string is the entire file so any newlines are returned in the string rather than becoming 
            an array of strings.
            </summary>
            <value>The current value.</value>
            <remarks>Returns <c>null</c> if the file does not exist.</remarks>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.UdlValueNode">
            <summary>
            Represents a component property whose value is retrieved from a UDL file.
            </summary>
            <remarks>
            This configuration value node is used to retrieve values from an UDL file. This can be used to
            retrieve an entire connection string or a specific field in the connection string.  
            The initialization value for this property is treated as a moniker where one key is required and 
            the other two are optional. For more information on specifying moniker values
            see <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/>.
            The three moniker keys are <see cref="F:UdlValueNode.UdlPathKey"/>, <see cref="F:UdlValueNode.MachineNameKey"/>, 
            and <see cref="F:UdlValueNode.ReferenceFieldKey"/> and the respective values are 
            <see cref="P:UdlValueNode.UdlPath"/>, <see cref="P:UdlValueNode.MachineName"/> and 
            <see cref="P:UdlValueNode.ReferenceField"/>. <see cref="F:UdlValueNode.UdlPathKey"/> is required, 
            <see cref="F:UdlValueNode.MachineNameKey"/> is optional, and <see cref="F:UdlValueNode.ReferenceFieldKey"/> 
            is optional. If <see cref="F:UdlValueNode.MachineNameKey"/> is not specified <see cref="P:UdlValueNode.UdlPath"/> 
            is assumed to be a fully qualified path to the UDL file. If <see cref="F:UdlValueNode.MachineNameKey"/> is 
            specified the value for <see cref="P:UdlValueNode.UdlPath"/> is reformatted to a UNC path to the file based 
            on the administrative share for whatever drive <see cref="P:UdlValueNode.UdlPath"/> specifies. If 
            <see cref="F:UdlValueNode.ReferenceFieldKey"/> is not specified <see cref="P:UdlValueNode.Value"/> returns 
            the entire connection string in the UDL file. The code below shows some examples of defining a <see cref="T:UdlValueNode"/>.
            <code>
            &lt;Property Name="SqlServer" Value="MachineName=%MachineName%|UdlPath=c:\udlpath\test.udl|ReferenceField=Server"/&gt;
            </code>
            </remarks>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UdlValueNode.MachineNameKey">
            <summary>The key used to retrieve the value of <see cref="P:MachineName"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UdlValueNode.RawKey">
            <summary>The key used to retrieve the value of <see cref="P:Raw"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UdlValueNode.ReferenceFieldKey">
            <summary>The key used to retrieve the value of <see cref="P:ReferenceField"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UdlValueNode.UdlPathKey">
            <summary>The key used to retrieve the value of <see cref="P:UdlPath"/> property from the initialization moniker.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UdlValueNode.connectionString">
            <summary>The connection string read in from the UDL file.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UdlValueNode.currentValue">
            <summary>The current value of the property.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UdlValueNode.machineName">
            <summary>The machine name on which the UDL file is located.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UdlValueNode.raw">
            <summary>The raw value to use for this property.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UdlValueNode.referenceField">
            <summary>The referenced field in the original UDL connection string.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UdlValueNode.udlPath">
            <summary>The path to the UDL file.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.UdlValueNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Values.UdlValueNode"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.UdlValueNode.FilteredConnectionString(System.String[])">
            <summary>
            Filters the underlying connection string by removing the specified components.
            </summary>
            <param name="ignoreList">The keys to remove from the underlying connection string.</param>
            <returns>The filtered connection string.</returns>
            <remarks>
            This works with the entire connection string even if a  <see cref="P:Microsoft.Test.Environment.Values.UdlValueNode.ReferenceField"/> 
            is specified.
            </remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.UdlValueNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.UdlValueNode.UpdateValueInternal(System.Object)">
            <summary>
            When implemented in a derived class persists the value of this component property
            to the underlying datastore.
            </summary>
            <param name="value">The value.</param>
            <remarks>Invoked by the <see cref="M:UpdateValueTransactional"/> method to update the value
            for this configuration value as part of the transaction.</remarks>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.UdlValueNode.GetUdlValue">
            <summary>
            Gets the UDL connection string from the UDL file <see cref="P:UdlPath"/>.
            </summary>
            <returns>The UDL connection string.</returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UdlValueNode.ConnectionString">
            <summary>
            Gets the full connection string from the UDL file. Useful if using a reference and you want to also
            use the full connection string.
            </summary>
            <value>The connection string.</value>
            <remarks>This contains the entire connection string even if <see cref="P:UdlValueNode.ReferenceField"/> is
            specified.</remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UdlValueNode.IsReadOnly">
            <summary>
            Gets a value indicating whether this component property is read-only.
            </summary>
            <value>
            	<c>true</c> if this component property is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UdlValueNode.MachineName">
            <summary>
            Gets the name of the machine that the UDL file is located on.
            </summary>
            <value>The name of the machine.</value>
            <remarks>
            This value is only necessary if <see cref="P:UdlValueNode.UdlPath"/> is a local path on a 
            remote machine. If <see cref="F:UdlValueNode.MachineNameKey"/> is specified then this instance
            will convert <see cref="P:UdlValueNode.UdlPath"/> into an UNC path based on the value assigned to 
            <see cref="P:MachineName"/>. This value is specified in the initialization moniker. 
            For more information on specifying moniker values see <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UdlValueNode.Raw">
            <summary>
            The connection string that you would normally find in a UDL file
            </summary>
            <remarks>
            To be used for times when there is not an actual file containing the reference string
            and instead there is a raw string.
            </remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UdlValueNode.ReferenceField">
            <summary>
            The path to the UDL file that contains the information desired.
            </summary>
            <value>The reference field.</value>
            <remarks>
            This value is only specified if the user wishes to retrieve a particular value from the connection
            string in the UDL file specified rather than the entire connection string. This value is specified 
            in the initialization moniker for this property. For more information on specifying moniker values see
            <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UdlValueNode.SqlConnectionString">
            <summary>
            Gets the UDL connection string formatted as a SQL connection string.
            </summary>
            <value>The SQL connection string.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UdlValueNode.UdlPath">
            <summary>
            Gets the path to the UDL file that contains the connection information.
            </summary>
            <value>The path to the UDL file.</value>
            <remarks>
            This value is required in order for this property to retrieve values. If a value for
            <see cref="P:Microsoft.Test.Environment.Values.UdlValueNode.MachineName"/> is provided, the value of the <see cref="P:UdlPath"/>
            property will be converted into a UNC path to the machine <see cref="P:MachineName"/>.
            This initial value for this property is specified in the initialization moniker for this property.
            For more information on specifying moniker values see <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/>
            </remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UdlValueNode.Value">
            <summary>
            Gets the current value for this component property.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Values.UriValueNode">
            <summary>
            This class supplies functionality to parse URIs in a configuration file.
            </summary>
            <remarks>
            This property parses URI information and returns specific fields of the URI as a result. This property type
            can also be used to resolve names from IP addresses if necessary. This property is initialized through three
            moniker values. Two are required and one is optional. For more information on specifying moniker values
            see <see cref="T:Microsoft.Test.Environment.DistributedEnvironment"/>.
            The moniker value <see cref="P:UriPart"/> specifies the portion of the URI to return as a value.
            This part directly corresponds to the fields off of <see cref="T:System.Uri"/> and are named the same. 
            In the case that the <see cref="P:UriPart"/>  specifies &quot;Host&quot; and <see cref="P:ResolveIP"/> is 
            set to <c>true</c> then this property will attempt to resolve the host name from the URI in question if 
            the given URI contains an IP rather than a host name.
            </remarks>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UriValueNode.ResolveIPKey">
            <summary>The key used to retrieve the value of the <see cref="P:ResolveIp"/> property when this property is initialized.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UriValueNode.UriKey">
            <summary>The key used to retrieve the value of the <see cref="P:Uri"/> property when this property is initialized.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UriValueNode.UriPartKey">
            <summary>The key used to retrieve the value of the <see cref="P:UriPart"/> property when this property is initialized.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UriValueNode.resolveIp">
            <summary>Flag that indicates if IP addresses should be resolved to hostnames.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UriValueNode.uri">
            <summary>The URI to parse.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Values.UriValueNode.uriPart">
            <summary>The portion of the URI to return when the value of this property is read.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.UriValueNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Values.UriValueNode"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Values.UriValueNode.Initialize(Microsoft.Test.Environment.Moniker)">
            <summary>
            Invoked by the <see cref="M:Initialize(System.String,System.String)"/> method if the
            initial value is a moniker string.
            </summary>
            <param name="moniker">The initialization moniker.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UriValueNode.ResolveIP">
            <summary>
            Gets a flag indicating if any embedded IP address in <see cref="P:Uri"/> should be resolved to the
            host name,
            </summary>
            <value><c>true</c> if an embedded IP should be resolved; otherwise, <c>false</c>.</value>
            <remarks>
            This applies only if the <see cref="P:UriPart"/> is &quot;Host&quot; and
            the <see cref="P:Uri"/> contains an IP address as host rather than a host name.  This value is
            optional and defaults to false.
            </remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UriValueNode.Uri">
            <summary>
            Gets the underlying URI to parse.
            </summary>
            <value>The URI.</value>
            <remarks>
            If this URI contains an IP address as host the IP address will not be resolved when this property
            is read. The IP address will only be resolved when <see cref="P:Microsoft.Test.Environment.Values.UriValueNode.Value"/> is read.
            </remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UriValueNode.UriPart">
            <summary>
            Gets the portion of the URI to parse and return as the value of this property.
            </summary>
            <value>The URI part.</value>
            <remarks>
            This can be any of the fields for the <see cref="T:System.Uri"/> class. These fields are
            <see cref="F:T:System.Uri.AbsolutePath"/>, <see cref="F:T:System.Uri.AbsoluteUri"/>, 
            <see cref="F:T:System.Uri.Authority"/>, <see cref="F:T:System.Uri.Fragment"/>, 
            <see cref="F:T:System.Uri.Host"/>, <see cref="F:T:System.Uri.HostNameType"/>, 
            <see cref="F:T:System.Uri.IsDefaultPort"/>, <see cref="F:T:System.Uri.IsFile"/>, 
            <see cref="F:T:System.Uri.IsLoopback"/>, <see cref="F:T:System.Uri.IsUnc"/>, 
            <see cref="F:T:System.Uri.LocalPath"/>, <see cref="F:T:System.Uri.PathAndQuery"/>, 
            <see cref="F:T:System.Uri.Port"/>, <see cref="F:T:System.Uri.Query"/>, 
            <see cref="F:T:System.Uri.Scheme"/>, <see cref="F:T:System.Uri.Segments"/>, 
            <see cref="F:T:System.Uri.UserEscaped"/>, and <see cref="F:T:System.Uri.UserInfo"/> and are 
            specified simply by the field name. If this value is Host and <see cref="P:UriValueNode.Uri"/> contains 
            an IP and <see cref="P:UriValueNode.ResolveIp"/> is true then the IP is resolved to the host name before
            being returned as a value. This is useful if you want to query for machine name from the host value of 
            a URI but the URI might contain an IP address.</remarks>
        </member>
        <member name="P:Microsoft.Test.Environment.Values.UriValueNode.Value">
            <summary>
            Returns the portion of the URI that this property references.
            </summary>
            <value>The current value.</value>
            <remarks> 
            If the <see cref="P:Microsoft.Test.Environment.Values.UriValueNode.UriPart"/> to parse is "Host" and <see cref="P:Microsoft.Test.Environment.Values.UriValueNode.ResolveIP"/> 
            is set to true then this property will attempt to resolve the host name from the URI in question if 
            the given URI contains an IP rather than a host name.
            </remarks>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.MappingNodeCollection">
            <summary>
            Represents a collection of mapping nodes that enforces unique node names.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNodeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MappingNodeCollection"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNodeCollection.Load(Microsoft.Test.Environment.Model.MappingNode,System.Xml.XmlElement,System.String)">
            <summary>
            Creates mapping nodes and loads data into them from the child XML elements with the
            specified name and specified configuration element.
            </summary>
            <param name="parentNode">The configuration node for the mapping nodes in this collection..</param>
            <param name="parent">The configuration element.</param>
            <param name="elementName">Name of the child element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNodeCollection.Save(System.Xml.XmlElement,System.String)">
            <summary>
            Persists all nodes in this collection as child elements of the specified configuration
            element.
            </summary>
            <param name="parent">The configuration XML element which contains the child elements.</param>
            <param name="elementName">Name of the child element.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="parent"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">if <paramref name="elementName"/> is <c>null</c> or empty.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNodeCollection.GetKeyForItem(Microsoft.Test.Environment.Model.MappingNode)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.MappingNodeCollection.CreateEmptyCopy">
            <summary>
            When implemented in a derived class, creates an empty copy of this collection.
            </summary>
            <returns>
            An empty copy of this collection with the same state except for the items in the collection.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Alias_FailedToLocateImplementationType">
            <summary>
              Looks up a localized string similar to Failed to locate the implementation type {0} for the alias {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_BringGroupOnlineTimedOut">
            <summary>
              Looks up a localized string similar to Operation timed out after {0} waiting for group {1} in cluster {2} to be brought online..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_BringServiceOnlineTimedOut">
            <summary>
              Looks up a localized string similar to Operation timed out after {0} waiting for service {1} in group {2} in cluster {3} to be brought online..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_EnumerationContainedNoNodes">
            <summary>
              Looks up a localized string similar to No valid nodes were found in group {0} in cluster {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToBringClusterGroupOnline">
            <summary>
              Looks up a localized string similar to Failed to bring group {0} in cluster {1} online..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToBringResourceOnline">
            <summary>
              Looks up a localized string similar to Failed to bring service {0} in group {1} in cluster {2} online..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToEnumerateNodes">
            <summary>
              Looks up a localized string similar to Failed to enumerate nodes in group {0} in cluster {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToMoveClusterGroup">
            <summary>
              Looks up a localized string similar to Failed to move cluster group {0} in cluster {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToOpenClusterGroup">
            <summary>
              Looks up a localized string similar to Failed to open cluster group {0} in cluster {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToOpenClusterManager">
            <summary>
              Looks up a localized string similar to Failed to open cluster manager for cluster {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToOpenClusterNode">
            <summary>
              Looks up a localized string similar to Failed to open cluster node {0} in cluster {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToOpenClusterService">
            <summary>
              Looks up a localized string similar to Failed to open cluster service {0} in group {1} in cluster {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToOpenEnumerator">
            <summary>
              Looks up a localized string similar to Failed to retrieve an enumerator of value nodes for group {0} in cluster {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToRetrieveGroupResourceState">
            <summary>
              Looks up a localized string similar to Failed to retrieve the state of the group {0} in cluster {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToRetrieveResourceState">
            <summary>
              Looks up a localized string similar to Failed to retrieve the state of the service {0} in group {1} in cluster {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToSendClusterGroupOffline">
            <summary>
              Looks up a localized string similar to Failed to send group {0} in cluster {1} offline..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_FailedToSendResourceOffline">
            <summary>
              Looks up a localized string similar to Failed to send service {0} in group {1} in cluster {2} offline..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_SendGroupOfflineTimedOut">
            <summary>
              Looks up a localized string similar to Operation timed out after {0} waiting for group {1} in cluster {2} to be taken offline..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ClusteredGroupComponent_SendServiceOfflineTimedOut">
            <summary>
              Looks up a localized string similar to Operation timed out after {0} waiting for service {1} in group {2} in cluster {3} to be taken offline..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ComponentProperty_CannotModifyReadOnlyProperty">
            <summary>
              Looks up a localized string similar to The property {0} of component {1} is read-only. The value cannot be modified..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ComponentProperty_InvalidAlias">
            <summary>
              Looks up a localized string similar to No valid substitutions were found for the alias {0} when expanding a string value in property {0} of component {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.DefaultEnvironmentTemplateType_ReadOnly">
            <summary>
              Looks up a localized string similar to Cannot modify the default environment template. It is read-only..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.DefaultTemplateType_ReadOnly">
            <summary>
              Looks up a localized string similar to Cannot modify the default template. It is read-only..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.DistributedEnvironment_InvalidRoleReference">
            <summary>
              Looks up a localized string similar to The role {0} referenced by node {1} was not found in the environment template..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.EmptyROKeyedCollection_CollectionIsReadOnly">
            <summary>
              Looks up a localized string similar to This IKeyedCollection is read only. It cannot be modified..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.EnvironmentTemplate_FailedToRetrieveEmbeddedTemplateFileSchema">
            <summary>
              Looks up a localized string similar to Failed to retrieve a read only file stream to the embedded configuration template file schema..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.EnvironmentTemplate_InvalidConfigurationTemplateDocument">
            <summary>
              Looks up a localized string similar to The configuration template document is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.EnvironmentTemplate_InvalidTemplateReference">
            <summary>
              Looks up a localized string similar to The template {0} referenced by role {1} was not found in this environment template..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ItemPath_InvalidPath">
            <summary>
              Looks up a localized string similar to Failed to parse the path {0} into an item path. The format is not recognized..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.LinkedConfigValueNode_CannotModifyDirectly">
            <summary>
              Looks up a localized string similar to Cannot modify a linked value node directly. Traverse links and update the individual nodes..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.LinkedConfigValueNode_InvalidLink">
            <summary>
              Looks up a localized string similar to The link at position {0} in property {1} of component {2} is invalid. It contains no link. Link text is {3}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.LinkedConfigValueNode_LinkedComponentNotFound">
            <summary>
              Looks up a localized string similar to The referenced component {0} in link {1} for the property {2} in component {3} was not found..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.LinkedConfigValueNode_LinkedPropertyNotFound">
            <summary>
              Looks up a localized string similar to The referenced property {0} in link {1} for the property {2} in component {3} was not found..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.LinkedConfigValueNode_NoLinksSpecified">
            <summary>
              Looks up a localized string similar to No links were specified for linked property {0} in component {1}. Initialization value is {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.MacroLexer_BadUTF8Character">
            <summary>
              Looks up a localized string similar to BadUTF8 Character.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Mapping_InvalidMappingDocument">
            <summary>
              Looks up a localized string similar to The mapping document is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Miscellaneous_IdCannotBeEmpty">
            <summary>
              Looks up a localized string similar to Unique IDs cannot be equal to Guid.Empty..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Miscellaneous_InvalidChildElementName">
            <summary>
              Looks up a localized string similar to Invalid child element name. It cannot be NULL or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Miscellaneous_InvalidName">
            <summary>
              Looks up a localized string similar to The name of named entities such as a component, property, template, template reference or alias cannot be NULL or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Moniker_InvalidKey">
            <summary>
              Looks up a localized string similar to A moniker key cannot be NULL or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.MultiValueCollection_NameMustMatch">
            <summary>
              Looks up a localized string similar to The property {0} added to this MultipleValueCollection does not have the same name as the collection which is {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.OrderedKeyedCollection_DuplicateKey">
            <summary>
              Looks up a localized string similar to An item with key {0} already exists in this collection..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.PathValueNode_InvalidConversionDirection">
            <summary>
              Looks up a localized string similar to Invalid path conversion direction {0} for PathValueNode {1} in component {2}. The conversion direction must be either ToUNC or ToLocal..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.PerformanceCounterNode_InvalidCategoryName">
            <summary>
              Looks up a localized string similar to Invalid category name for performance counter property node. {0} entry not found in the value moniker for {1} in component {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.PerformanceCounterNode_InvalidCounterName">
            <summary>
              Looks up a localized string similar to Invalid counter name for performance counter property node. {0} entry not found in the value moniker for {1} in component {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.PerformanceCounterNode_InvalidMachineName">
            <summary>
              Looks up a localized string similar to Invalid machine name for performance counter property node. {0} entry not found in the value moniker for {1} in component {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Property_FailedToLocateImplementationType">
            <summary>
              Looks up a localized string similar to Failed to locate the implementation type {0} for the property {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueNode_InvalidBaseRegistryKey">
            <summary>
              Looks up a localized string similar to The base key {0} is invalid for property {1} in component {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueNode_InvalidInitializationMoniker">
            <summary>
              Looks up a localized string similar to The moniker {0} for the property {1} in component {2} is invalid. At least one of the keys {3} or {4} is missing..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueNode_InvalidRegistryKey">
            <summary>
              Looks up a localized string similar to Invalid registry key {0} in property {1} for component {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueNode_OpenRegistryKeyFailed">
            <summary>
              Looks up a localized string similar to Failed to open value {0} under key {1} from machine {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueWmi_CouldNotRetrieveValue">
            <summary>
              Looks up a localized string similar to Could not retrieve the value {0} under the registry key {1}\{2} on server {3}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueWmi_CreateFailed">
            <summary>
              Looks up a localized string similar to Failed to create registry key {0} (its possible that a remote operation failed). Error code is {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueWmi_DeleteFailed">
            <summary>
              Looks up a localized string similar to Failed to delete registry key {0} (its possible that a remote operation failed). Error code is {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueWmi_DidNotFindValue">
            <summary>
              Looks up a localized string similar to Could not find the value {0} under the registry key {1}\{2} on server {3}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueWmi_FailedToEnumerateValues">
            <summary>
              Looks up a localized string similar to Could not enumerate values for the registry key {0}\{1} on server {3}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueWmi_InvalidInitialization">
            <summary>
              Looks up a localized string similar to The initialization moniker for the property {0} in component {1} is invalid. The {2} entry was not found in moniker {3}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueWmi_SetValueFailed">
            <summary>
              Looks up a localized string similar to Failed to update the value {0} of the subkey {1}  (its possible that a remote operation failed). Error code is {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueWmi_TypeNotSupported">
            <summary>
              Looks up a localized string similar to The registry value type {0} is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.RegistryValueWmiNode_OpenRegistryKeyFailed2">
            <summary>
              Looks up a localized string similar to Failed to open registry key {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Role_FailedToLocateImplementationType">
            <summary>
              Looks up a localized string similar to Failed to locate the implementation type {0} for the template {1} referenced by the role {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Role_InvalidTemplateReference">
            <summary>
              Looks up a localized string similar to The template reference cannot be NULL or empty for the role {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Role_NoSaveOrLoadDefault">
            <summary>
              Looks up a localized string similar to The default Role instance cannot be loaded or saved..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Role_ReadOnly">
            <summary>
              Looks up a localized string similar to The default role instance is read-only. Its properties cannot be modified..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ServerXmlValueNode_FailedToRetrieveRemoteRegistryValue">
            <summary>
              Looks up a localized string similar to Failed to retrieve the remote registry value {0} under the subkey {1} from the remote machine {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ServerXmlValueNode_InvalidConfigurationDrive">
            <summary>
              Looks up a localized string similar to Invalid root drive for configuration path location {0} on server {1} (registry path {2}) for property {3} in component {4}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ServerXmlValueNode_InvalidInitializationMoniker">
            <summary>
              Looks up a localized string similar to The initialization moniker {0} for property {1} in component {2} is invalid. At least one of the keys {3}, {4} or {4} is missing..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ServerXmlValueNode_ReadValueFailed">
            <summary>
              Looks up a localized string similar to Failed to locate the value for key &apos;{0}&apos; on the server {1} in the files &apos;{2}&apos; at the path &apos;{3}&apos;. Individual exception information: {4}.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ServiceComponent_FailedToStartService">
            <summary>
              Looks up a localized string similar to Failed to start service {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.ServiceComponent_ServiceNotStarting">
            <summary>
              Looks up a localized string similar to Cannot block until started on a service that does not indicate it is starting. Service name is {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Template_NoLoadDefault">
            <summary>
              Looks up a localized string similar to The default Template instance cannot be loaded..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_Beginning">
            <summary>
              Looks up a localized string similar to Beginning new change set..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_Committing">
            <summary>
              Looks up a localized string similar to Committing transaction for {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_Creating">
            <summary>
              Looks up a localized string similar to Creating new transaction for {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_Deleting">
            <summary>
              Looks up a localized string similar to Deleting transaction for {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_EndingCurrentChangeset">
            <summary>
              Looks up a localized string similar to Ending current changeset..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_ExceptionDuringRevert">
            <summary>
              Looks up a localized string similar to Exception {0} occurred while reverting value..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_InvalidItemPath">
            <summary>
              Looks up a localized string similar to The path to the item whose value is being modified cannot be NULL or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_Persisting">
            <summary>
              Looks up a localized string similar to Persisting current changeset..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_RevertComplete">
            <summary>
              Looks up a localized string similar to done reverting for {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_RevertFailedToFindItem">
            <summary>
              Looks up a localized string similar to failed to locate item {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_Reverting">
            <summary>
              Looks up a localized string similar to Reverting transaction for {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.Transaction_RollingBack">
            <summary>
              Looks up a localized string similar to Rolling back transaction for {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.TransactionManager_BeginChangesNotCalled">
            <summary>
              Looks up a localized string similar to You must first initiate a new changeset by invoking ITransactionManager::BeginChanges..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.WildcardResolver_InvalidMacro">
            <summary>
              Looks up a localized string similar to Invalid environment variable reference {0} in URI {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlTransactionLog_CannotAddUnfinishedTransaction">
            <summary>
              Looks up a localized string similar to A transaction that is not marked finished cannot be persisted to the transaction log. Transaction ID is {0}, item path is {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlTransactionLog_CannotInitiateRecovery">
            <summary>
              Looks up a localized string similar to Cannot initiate recovery on an environment instance when it is not read only..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlTransactionLog_CannotModifyDatabaseNameAfterInitialization">
            <summary>
              Looks up a localized string similar to The database name for the transaction log cannot be modified after the log has been initialized..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlTransactionLog_CannotModifyLocationAfterInitialization">
            <summary>
              Looks up a localized string similar to The location for the transaction log cannot be modified after the log has been initialized..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlTransactionLog_CannotRemoveUnfinishedTransaction">
            <summary>
              Looks up a localized string similar to A transaction that is not marked finished cannot be removed from the transaction log. Transaction ID is {0}, item path is {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlTransactionLog_InvalidLocation">
            <summary>
              Looks up a localized string similar to Invalid transaction log location {0}. The log location must be a folder path and it must exist on disk..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlTransactionLog_InvalidTransactionLog">
            <summary>
              Looks up a localized string similar to Invalid transaction log file path {0}. It must be a valid file and must exist on disk..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlTransactionLog_TransactionLogNotInitialized">
            <summary>
              Looks up a localized string similar to The transaction log is not initialized. Transaction ID is {0}, item path is {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlTransactonLog_InvalidDatabaseName">
            <summary>
              Looks up a localized string similar to Invalid transaction log database name. The name cannot be NULL or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlValueNode_InvalidInitializationMoniker">
            <summary>
              Looks up a localized string similar to Invalid initialization moniker {0} for property {1} in component {2}. At least one of the moniker keys {3}, {4} or {4} is missing..
            </summary>
        </member>
        <member name="P:Microsoft.Test.Environment.Properties.Resources.XmlValueNode_NoNodesFound">
            <summary>
              Looks up a localized string similar to The XPath expression {0} failed to retrieve any nodes in the file {1}..
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.Alias">
            <summary>
            Represents data about a single Alias child element for a EnvironmentTemplateNode element
            in the test configuration template file.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Alias.NameAttributeKey">
            <summary>The name of the attribute used to persist the name of an alias to XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Alias.ValueAttributeKey">
            <summary>The name of the attribute used to persist the value of an alias to XML.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Alias.aliasValue">
            <summary>The unexpanded template value of this alias.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.Alias.name">
            <summary>The name of this macro.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Alias.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Test.Environment.Model.Alias"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Alias.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Alias"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Alias"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Alias"/>; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Alias.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Alias"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Alias.Load(System.Xml.XmlElement)">
            <summary>
            Loads data into this Alias instance from the specified XML element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Alias.Save(System.Xml.XmlElement)">
            <summary>
            Saves data from this Alias instance into the specified XML element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Alias.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Alias"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Alias"/>.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.Alias.CreateConfigurationItem(Microsoft.Test.Environment.DistributedEnvironment,Microsoft.Test.Environment.DistributedEnvironmentBuilder)">
            <summary>
            Creates the configuration item that represents an alias.
            </summary>
            <param name="environment">The environment that is requesting the item to be created.</param>
            <param name="builder">The builder that is invoking this method to create an instance of a configuration alias to add to <paramref name="environment"/>.</param>
            <returns>
            An instance of <see cref="T:ConfigurationAlias"/> or <c>null</c> if this Alias is invalid.
            </returns>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Alias.IsValid">
            <summary>
            Gets a value indicating whether this alias instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Alias.Name">
            <summary>
            Gets or sets the name of this alias.
            </summary>
            <value>The name of this alias.</value>
            /// <exception cref="T:System.ArgumentException">If <paramref name="value"/> is <c>null</c> or empty.</exception>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.Alias.Value">
            <summary>
            Gets or sets the unexpanded value of this alias.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.AliasCollection">
            <summary>
            A collection to hold <see cref="T:Microsoft.Test.Environment.Model.Alias"/> values. This collection automatically
            enforces unique alias names.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.AliasCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AliasCollection"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.AliasCollection.Load(System.Xml.XmlElement,System.String)">
            <summary>
            Instantiates <see cref="T:Alias"/> instances from the XML elements that are children of the 
            given configuration element and have the specified name and adds the instances to this collection.
            </summary>
            <param name="parent">The parent element.</param>
            <param name="elementName">Name of the child element(s).</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="parent"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.AliasCollection.Save(System.Xml.XmlElement,System.String)">
            <summary>
            Persists all valid properties in this collection as child elements of the specified configuration
            element.
            </summary>
            <param name="parent">The configuration XML element which contains the child elements.</param>
            <param name="elementName">Name of the child element.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="parent"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">if <paramref name="elementName"/> is <c>null</c> or empty.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.AliasCollection.GetKeyForItem(Microsoft.Test.Environment.Model.Alias)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.AliasCollection.CreateEmptyCopy">
            <summary>
            When implemented in a derived class, creates an empty copy of this collection.
            </summary>
            <returns>
            An empty copy of this collection with the same state except for the items in the collection.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.PropertyCollection">
            <summary>
            A collection to hold <see cref="T:Microsoft.Test.Environment.Model.Property"/> values. This collection automatically
            enforces unique property names.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.PropertyCollection.ItemElementKey">
            <summary>The name of the XML element that is used to persist data for a single item in a multi-valued property.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.PropertyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PropertyCollection"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.PropertyCollection.Load(System.Xml.XmlElement,System.String)">
            <summary>
            Instantiates <see cref="T:Property"/> instances from the XML elements that are children of the 
            given configuration element and have the specified name and adds the instances to this collection.
            </summary>
            <param name="parent">The configuration element.</param>
            <param name="elementName">Name of the child element(s).</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="parent"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.PropertyCollection.Save(System.Xml.XmlElement,System.String)">
            <summary>
            Persists all valid properties in this collection as child elements of the specified configuration
            element.
            </summary>
            <param name="parent">The configuration XML element which contains the child elements.</param>
            <param name="elementName">Name of the child element.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="parent"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">if <paramref name="elementName"/> is <c>null</c> or empty.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.PropertyCollection.GetKeyForItem(Microsoft.Test.Environment.Model.Property)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.PropertyCollection.CreateEmptyCopy">
            <summary>
            When implemented in a derived class, creates an empty copy of this collection.
            </summary>
            <returns>
            An empty copy of this collection with the same state except for the items in the collection.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.RoleCollection">
            <summary>
            A collection to hold <see cref="T:Microsoft.Test.Environment.Model.Role"/> instances. This collection automatically
            enforces unique role names.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.RoleCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RoleCollection"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.RoleCollection.Load(System.Xml.XmlElement,System.String)">
            <summary>
            Instantiates <see cref="T:Role"/> instances from the XML elements that are children of the 
            given configuration element and have the specified name and adds the instances to this collection.
            </summary>
            <param name="parent">The configuration element.</param>
            <param name="elementName">Name of the child element(s).</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="parent"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.RoleCollection.Save(System.Xml.XmlElement,System.String)">
            <summary>
            Persists all valid roles in this collection as child elements of the specified configuration
            element.
            </summary>
            <param name="parent">The configuration XML element which contains the child roles.</param>
            <param name="elementName">Name of the child element.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="parent"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">if <paramref name="elementName"/> is <c>null</c> or empty.</exception>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.RoleCollection.GetKeyForItem(Microsoft.Test.Environment.Model.Role)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.RoleCollection.CreateEmptyCopy">
            <summary>
            When implemented in a derived class, creates an empty copy of this collection.
            </summary>
            <returns>
            An empty copy of this collection with the same state except for the items in the collection.
            </returns>
        </member>
        <member name="T:Microsoft.Test.Environment.SafeNativeMethods">
            <summary>
            Contains native methods.
            </summary>
        </member>
        <member name="T:Microsoft.Test.Environment.Model.ValidationData">
            <summary>
            Container to contain error messages or warning messages or exceptions raised while validation
            a configuration template file.
            </summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.ValidationData.errors">
            <summary>The collection of error messages.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.ValidationData.exceptions">
            <summary>The collection of error messages.</summary>
        </member>
        <member name="F:Microsoft.Test.Environment.Model.ValidationData.warnings">
            <summary>The collection of warning messages.</summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.ValidationData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ValidationData"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.ValidationData.Clear">
            <summary>
            Clears all errors, warnings and exceptions recorded in this container.
            </summary>
        </member>
        <member name="M:Microsoft.Test.Environment.Model.ValidationData.SchemaValidationHandler(System.Object,System.Xml.Schema.ValidationEventArgs)">
            <summary>
            Captures validation warnings raised when a configuration template file is loaded. The 
            warnings or errors can be retrieved from the ValidationData property.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Xml.Schema.ValidationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.ValidationData.Errors">
            <summary>
            Gets a read-only <see cref="T:System.Collections.Generic.ICollection{T}"/> of the error
            messages recorded while loading a configuration template file.
            </summary>
            <value>The error messages.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.ValidationData.Exceptions">
            <summary>
            Gets a read-only <see cref="T:System.Collections.Generic.ICollection{T}"/> of the exceptions
            recorded while loading a configuration template file.
            </summary>
            <value>The exceptions.</value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.ValidationData.HasErrors">
            <summary>
            Gets a value indicating whether any errors are contained in this validation container.
            </summary>
            <value>
            	<c>true</c> if schema validation produced errors or exceptions; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.ValidationData.HasWarnings">
            <summary>
            Gets a value indicating whether any warnings are contained in this validation container.
            </summary>
            <value>
            	<c>true</c> if schema validation produced warnings; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Test.Environment.Model.ValidationData.Warnings">
            <summary>
            Gets a read-only <see cref="T:System.Collections.Generic.ICollection{T}"/> of the warning
            messages recorded while loading a configuration template file.
            </summary>
            <value>The warning messages.</value>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.Service">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.#ctor">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.unpauseDeployment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.unpauseDeploymentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.unpauseDeploymentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addRemoveRolesActiveEnvironment(System.Int32,Microsoft.Test.Environment.Cooper.Role[],Microsoft.Test.Environment.Cooper.Role[],Microsoft.Test.Environment.Cooper.Macro[])">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addRemoveRolesActiveEnvironmentAsync(System.Int32,Microsoft.Test.Environment.Cooper.Role[],Microsoft.Test.Environment.Cooper.Role[],Microsoft.Test.Environment.Cooper.Macro[])">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addRemoveRolesActiveEnvironmentAsync(System.Int32,Microsoft.Test.Environment.Cooper.Role[],Microsoft.Test.Environment.Cooper.Role[],Microsoft.Test.Environment.Cooper.Macro[],System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineRequestsQueue">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineRequestsQueueAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineRequestsQueueAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineStatistics">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineStatisticsAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineStatisticsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOsImagesAll">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOsImagesAllAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOsImagesAllAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertOSImage(System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertOSImageAsync(System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertOSImageAsync(System.String,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateOSImage(System.Int32,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateOSImageAsync(System.Int32,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateOSImageAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeOSImage(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeOSImageAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeOSImageAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertOSImageType(System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertOSImageTypeAsync(System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertOSImageTypeAsync(System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateOSImageType(System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateOSImageTypeAsync(System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateOSImageTypeAsync(System.Int32,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeOSImageType(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeOSImageTypeAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeOSImageTypeAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getCustomTopologyMaps">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getCustomTopologyMapsAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getCustomTopologyMapsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertCustomTopologyMap(System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertCustomTopologyMapAsync(System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertCustomTopologyMapAsync(System.String,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateCustomTopologyMap(System.Int32,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateCustomTopologyMapAsync(System.Int32,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateCustomTopologyMapAsync(System.Int32,System.String,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeCustomTopologyMap(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeCustomTopologyMapAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeCustomTopologyMapAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isCooperAdministrator(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isCooperAdministratorAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isCooperAdministratorAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getDropShares">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getDropSharesAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getDropSharesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getProductBuilds(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getProductBuildsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getProductBuildsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLatestKnownGoodBuildConfiguration(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLatestKnownGoodBuildConfigurationAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLatestKnownGoodBuildConfigurationAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfiguration(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getSpecficBuildConfiguration(System.String,System.String,Microsoft.Test.Environment.Cooper.EnvironmentConfigurations)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getSpecficBuildConfigurationAsync(System.String,System.String,Microsoft.Test.Environment.Cooper.EnvironmentConfigurations)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getSpecficBuildConfigurationAsync(System.String,System.String,Microsoft.Test.Environment.Cooper.EnvironmentConfigurations,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationForCustomTopology(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationForCustomTopologyAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationForCustomTopologyAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getSpecificBuildConfigurationWithReimage(System.String,System.String,Microsoft.Test.Environment.Cooper.EnvironmentConfigurations)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getSpecificBuildConfigurationWithReimageAsync(System.String,System.String,Microsoft.Test.Environment.Cooper.EnvironmentConfigurations)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getSpecificBuildConfigurationWithReimageAsync(System.String,System.String,Microsoft.Test.Environment.Cooper.EnvironmentConfigurations,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationWithReimageForCustomTopology(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationWithReimageForCustomTopologyAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationWithReimageForCustomTopologyAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationWithoutValidation(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationWithoutValidationAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationWithoutValidationAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.mergeDelta(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,Microsoft.Test.Environment.Cooper.EnvironmentConfiguration)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.mergeDeltaAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,Microsoft.Test.Environment.Cooper.EnvironmentConfiguration)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.mergeDeltaAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertPostDeploymentActions(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertPostDeploymentActionsAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.insertPostDeploymentActionsAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentUsingDelta(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentUsingDeltaAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentUsingDeltaAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.requestEnvironment(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentWithPreassignedMachineList(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,Microsoft.Test.Environment.Cooper.MachinePreassignments)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentWithPreassignedMachineListAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,Microsoft.Test.Environment.Cooper.MachinePreassignments)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentWithPreassignedMachineListAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,Microsoft.Test.Environment.Cooper.MachinePreassignments,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queueActionSequence(System.Int32,Microsoft.Test.Environment.Cooper.ActionSequence)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queueActionSequenceAsync(System.Int32,Microsoft.Test.Environment.Cooper.ActionSequence)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queueActionSequenceAsync(System.Int32,Microsoft.Test.Environment.Cooper.ActionSequence,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.releaseEnvironment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.releaseEnvironmentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.releaseEnvironmentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentActive(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentActiveAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentActiveAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentStatus(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentStatusAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentStatusAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentRequest(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentRequestAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentRequestAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOriginalEnvironmentConfiguration(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOriginalEnvironmentConfigurationAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOriginalEnvironmentConfigurationAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getCurrentEnvironmentConfiguration(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getCurrentEnvironmentConfigurationAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getCurrentEnvironmentConfigurationAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.validateBuildConfiguration(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.validateBuildConfigurationAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.validateBuildConfigurationAsync(Microsoft.Test.Environment.Cooper.EnvironmentConfiguration,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.installComponent(System.Int32,System.String,System.String,System.String,Microsoft.Test.Environment.Cooper.LoggingLevel,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.installComponentAsync(System.Int32,System.String,System.String,System.String,Microsoft.Test.Environment.Cooper.LoggingLevel,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.installComponentAsync(System.Int32,System.String,System.String,System.String,Microsoft.Test.Environment.Cooper.LoggingLevel,System.Boolean,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.installComponentWithMacro(System.Int32,System.String,System.String,System.String,Microsoft.Test.Environment.Cooper.LoggingLevel,System.Boolean,System.Boolean,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.installComponentWithMacroAsync(System.Int32,System.String,System.String,System.String,Microsoft.Test.Environment.Cooper.LoggingLevel,System.Boolean,System.Boolean,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.installComponentWithMacroAsync(System.Int32,System.String,System.String,System.String,Microsoft.Test.Environment.Cooper.LoggingLevel,System.Boolean,System.Boolean,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.uninstallComponent(System.Int32,System.String,System.String,System.String,Microsoft.Test.Environment.Cooper.LoggingLevel,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.uninstallComponentAsync(System.Int32,System.String,System.String,System.String,Microsoft.Test.Environment.Cooper.LoggingLevel,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.uninstallComponentAsync(System.Int32,System.String,System.String,System.String,Microsoft.Test.Environment.Cooper.LoggingLevel,System.Boolean,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getRoleActionStatus(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getRoleActionStatusAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getRoleActionStatusAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.validateDomainAccount(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.validateDomainAccountAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.validateDomainAccountAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addMachineAdministrator(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addMachineAdministratorAsync(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addMachineAdministratorAsync(System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addEnvironmentAdministrator(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addEnvironmentAdministratorAsync(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addEnvironmentAdministratorAsync(System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeMachineAdministrator(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeMachineAdministratorAsync(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeMachineAdministratorAsync(System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeEnvironmentAdministrator(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeEnvironmentAdministratorAsync(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.removeEnvironmentAdministratorAsync(System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentOwner(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentOwnerAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentOwnerAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentAdministratorsForEnvironment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentAdministratorsForEnvironmentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentAdministratorsForEnvironmentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsWithCurrentUserAccessibility">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsWithCurrentUserAccessibilityAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsWithCurrentUserAccessibilityAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getReleasedEnvironmentsWithCurrentUserAccessibility">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getReleasedEnvironmentsWithCurrentUserAccessibilityAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getReleasedEnvironmentsWithCurrentUserAccessibilityAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsAccessibleByUser(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsAccessibleByUserAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsAccessibleByUserAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironments">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentActivity(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentActivityAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentActivityAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForEnvironment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForEnvironmentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForEnvironmentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForMachine(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForMachineAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForMachineAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForUser(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForUserAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForUserAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateEnvironment(System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateEnvironmentAsync(System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateEnvironmentAsync(System.Int32,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getUsersForEnvironment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getUsersForEnvironmentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getUsersForEnvironmentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachinesForEnvironment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachinesForEnvironmentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachinesForEnvironmentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineActionHistoryForEnvironment(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineActionHistoryForEnvironmentAsync(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineActionHistoryForEnvironmentAsync(System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentIdFromMachineName(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentIdFromMachineNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getEnvironmentIdFromMachineNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.resetAction(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.resetActionAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.resetActionAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.skipAction(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.skipActionAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.skipActionAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineAssignments">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineAssignmentsAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineAssignmentsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineAssignmentsOfEnvironment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineAssignmentsOfEnvironmentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachineAssignmentsOfEnvironmentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.releaseMachine(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.releaseMachineAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.releaseMachineAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.deleteMachine(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.deleteMachineAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.deleteMachineAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setMachineOnline(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setMachineOnlineAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setMachineOnlineAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setMachineOffline(System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setMachineOfflineAsync(System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setMachineOfflineAsync(System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isLabInRedmondDomain(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isLabInRedmondDomainAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isLabInRedmondDomainAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getUsableLabs">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getUsableLabsAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getUsableLabsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getUsersForLab(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getUsersForLabAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getUsersForLabAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOwnedLabs">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOwnedLabsAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOwnedLabsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLab(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLabAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLabAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLabAllocations">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLabAllocationsAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLabAllocationsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachinesForLab(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachinesForLabAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachinesForLabAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.createLab(Microsoft.Test.Environment.Cooper.Lab)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.createLabAsync(Microsoft.Test.Environment.Cooper.Lab)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.createLabAsync(Microsoft.Test.Environment.Cooper.Lab,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateLab(Microsoft.Test.Environment.Cooper.Lab)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateLabAsync(Microsoft.Test.Environment.Cooper.Lab)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.updateLabAsync(Microsoft.Test.Environment.Cooper.Lab,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.resetAllActionsForMachine(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.resetAllActionsForMachineAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.resetAllActionsForMachineAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.startUpEnvironment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.startUpEnvironmentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.startUpEnvironmentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentAdministrator(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentAdministratorAsync(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentAdministratorAsync(System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentInRedmondDomain(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentInRedmondDomainAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentInRedmondDomainAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentClonable(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentClonableAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.isEnvironmentClonableAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachines">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachinesAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMachinesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getIpAddresses(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getIpAddressesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getIpAddressesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setEnvironmentReservationEnd(System.Int32,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setEnvironmentReservationEndAsync(System.Int32,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setEnvironmentReservationEndAsync(System.Int32,System.Nullable{System.DateTime},System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getWebHitCountForToday">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getWebHitCountForTodayAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getWebHitCountForTodayAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getWebHitCountsToDate">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getWebHitCountsToDateAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getWebHitCountsToDateAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMacrosForEnvironment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMacrosForEnvironmentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getMacrosForEnvironmentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getRawMacrosForEnvironment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getRawMacrosForEnvironmentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getRawMacrosForEnvironmentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setRawMacrosForEnvironment(System.Int32,Microsoft.Test.Environment.Cooper.Macro[])">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setRawMacrosForEnvironmentAsync(System.Int32,Microsoft.Test.Environment.Cooper.Macro[])">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.setRawMacrosForEnvironmentAsync(System.Int32,Microsoft.Test.Environment.Cooper.Macro[],System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getAdCenterUrls(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getAdCenterUrlsAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getAdCenterUrlsAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLatestAnnouncement">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLatestAnnouncementAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getLatestAnnouncementAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addAnnouncement(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addAnnouncementAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.addAnnouncementAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOsImageTypes">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOsImageTypesAsync">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOsImageTypesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOsImages(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOsImagesAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.getOsImagesAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.pauseDeployment(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.pauseDeploymentAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.pauseDeploymentAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Microsoft.Test.Environment.Cooper.Service.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.unpauseDeploymentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.addRemoveRolesActiveEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getMachineRequestsQueueCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getMachineStatisticsCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getOsImagesAllCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.insertOSImageCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.updateOSImageCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.removeOSImageCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.insertOSImageTypeCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.updateOSImageTypeCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.removeOSImageTypeCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getCustomTopologyMapsCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.insertCustomTopologyMapCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.updateCustomTopologyMapCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.removeCustomTopologyMapCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.isCooperAdministratorCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getDropSharesCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getProductBuildsCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getLatestKnownGoodBuildConfigurationCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getSpecficBuildConfigurationCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationForCustomTopologyCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getSpecificBuildConfigurationWithReimageCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationWithReimageForCustomTopologyCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getBuildConfigurationWithoutValidationCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.mergeDeltaCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.insertPostDeploymentActionsCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentUsingDeltaCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.requestEnvironmentWithPreassignedMachineListCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.queueActionSequenceCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.releaseEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.isEnvironmentActiveCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getEnvironmentStatusCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getEnvironmentRequestCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getOriginalEnvironmentConfigurationCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getCurrentEnvironmentConfigurationCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.validateBuildConfigurationCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.installComponentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.installComponentWithMacroCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.uninstallComponentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getRoleActionStatusCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.validateDomainAccountCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.addMachineAdministratorCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.addEnvironmentAdministratorCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.removeMachineAdministratorCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.removeEnvironmentAdministratorCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getEnvironmentOwnerCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getEnvironmentAdministratorsForEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsWithCurrentUserAccessibilityCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getReleasedEnvironmentsWithCurrentUserAccessibilityCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsAccessibleByUserCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getEnvironmentsCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getEnvironmentActivityCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForMachineCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.queryAllEventsForUserCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.updateEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getUsersForEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getMachinesForEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getMachineActionHistoryForEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getEnvironmentIdFromMachineNameCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.resetActionCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.skipActionCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getMachineAssignmentsCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getMachineAssignmentsOfEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.releaseMachineCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.deleteMachineCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.setMachineOnlineCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.setMachineOfflineCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.isLabInRedmondDomainCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getUsableLabsCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getUsersForLabCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getOwnedLabsCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getLabCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getLabAllocationsCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getMachinesForLabCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.createLabCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.updateLabCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.resetAllActionsForMachineCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.startUpEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.isEnvironmentAdministratorCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.isEnvironmentInRedmondDomainCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.isEnvironmentClonableCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getMachinesCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getIpAddressesCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.setEnvironmentReservationEndCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getWebHitCountForTodayCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getWebHitCountsToDateCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getMacrosForEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getRawMacrosForEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.setRawMacrosForEnvironmentCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getAdCenterUrlsCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getLatestAnnouncementCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.addAnnouncementCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getOsImageTypesCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.getOsImagesCompleted">
            <remarks/>
        </member>
        <member name="E:Microsoft.Test.Environment.Cooper.Service.pauseDeploymentCompleted">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.Role">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.RoleBase">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Role.Actions">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Role.Macros">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Role.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Role.MachineName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Role.OsImageName">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.OsImageType">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.OsImageType.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.OsImageType.CpuCount">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.OsImageType.TotalPhysicalMemoryInGigabytes">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.OsImageType.Comments">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.Url">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Url.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Url.Path">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.HitCounts">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.HitCounts.Day">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.HitCounts.Hits">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.IpAddress">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.IpAddress.Address">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.IpAddress.DnsSuffix">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.IpAddress.IsDhcp">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.MachineInfo">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.Domain">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.Model">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.CpuArchitecture">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.OperatingSystem">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.WindowsActivationRequired">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.WindowsGracePeriodEnd">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.Online">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.ReservedBy">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.ReservationStart">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.ReservationEnd">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.LastUpdatedAt">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.Heartbeat">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineInfo.ServiceVersion">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.LabAllocation">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabAllocation.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabAllocation.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabAllocation.Domain">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabAllocation.IsPublic">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabAllocation.Machines">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabAllocation.MachinesInUse">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabAllocation.ActiveEnvironments">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabAllocation.Allocation">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.LabUser">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabUser.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabUser.UserId">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabUser.DomainName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabUser.UserOrGroupName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabUser.IsGroup">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabUser.IsOwner">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.LabMachine">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.LabMachine.Name">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.Lab">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Lab.LabMachines">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Lab.LabUsers">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Lab.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Lab.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Lab.Domain">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Lab.IsPublic">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Lab.Enabled">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Lab.DefaultDropShare">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.MachineAssignment">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.DomainName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.CpuArchitecture">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.CpuCount">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.TotalPhysicalMemoryInGigabytes">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.LabName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.OsImageName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.Online">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.EnvironmentId">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.ReservedBy">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.ReservationEnd">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.Heartbeat">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineAssignment.ServiceVersion">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.ActionHistory">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.MachineName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.StepId">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.ActionName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.ActionArgument">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.Completed">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.ErroredOut">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.Status">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.StatusAt">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.Details">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionHistory.WebComment">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.MachineForEnvironment">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineForEnvironment.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineForEnvironment.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineForEnvironment.LogicalName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineForEnvironment.Status">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineForEnvironment.ErroredOut">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineForEnvironment.StatusAt">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineForEnvironment.Heartbeat">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineForEnvironment.Components">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.Log">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Log.EnvironmentId">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Log.Machine">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Log.Action">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Log.EventType">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Log.User">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Log.PerformedAt">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.EnvironmentActivity">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentActivity.EnvironmentId">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentActivity.User">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentActivity.Activity">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentActivity.PerformedAt">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.EnvironmentUser">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentUser.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentUser.DomainName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentUser.UserOrGroupName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentUser.IsGroup">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentUser.IsMachineAdministrator">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentUser.IsEnvironmentAdministrator">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.Environment">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.ProductBuild">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.ProductBuildDropShare">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.DatabaseBackupLocation">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.LabName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.EnvironmentStage">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.Status">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.Failed">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.Owner">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.Active">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.Paused">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.IsStartUpScriptAvailable">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.ReservationStart">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.ReservationEnd">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.MaximumReservationEnd">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.Comments">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.CurrentUser">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.ReleasedBy">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Environment.ReleasedAt">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.DomainAccountValidation">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.DomainAccountValidation.IsValid">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.DomainAccountValidation.IsGroup">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.ValidationError">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ValidationError.Message">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.EnvironmentStatus">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentStatus.EnvironmentStage">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentStatus.IsFailed">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.EnvironmentStage">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.Released">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.RequestReceived">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.WaitingForMachinesToBeAssigned">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.WaitingForOperationsToReimageMachines">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.WaitingForAcknowledgmentFromMachines">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.ReimagingMachinesAndInstallingPrerequisites">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.InstallingPrerequisites">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.InstallingProduct">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.ProductInstallationComplete">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.ReadyForEnvironmentVerificationTests">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.ExecutingEnvironmentVerificationTests">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.ExecutionOfEnvironmentVerificationTestsComplete">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.StartingEnvironment">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentStage.ReadyForUse">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.ActionSequence">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionSequence.Sequences">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionSequence.Macros">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.Sequence">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Sequence.TargetRoles">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Sequence.Actions">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.TargetRole">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.TargetRole.Name">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.Macro">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Macro.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.Macro.Value">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.MachinePreassignment">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachinePreassignment.Role">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachinePreassignment.Machine">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.MachinePreassignments">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachinePreassignments.Assignments">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.ActionSequenceImport">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.ActionSequenceImport.FilePath">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.User">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.User.DomainName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.User.UserOrGroupName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.User.IsGroup">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.Roles">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.MachineAdministrators">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.EnvironmentAdministrators">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.ActionSequenceImports">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.Macros">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.EnvironmentName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.LabName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.BaseBuildDropShare">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.BaseBuild">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.UseLastKnownGoodBuild">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.TfsReportingProjectName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.ReleaseId">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.ReuseEnvironmentId">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.EnvironmentConfiguration.IgnoreDbSetupErrors">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.CustomTopology">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.CustomTopology.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.CustomTopology.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.CustomTopology.BaseTopology">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.CustomTopology.SortOrder">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.CustomTopology.Roles">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.OsImage">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.OsImage.Id">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.OsImage.Name">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.OsImage.FolderName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.OsImage.Description">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.OsImage.OsImageType">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.OsImage.OsImageTypesId">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.MachineStatistics">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineStatistics.LabId">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineStatistics.LabName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineStatistics.OsImageType">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineStatistics.NoOfAvailableMachines">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.MachineRequestsInfo">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineRequestsInfo.EnvironmentId">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineRequestsInfo.LabName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineRequestsInfo.RoleName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineRequestsInfo.OsImageName">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineRequestsInfo.PreassignedMachine">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.MachineRequestsInfo.RequestedAt">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.EnvironmentConfigurations">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentConfigurations.Full">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentConfigurations.DBOnly">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentConfigurations.UIMTDB">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentConfigurations.DBDE">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentConfigurations.DBBI">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentConfigurations.UIMTDBDE">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.EnvironmentConfigurations.PACE">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.LoggingLevel">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.LoggingLevel.Default">
            <remarks/>
        </member>
        <member name="F:Microsoft.Test.Environment.Cooper.LoggingLevel.Verbose">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.unpauseDeploymentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.addRemoveRolesActiveEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachineRequestsQueueCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachineRequestsQueueCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getMachineRequestsQueueCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachineStatisticsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachineStatisticsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getMachineStatisticsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getOsImagesAllCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getOsImagesAllCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getOsImagesAllCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.insertOSImageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.updateOSImageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.removeOSImageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.insertOSImageTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.updateOSImageTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.removeOSImageTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getCustomTopologyMapsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getCustomTopologyMapsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getCustomTopologyMapsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.insertCustomTopologyMapCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.updateCustomTopologyMapCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.removeCustomTopologyMapCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isCooperAdministratorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isCooperAdministratorCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.isCooperAdministratorCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getDropSharesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getDropSharesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getDropSharesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getProductBuildsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getProductBuildsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getProductBuildsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getLatestKnownGoodBuildConfigurationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getLatestKnownGoodBuildConfigurationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getLatestKnownGoodBuildConfigurationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getBuildConfigurationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getBuildConfigurationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getBuildConfigurationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getSpecficBuildConfigurationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getSpecficBuildConfigurationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getSpecficBuildConfigurationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getBuildConfigurationForCustomTopologyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getBuildConfigurationForCustomTopologyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getBuildConfigurationForCustomTopologyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getSpecificBuildConfigurationWithReimageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getSpecificBuildConfigurationWithReimageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getSpecificBuildConfigurationWithReimageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getBuildConfigurationWithReimageForCustomTopologyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getBuildConfigurationWithReimageForCustomTopologyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getBuildConfigurationWithReimageForCustomTopologyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getBuildConfigurationWithoutValidationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getBuildConfigurationWithoutValidationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getBuildConfigurationWithoutValidationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.mergeDeltaCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.mergeDeltaCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.mergeDeltaCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.insertPostDeploymentActionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.insertPostDeploymentActionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.insertPostDeploymentActionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.requestEnvironmentUsingDeltaCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.requestEnvironmentUsingDeltaCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.requestEnvironmentUsingDeltaCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.requestEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.requestEnvironmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.requestEnvironmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.requestEnvironmentWithPreassignedMachineListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.requestEnvironmentWithPreassignedMachineListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.requestEnvironmentWithPreassignedMachineListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.queueActionSequenceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.queueActionSequenceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.queueActionSequenceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.releaseEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isEnvironmentActiveCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isEnvironmentActiveCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.isEnvironmentActiveCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getEnvironmentStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentRequestCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentRequestCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getEnvironmentRequestCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getOriginalEnvironmentConfigurationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getOriginalEnvironmentConfigurationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getOriginalEnvironmentConfigurationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getCurrentEnvironmentConfigurationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getCurrentEnvironmentConfigurationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getCurrentEnvironmentConfigurationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.validateBuildConfigurationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.validateBuildConfigurationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.validateBuildConfigurationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.installComponentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.installComponentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.installComponentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.installComponentWithMacroCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.installComponentWithMacroCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.installComponentWithMacroCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.uninstallComponentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.uninstallComponentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.uninstallComponentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getRoleActionStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getRoleActionStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getRoleActionStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.validateDomainAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.validateDomainAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.validateDomainAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.addMachineAdministratorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.addEnvironmentAdministratorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.removeMachineAdministratorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.removeEnvironmentAdministratorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentOwnerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentOwnerCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getEnvironmentOwnerCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentAdministratorsForEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentAdministratorsForEnvironmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getEnvironmentAdministratorsForEnvironmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentsWithCurrentUserAccessibilityCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentsWithCurrentUserAccessibilityCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getEnvironmentsWithCurrentUserAccessibilityCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getReleasedEnvironmentsWithCurrentUserAccessibilityCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getReleasedEnvironmentsWithCurrentUserAccessibilityCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getReleasedEnvironmentsWithCurrentUserAccessibilityCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentsAccessibleByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentsAccessibleByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getEnvironmentsAccessibleByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getEnvironmentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getEnvironmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentActivityCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentActivityCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getEnvironmentActivityCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.queryAllEventsForEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.queryAllEventsForEnvironmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.queryAllEventsForEnvironmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.queryAllEventsForMachineCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.queryAllEventsForMachineCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.queryAllEventsForMachineCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.queryAllEventsForUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.queryAllEventsForUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.queryAllEventsForUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.updateEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getUsersForEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getUsersForEnvironmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getUsersForEnvironmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachinesForEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachinesForEnvironmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getMachinesForEnvironmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachineActionHistoryForEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachineActionHistoryForEnvironmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getMachineActionHistoryForEnvironmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentIdFromMachineNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getEnvironmentIdFromMachineNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getEnvironmentIdFromMachineNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.resetActionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.skipActionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachineAssignmentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachineAssignmentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getMachineAssignmentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachineAssignmentsOfEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachineAssignmentsOfEnvironmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getMachineAssignmentsOfEnvironmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.releaseMachineCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.deleteMachineCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.setMachineOnlineCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.setMachineOfflineCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isLabInRedmondDomainCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isLabInRedmondDomainCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.isLabInRedmondDomainCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getUsableLabsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getUsableLabsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getUsableLabsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getUsersForLabCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getUsersForLabCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getUsersForLabCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getOwnedLabsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getOwnedLabsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getOwnedLabsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getLabCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getLabCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getLabCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getLabAllocationsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getLabAllocationsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getLabAllocationsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachinesForLabCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachinesForLabCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getMachinesForLabCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.createLabCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.updateLabCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.resetAllActionsForMachineCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.startUpEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isEnvironmentAdministratorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isEnvironmentAdministratorCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.isEnvironmentAdministratorCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isEnvironmentInRedmondDomainCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isEnvironmentInRedmondDomainCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.isEnvironmentInRedmondDomainCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isEnvironmentClonableCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.isEnvironmentClonableCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.isEnvironmentClonableCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachinesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMachinesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getMachinesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getIpAddressesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getIpAddressesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getIpAddressesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.setEnvironmentReservationEndCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getWebHitCountForTodayCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getWebHitCountForTodayCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getWebHitCountForTodayCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getWebHitCountsToDateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getWebHitCountsToDateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getWebHitCountsToDateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMacrosForEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getMacrosForEnvironmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getMacrosForEnvironmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getRawMacrosForEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getRawMacrosForEnvironmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getRawMacrosForEnvironmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.setRawMacrosForEnvironmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getAdCenterUrlsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getAdCenterUrlsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getAdCenterUrlsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getLatestAnnouncementCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getLatestAnnouncementCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getLatestAnnouncementCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.addAnnouncementCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getOsImageTypesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getOsImageTypesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getOsImageTypesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getOsImagesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.getOsImagesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Microsoft.Test.Environment.Cooper.getOsImagesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Microsoft.Test.Environment.Cooper.pauseDeploymentCompletedEventHandler">
            <remarks/>
        </member>
    </members>
</doc>
