//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 10/12/2016 11:43:43 AM
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
namespace Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference
{
    /// <summary>
    /// There are no comments for TestContext in the schema.
    /// </summary>
    public partial class TestContext : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new TestContext object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public TestContext(global::System.Uri serviceRoot) :
                base(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
            this.UrlKeyDelimiter = global::Microsoft.OData.Client.DataServiceUrlKeyDelimiter.Slash;
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        protected new global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "Microsoft.Test.OData.Services.PrimitiveKeysService", "Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            if (clientType.Namespace.Equals("Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference", global::System.StringComparison.Ordinal))
            {
                return string.Concat("Microsoft.Test.OData.Services.PrimitiveKeysService.", clientType.Name);
            }
            return null;
        }

        /// <summary>
        /// There are no comments for 
        /// +in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmDateTime> EdmDateTimeSet
        {
            get
            {
                if ((this._EdmDateTimeSet == null))
                {
                    this._EdmDateTimeSet = base.CreateQuery<EdmDateTime>("EdmDateTimeSet");
                }
                return this._EdmDateTimeSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmDateTime> _EdmDateTimeSet;
        
        /// <summary>
        /// There are no comments for EdmDateTimeSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public void AddToEdmDateTimeSet(EdmDateTime edmDateTime)
        {
            base.AddObject("EdmDateTimeSet", edmDateTime);
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
            private const string Edmx = @"<edmx:Edmx Version=""4.0"" xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"">
  <edmx:DataServices>
    <Schema Namespace=""Microsoft.Test.OData.Services.PrimitiveKeysService"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">
      <EntityType Name=""EdmDateTime"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.DateTimeOffset"" Nullable=""false"" />
        <Property Name=""DateTimeCollection"" Type=""Collection(Edm.DateTimeOffset)"" />
      </EntityType>
      <Action Name=""IncreaseRevenue"" IsBound=""true"">
        <Parameter Name=""entityWithDateTimeProperty"" Type=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmDateTime"" Nullable=""false"" />
        <Parameter Name=""datetimeParameter2"" Type=""Edm.DateTimeOffset"" />
        <ReturnType Type=""Edm.DateTimeOffset"" Nullable=""false"" />
      </Action>
      <Function Name=""GetProductDetails"" IsBound=""true"" EntitySetPath=""EdmDateTimeSet/GetProductDetails"" IsComposable=""true"">
        <Parameter Name=""entityWithDateTimeProperty"" Type=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmDateTime"" Nullable=""false"" />
        <Parameter Name=""datetimeParameter2"" Type=""Edm.DateTimeOffset"" />
        <ReturnType Type=""Edm.DateTimeOffset"" Nullable=""false"" />
      </Function>
      <EntityContainer Name=""TestContext"">
        <EntitySet Name=""EdmDateTimeSet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmDateTime"" />
      </EntityContainer>
      <Annotations Target=""Microsoft.Test.OData.Services.PrimitiveKeysService.TestContext"">
        <Annotation Term=""Com.Microsoft.OData.Service.Conventions.V1.UrlConventions"" String=""KeyAsSegment"" />
      </Annotations>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>";
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                global::System.Xml.XmlReader reader = CreateXmlReader(Edmx);
                try
                {
                    return global::Microsoft.OData.Edm.Csdl.CsdlReader.Parse(reader);
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmBinarySingle in the schema.
    /// </summary>

    /// <summary>
    /// There are no comments for EdmDateTimeSingle in the schema.
    /// </summary>
    public partial class EdmDateTimeSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmDateTime>
    {
        /// <summary>
        /// Initialize a new EdmDateTimeSingle object.
        /// </summary>
        public EdmDateTimeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new EdmDateTimeSingle object.
        /// </summary>
        public EdmDateTimeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new EdmDateTimeSingle object.
        /// </summary>
        public EdmDateTimeSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmDateTime> query)
            : base(query) { }

    }
    /// <summary>
    /// There are no comments for EdmDateTime in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmDateTimeSet")]
    public partial class EdmDateTime : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmDateTime object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public static EdmDateTime CreateEdmDateTime(global::System.DateTime ID)
        {
            EdmDateTime edmDateTime = new EdmDateTime();
            edmDateTime.Id = ID;
            return edmDateTime;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public global::System.DateTime Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        private global::System.DateTime _Id;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        private System.Collections.ObjectModel.ObservableCollection<DateTime> _IdCollection = new ObservableCollection<DateTime>();

        partial void OnIdChanging(global::System.DateTime value);

        partial void OnIdChanged();

        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }

        /// <summary>
        /// There are no comments for IncreaseRevenue in the schema.
        /// </summary>
        public EdmDateTime IncreaseRevenue(
            EdmDateTime source, 
            DateTime value)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTime();
        }

        /// <summary>
        /// There are no comments for IncreaseRevenue in the schema.
        /// </summary>
        public EdmDateTime IncreaseRevenue(
            DateTimeOffset IncreaseValue)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTime();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public global::System.Collections.ObjectModel.ObservableCollection<DateTime> DateTimeCollection
        {
            get
            {
                return this._IdCollection;
            }
            set
            {
                this._IdCollection = value;
            }
        }
    }

    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmBinary as global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmBinarySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
       
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTime as global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTimeSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTimeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTime> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTimeSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTime as global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTimeSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTimeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTime> source,
            global::System.DateTimeOffset id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.DateTimePrimitiveTypeReference.EdmDateTimeSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
    }
}