//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 6/23/2018 3:49:37 PM
namespace Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference
{
    /// <summary>
    /// There are no comments for TestContext in the schema.
    /// </summary>
    public partial class TestContext : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new TestContext object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public TestContext(global::System.Uri serviceRoot) : 
                base(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "Microsoft.Test.OData.Services.PrimitiveKeysService", "Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            if (clientType.Namespace.Equals("Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference", global::System.StringComparison.Ordinal))
            {
                return string.Concat("Microsoft.Test.OData.Services.PrimitiveKeysService.", clientType.Name);
            }
            return null;
        }
        /// <summary>
        /// There are no comments for EdmBinarySet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmBinary> EdmBinarySet
        {
            get
            {
                if ((this._EdmBinarySet == null))
                {
                    this._EdmBinarySet = base.CreateQuery<EdmBinary>("EdmBinarySet");
                }
                return this._EdmBinarySet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmBinary> _EdmBinarySet;
        /// <summary>
        /// There are no comments for EdmBooleanSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmBoolean> EdmBooleanSet
        {
            get
            {
                if ((this._EdmBooleanSet == null))
                {
                    this._EdmBooleanSet = base.CreateQuery<EdmBoolean>("EdmBooleanSet");
                }
                return this._EdmBooleanSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmBoolean> _EdmBooleanSet;
        /// <summary>
        /// There are no comments for EdmByteSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmByte> EdmByteSet
        {
            get
            {
                if ((this._EdmByteSet == null))
                {
                    this._EdmByteSet = base.CreateQuery<EdmByte>("EdmByteSet");
                }
                return this._EdmByteSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmByte> _EdmByteSet;
        /// <summary>
        /// There are no comments for EdmDecimalSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmDecimal> EdmDecimalSet
        {
            get
            {
                if ((this._EdmDecimalSet == null))
                {
                    this._EdmDecimalSet = base.CreateQuery<EdmDecimal>("EdmDecimalSet");
                }
                return this._EdmDecimalSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmDecimal> _EdmDecimalSet;
        /// <summary>
        /// There are no comments for EdmDoubleSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmDouble> EdmDoubleSet
        {
            get
            {
                if ((this._EdmDoubleSet == null))
                {
                    this._EdmDoubleSet = base.CreateQuery<EdmDouble>("EdmDoubleSet");
                }
                return this._EdmDoubleSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmDouble> _EdmDoubleSet;
        /// <summary>
        /// There are no comments for EdmSingleSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmSingle> EdmSingleSet
        {
            get
            {
                if ((this._EdmSingleSet == null))
                {
                    this._EdmSingleSet = base.CreateQuery<EdmSingle>("EdmSingleSet");
                }
                return this._EdmSingleSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmSingle> _EdmSingleSet;
        /// <summary>
        /// There are no comments for EdmGuidSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmGuid> EdmGuidSet
        {
            get
            {
                if ((this._EdmGuidSet == null))
                {
                    this._EdmGuidSet = base.CreateQuery<EdmGuid>("EdmGuidSet");
                }
                return this._EdmGuidSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmGuid> _EdmGuidSet;
        /// <summary>
        /// There are no comments for EdmInt16Set in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmInt16> EdmInt16Set
        {
            get
            {
                if ((this._EdmInt16Set == null))
                {
                    this._EdmInt16Set = base.CreateQuery<EdmInt16>("EdmInt16Set");
                }
                return this._EdmInt16Set;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmInt16> _EdmInt16Set;
        /// <summary>
        /// There are no comments for EdmInt32Set in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmInt32> EdmInt32Set
        {
            get
            {
                if ((this._EdmInt32Set == null))
                {
                    this._EdmInt32Set = base.CreateQuery<EdmInt32>("EdmInt32Set");
                }
                return this._EdmInt32Set;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmInt32> _EdmInt32Set;
        /// <summary>
        /// There are no comments for EdmInt64Set in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmInt64> EdmInt64Set
        {
            get
            {
                if ((this._EdmInt64Set == null))
                {
                    this._EdmInt64Set = base.CreateQuery<EdmInt64>("EdmInt64Set");
                }
                return this._EdmInt64Set;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmInt64> _EdmInt64Set;
        /// <summary>
        /// There are no comments for EdmStringSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmString> EdmStringSet
        {
            get
            {
                if ((this._EdmStringSet == null))
                {
                    this._EdmStringSet = base.CreateQuery<EdmString>("EdmStringSet");
                }
                return this._EdmStringSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmString> _EdmStringSet;
        /// <summary>
        /// There are no comments for EdmTimeSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmTime> EdmTimeSet
        {
            get
            {
                if ((this._EdmTimeSet == null))
                {
                    this._EdmTimeSet = base.CreateQuery<EdmTime>("EdmTimeSet");
                }
                return this._EdmTimeSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmTime> _EdmTimeSet;
        /// <summary>
        /// There are no comments for EdmDateTimeOffsetSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<EdmDateTimeOffset> EdmDateTimeOffsetSet
        {
            get
            {
                if ((this._EdmDateTimeOffsetSet == null))
                {
                    this._EdmDateTimeOffsetSet = base.CreateQuery<EdmDateTimeOffset>("EdmDateTimeOffsetSet");
                }
                return this._EdmDateTimeOffsetSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<EdmDateTimeOffset> _EdmDateTimeOffsetSet;
        /// <summary>
        /// There are no comments for Folders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.OData.Client.DataServiceQuery<Folder> Folders
        {
            get
            {
                if ((this._Folders == null))
                {
                    this._Folders = base.CreateQuery<Folder>("Folders");
                }
                return this._Folders;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<Folder> _Folders;
        /// <summary>
        /// There are no comments for EdmBinarySet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmBinarySet(EdmBinary edmBinary)
        {
            base.AddObject("EdmBinarySet", edmBinary);
        }
        /// <summary>
        /// There are no comments for EdmBooleanSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmBooleanSet(EdmBoolean edmBoolean)
        {
            base.AddObject("EdmBooleanSet", edmBoolean);
        }
        /// <summary>
        /// There are no comments for EdmByteSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmByteSet(EdmByte edmByte)
        {
            base.AddObject("EdmByteSet", edmByte);
        }
        /// <summary>
        /// There are no comments for EdmDecimalSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmDecimalSet(EdmDecimal edmDecimal)
        {
            base.AddObject("EdmDecimalSet", edmDecimal);
        }
        /// <summary>
        /// There are no comments for EdmDoubleSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmDoubleSet(EdmDouble edmDouble)
        {
            base.AddObject("EdmDoubleSet", edmDouble);
        }
        /// <summary>
        /// There are no comments for EdmSingleSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmSingleSet(EdmSingle edmSingle)
        {
            base.AddObject("EdmSingleSet", edmSingle);
        }
        /// <summary>
        /// There are no comments for EdmGuidSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmGuidSet(EdmGuid edmGuid)
        {
            base.AddObject("EdmGuidSet", edmGuid);
        }
        /// <summary>
        /// There are no comments for EdmInt16Set in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmInt16Set(EdmInt16 edmInt16)
        {
            base.AddObject("EdmInt16Set", edmInt16);
        }
        /// <summary>
        /// There are no comments for EdmInt32Set in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmInt32Set(EdmInt32 edmInt32)
        {
            base.AddObject("EdmInt32Set", edmInt32);
        }
        /// <summary>
        /// There are no comments for EdmInt64Set in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmInt64Set(EdmInt64 edmInt64)
        {
            base.AddObject("EdmInt64Set", edmInt64);
        }
        /// <summary>
        /// There are no comments for EdmStringSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmStringSet(EdmString edmString)
        {
            base.AddObject("EdmStringSet", edmString);
        }
        /// <summary>
        /// There are no comments for EdmTimeSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmTimeSet(EdmTime edmTime)
        {
            base.AddObject("EdmTimeSet", edmTime);
        }
        /// <summary>
        /// There are no comments for EdmDateTimeOffsetSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToEdmDateTimeOffsetSet(EdmDateTimeOffset edmDateTimeOffset)
        {
            base.AddObject("EdmDateTimeOffsetSet", edmDateTimeOffset);
        }
        /// <summary>
        /// There are no comments for Folders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public void AddToFolders(Folder folder)
        {
            base.AddObject("Folders", folder);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private const string Edmx = @"<edmx:Edmx Version=""4.0"" xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"">
  <edmx:DataServices>
    <Schema Namespace=""Microsoft.Test.OData.Services.PrimitiveKeysService"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">
      <EntityType Name=""EdmBinary"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Binary"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmBoolean"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Boolean"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmByte"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Byte"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmDecimal"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Decimal"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmDouble"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Double"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmSingle"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Single"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmGuid"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Guid"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmInt16"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Int16"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmInt32"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Int32"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmInt64"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Int64"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmString"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.String"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmTime"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Duration"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""EdmDateTimeOffset"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.DateTimeOffset"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""Folder"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Name"" Type=""Edm.String"" />
        <NavigationProperty Name=""Parent"" Type=""Microsoft.Test.OData.Services.PrimitiveKeysService.Folder"" Partner=""Parent"" />
      </EntityType>
      <EntityContainer Name=""TestContext"">
        <EntitySet Name=""EdmBinarySet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmBinary"" />
        <EntitySet Name=""EdmBooleanSet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmBoolean"" />
        <EntitySet Name=""EdmByteSet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmByte"" />
        <EntitySet Name=""EdmDecimalSet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmDecimal"" />
        <EntitySet Name=""EdmDoubleSet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmDouble"" />
        <EntitySet Name=""EdmSingleSet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmSingle"" />
        <EntitySet Name=""EdmGuidSet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmGuid"" />
        <EntitySet Name=""EdmInt16Set"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmInt16"" />
        <EntitySet Name=""EdmInt32Set"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmInt32"" />
        <EntitySet Name=""EdmInt64Set"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmInt64"" />
        <EntitySet Name=""EdmStringSet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmString"" />
        <EntitySet Name=""EdmTimeSet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmTime"" />
        <EntitySet Name=""EdmDateTimeOffsetSet"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.EdmDateTimeOffset"" />
        <EntitySet Name=""Folders"" EntityType=""Microsoft.Test.OData.Services.PrimitiveKeysService.Folder"">
          <NavigationPropertyBinding Path=""Parent"" Target=""Folders"" />
        </EntitySet>
      </EntityContainer>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>";
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                global::System.Xml.XmlReader reader = CreateXmlReader(Edmx);
                try
                {
                    global::System.Collections.Generic.IEnumerable<global::Microsoft.OData.Edm.Validation.EdmError> errors;
                    global::Microsoft.OData.Edm.IEdmModel edmModel;
                    
                    if (!global::Microsoft.OData.Edm.Csdl.CsdlReader.TryParse(reader, false, out edmModel, out errors))
                    {
                        global::System.Text.StringBuilder errorMessages = new System.Text.StringBuilder();
                        foreach (var error in errors)
                        {
                            errorMessages.Append(error.ErrorMessage);
                            errorMessages.Append("; ");
                        }
                        throw new global::System.InvalidOperationException(errorMessages.ToString());
                    }

                    return edmModel;
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmBinarySingle in the schema.
    /// </summary>
    public partial class EdmBinarySingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmBinary>
    {
        /// <summary>
        /// Initialize a new EdmBinarySingle object.
        /// </summary>
        public EdmBinarySingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmBinarySingle object.
        /// </summary>
        public EdmBinarySingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmBinarySingle object.
        /// </summary>
        public EdmBinarySingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmBinary> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmBinary in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmBinarySet")]
    public partial class EdmBinary : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmBinary object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmBinary CreateEdmBinary(byte[] ID)
        {
            EdmBinary edmBinary = new EdmBinary();
            edmBinary.Id = ID;
            return edmBinary;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public byte[] Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private byte[] _Id;
        partial void OnIdChanging(byte[] value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmBooleanSingle in the schema.
    /// </summary>
    public partial class EdmBooleanSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmBoolean>
    {
        /// <summary>
        /// Initialize a new EdmBooleanSingle object.
        /// </summary>
        public EdmBooleanSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmBooleanSingle object.
        /// </summary>
        public EdmBooleanSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmBooleanSingle object.
        /// </summary>
        public EdmBooleanSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmBoolean> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmBoolean in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmBooleanSet")]
    public partial class EdmBoolean : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmBoolean object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmBoolean CreateEdmBoolean(bool ID)
        {
            EdmBoolean edmBoolean = new EdmBoolean();
            edmBoolean.Id = ID;
            return edmBoolean;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public bool Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private bool _Id;
        partial void OnIdChanging(bool value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmByteSingle in the schema.
    /// </summary>
    public partial class EdmByteSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmByte>
    {
        /// <summary>
        /// Initialize a new EdmByteSingle object.
        /// </summary>
        public EdmByteSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmByteSingle object.
        /// </summary>
        public EdmByteSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmByteSingle object.
        /// </summary>
        public EdmByteSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmByte> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmByte in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmByteSet")]
    public partial class EdmByte : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmByte object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmByte CreateEdmByte(byte ID)
        {
            EdmByte edmByte = new EdmByte();
            edmByte.Id = ID;
            return edmByte;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public byte Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private byte _Id;
        partial void OnIdChanging(byte value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmDecimalSingle in the schema.
    /// </summary>
    public partial class EdmDecimalSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmDecimal>
    {
        /// <summary>
        /// Initialize a new EdmDecimalSingle object.
        /// </summary>
        public EdmDecimalSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmDecimalSingle object.
        /// </summary>
        public EdmDecimalSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmDecimalSingle object.
        /// </summary>
        public EdmDecimalSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmDecimal> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmDecimal in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmDecimalSet")]
    public partial class EdmDecimal : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmDecimal object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmDecimal CreateEdmDecimal(decimal ID)
        {
            EdmDecimal edmDecimal = new EdmDecimal();
            edmDecimal.Id = ID;
            return edmDecimal;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public decimal Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private decimal _Id;
        partial void OnIdChanging(decimal value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmDoubleSingle in the schema.
    /// </summary>
    public partial class EdmDoubleSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmDouble>
    {
        /// <summary>
        /// Initialize a new EdmDoubleSingle object.
        /// </summary>
        public EdmDoubleSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmDoubleSingle object.
        /// </summary>
        public EdmDoubleSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmDoubleSingle object.
        /// </summary>
        public EdmDoubleSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmDouble> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmDouble in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmDoubleSet")]
    public partial class EdmDouble : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmDouble object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmDouble CreateEdmDouble(double ID)
        {
            EdmDouble edmDouble = new EdmDouble();
            edmDouble.Id = ID;
            return edmDouble;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public double Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private double _Id;
        partial void OnIdChanging(double value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmSingleSingle in the schema.
    /// </summary>
    public partial class EdmSingleSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmSingle>
    {
        /// <summary>
        /// Initialize a new EdmSingleSingle object.
        /// </summary>
        public EdmSingleSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmSingleSingle object.
        /// </summary>
        public EdmSingleSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmSingleSingle object.
        /// </summary>
        public EdmSingleSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmSingle> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmSingle in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmSingleSet")]
    public partial class EdmSingle : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmSingle object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmSingle CreateEdmSingle(float ID)
        {
            EdmSingle edmSingle = new EdmSingle();
            edmSingle.Id = ID;
            return edmSingle;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public float Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private float _Id;
        partial void OnIdChanging(float value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmGuidSingle in the schema.
    /// </summary>
    public partial class EdmGuidSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmGuid>
    {
        /// <summary>
        /// Initialize a new EdmGuidSingle object.
        /// </summary>
        public EdmGuidSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmGuidSingle object.
        /// </summary>
        public EdmGuidSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmGuidSingle object.
        /// </summary>
        public EdmGuidSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmGuid> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmGuid in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmGuidSet")]
    public partial class EdmGuid : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmGuid object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmGuid CreateEdmGuid(global::System.Guid ID)
        {
            EdmGuid edmGuid = new EdmGuid();
            edmGuid.Id = ID;
            return edmGuid;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmInt16Single in the schema.
    /// </summary>
    public partial class EdmInt16Single : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmInt16>
    {
        /// <summary>
        /// Initialize a new EdmInt16Single object.
        /// </summary>
        public EdmInt16Single(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmInt16Single object.
        /// </summary>
        public EdmInt16Single(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmInt16Single object.
        /// </summary>
        public EdmInt16Single(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmInt16> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmInt16 in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmInt16Set")]
    public partial class EdmInt16 : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmInt16 object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmInt16 CreateEdmInt16(short ID)
        {
            EdmInt16 edmInt16 = new EdmInt16();
            edmInt16.Id = ID;
            return edmInt16;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public short Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private short _Id;
        partial void OnIdChanging(short value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmInt32Single in the schema.
    /// </summary>
    public partial class EdmInt32Single : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmInt32>
    {
        /// <summary>
        /// Initialize a new EdmInt32Single object.
        /// </summary>
        public EdmInt32Single(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmInt32Single object.
        /// </summary>
        public EdmInt32Single(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmInt32Single object.
        /// </summary>
        public EdmInt32Single(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmInt32> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmInt32 in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmInt32Set")]
    public partial class EdmInt32 : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmInt32 object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmInt32 CreateEdmInt32(int ID)
        {
            EdmInt32 edmInt32 = new EdmInt32();
            edmInt32.Id = ID;
            return edmInt32;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmInt64Single in the schema.
    /// </summary>
    public partial class EdmInt64Single : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmInt64>
    {
        /// <summary>
        /// Initialize a new EdmInt64Single object.
        /// </summary>
        public EdmInt64Single(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmInt64Single object.
        /// </summary>
        public EdmInt64Single(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmInt64Single object.
        /// </summary>
        public EdmInt64Single(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmInt64> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmInt64 in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmInt64Set")]
    public partial class EdmInt64 : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmInt64 object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmInt64 CreateEdmInt64(long ID)
        {
            EdmInt64 edmInt64 = new EdmInt64();
            edmInt64.Id = ID;
            return edmInt64;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private long _Id;
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmStringSingle in the schema.
    /// </summary>
    public partial class EdmStringSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmString>
    {
        /// <summary>
        /// Initialize a new EdmStringSingle object.
        /// </summary>
        public EdmStringSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmStringSingle object.
        /// </summary>
        public EdmStringSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmStringSingle object.
        /// </summary>
        public EdmStringSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmString> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmString in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmStringSet")]
    public partial class EdmString : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmString object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmString CreateEdmString(string ID)
        {
            EdmString edmString = new EdmString();
            edmString.Id = ID;
            return edmString;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public string Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Id;
        partial void OnIdChanging(string value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmTimeSingle in the schema.
    /// </summary>
    public partial class EdmTimeSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmTime>
    {
        /// <summary>
        /// Initialize a new EdmTimeSingle object.
        /// </summary>
        public EdmTimeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmTimeSingle object.
        /// </summary>
        public EdmTimeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmTimeSingle object.
        /// </summary>
        public EdmTimeSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmTime> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmTime in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmTimeSet")]
    public partial class EdmTime : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmTime object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmTime CreateEdmTime(global::System.TimeSpan ID)
        {
            EdmTime edmTime = new EdmTime();
            edmTime.Id = ID;
            return edmTime;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::System.TimeSpan Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.TimeSpan _Id;
        partial void OnIdChanging(global::System.TimeSpan value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for EdmDateTimeOffsetSingle in the schema.
    /// </summary>
    public partial class EdmDateTimeOffsetSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EdmDateTimeOffset>
    {
        /// <summary>
        /// Initialize a new EdmDateTimeOffsetSingle object.
        /// </summary>
        public EdmDateTimeOffsetSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EdmDateTimeOffsetSingle object.
        /// </summary>
        public EdmDateTimeOffsetSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EdmDateTimeOffsetSingle object.
        /// </summary>
        public EdmDateTimeOffsetSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EdmDateTimeOffset> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for EdmDateTimeOffset in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("EdmDateTimeOffsetSet")]
    public partial class EdmDateTimeOffset : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EdmDateTimeOffset object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EdmDateTimeOffset CreateEdmDateTimeOffset(global::System.DateTimeOffset ID)
        {
            EdmDateTimeOffset edmDateTimeOffset = new EdmDateTimeOffset();
            edmDateTimeOffset.Id = ID;
            return edmDateTimeOffset;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::System.DateTimeOffset Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _Id;
        partial void OnIdChanging(global::System.DateTimeOffset value);
        partial void OnIdChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for FolderSingle in the schema.
    /// </summary>
    public partial class FolderSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Folder>
    {
        /// <summary>
        /// Initialize a new FolderSingle object.
        /// </summary>
        public FolderSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new FolderSingle object.
        /// </summary>
        public FolderSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new FolderSingle object.
        /// </summary>
        public FolderSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Folder> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.FolderSingle Parent
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Parent == null))
                {
                    this._Parent = new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.FolderSingle(this.Context, GetPath("Parent"));
                }
                return this._Parent;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.FolderSingle _Parent;
    }
    /// <summary>
    /// There are no comments for Folder in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("Folders")]
    public partial class Folder : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Folder object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Folder CreateFolder(int ID)
        {
            Folder folder = new Folder();
            folder.Id = ID;
            return folder;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
                this.OnPropertyChanged("Name");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property Parent in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.Folder Parent
        {
            get
            {
                return this._Parent;
            }
            set
            {
                this.OnParentChanging(value);
                this._Parent = value;
                this.OnParentChanged();
                this.OnPropertyChanged("Parent");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.Folder _Parent;
        partial void OnParentChanging(global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.Folder value);
        partial void OnParentChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBinary as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBinarySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBinarySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBinary> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBinarySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBinary as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBinarySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBinarySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBinary> source,
            byte[] id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBinarySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBoolean as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBooleanSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBooleanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBoolean> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBooleanSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBoolean as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBooleanSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBooleanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBoolean> source,
            bool id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmBooleanSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmByte as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmByteSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmByteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmByte> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmByteSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmByte as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmByteSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmByteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmByte> source,
            byte id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmByteSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDecimal as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDecimalSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDecimalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDecimal> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDecimalSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDecimal as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDecimalSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDecimalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDecimal> source,
            decimal id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDecimalSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDouble as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDoubleSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDoubleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDouble> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDoubleSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDouble as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDoubleSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDoubleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDouble> source,
            double id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDoubleSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmSingle as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmSingleSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmSingleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmSingle> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmSingleSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmSingle as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmSingleSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmSingleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmSingle> source,
            float id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmSingleSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmGuid as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmGuidSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmGuidSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmGuid> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmGuidSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmGuid as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmGuidSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmGuidSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmGuid> source,
            global::System.Guid id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmGuidSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt16 as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt16Single specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt16Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt16> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt16Single(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt16 as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt16Single specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt16Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt16> source,
            short id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt16Single(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt32 as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt32Single specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt32Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt32> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt32Single(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt32 as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt32Single specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt32Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt32> source,
            int id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt32Single(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt64 as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt64Single specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt64Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt64> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt64Single(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt64 as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt64Single specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt64Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt64> source,
            long id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmInt64Single(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmString as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmStringSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmStringSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmString> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmStringSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmString as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmStringSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmStringSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmString> source,
            string id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmStringSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmTime as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmTimeSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmTimeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmTime> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmTimeSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmTime as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmTimeSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmTimeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmTime> source,
            global::System.TimeSpan id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmTimeSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDateTimeOffset as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDateTimeOffsetSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDateTimeOffsetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDateTimeOffset> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDateTimeOffsetSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDateTimeOffset as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDateTimeOffsetSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDateTimeOffsetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDateTimeOffset> source,
            global::System.DateTimeOffset id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.EdmDateTimeOffsetSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.Folder as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.FolderSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.FolderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.Folder> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.FolderSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.Folder as global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.FolderSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.FolderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.Folder> source,
            int id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Test.OData.Services.TestServices.PrimitiveKeysServiceReference.FolderSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
    }
}

