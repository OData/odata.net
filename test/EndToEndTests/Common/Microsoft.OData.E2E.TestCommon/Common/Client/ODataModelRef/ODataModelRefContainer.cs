//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 4/2/2025 12:57:56 PM
namespace Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo
{
    /// <summary>
    /// There are no comments for TruckDemoService in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("TruckDemoService")]
    public partial class TruckDemoService : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new TruckDemoService object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public TruckDemoService(global::System.Uri serviceRoot) :
                this(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
        }

        /// <summary>
        /// Initialize a new TruckDemoService object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public TruckDemoService(global::System.Uri serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion protocolVersion) :
                base(serviceRoot, protocolVersion)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Vocabulary.V1");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Location", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Core.V1", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Core.V1");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Map", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Map");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            global::Microsoft.OData.Client.OriginalNameAttribute originalNameAttribute = (global::Microsoft.OData.Client.OriginalNameAttribute)global::System.Linq.Enumerable.SingleOrDefault(global::Microsoft.OData.Client.Utility.GetCustomAttributes(clientType, typeof(global::Microsoft.OData.Client.OriginalNameAttribute), true));
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Vocabulary.V1", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Location.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Location.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Core.V1", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Core.V1.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Core.V1.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Map", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Map.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Map.", clientType.Name);
            }
            if (originalNameAttribute != null)
            {
                return clientType.Namespace + "." + originalNameAttribute.OriginalName;
            }
            return clientType.FullName;
        }
        /// <summary>
        /// Our Trucks
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Trucks")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<TruckType> Trucks
        {
            get
            {
                if ((this._Trucks == null))
                {
                    this._Trucks = base.CreateQuery<TruckType>("Trucks");
                }
                return this._Trucks;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<TruckType> _Trucks;
        /// <summary>
        /// There are no comments for VehicleGPSSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPSSet")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> VehicleGPSSet
        {
            get
            {
                if ((this._VehicleGPSSet == null))
                {
                    this._VehicleGPSSet = base.CreateQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType>("VehicleGPSSet");
                }
                return this._VehicleGPSSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _VehicleGPSSet;
        /// <summary>
        /// There are no comments for DerivedVehicleGPSSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("DerivedVehicleGPSSet")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<DerivedVehicleGPSType> DerivedVehicleGPSSet
        {
            get
            {
                if ((this._DerivedVehicleGPSSet == null))
                {
                    this._DerivedVehicleGPSSet = base.CreateQuery<DerivedVehicleGPSType>("DerivedVehicleGPSSet");
                }
                return this._DerivedVehicleGPSSet;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<DerivedVehicleGPSType> _DerivedVehicleGPSSet;
        /// <summary>
        /// There are no comments for VehicleGPSSetInGPS in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPSSetInGPS")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> VehicleGPSSetInGPS
        {
            get
            {
                if ((this._VehicleGPSSetInGPS == null))
                {
                    this._VehicleGPSSetInGPS = base.CreateQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType>("VehicleGPSSetInGPS");
                }
                return this._VehicleGPSSetInGPS;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _VehicleGPSSetInGPS;
        /// <summary>
        /// There are no comments for Trucks in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToTrucks(TruckType truckType)
        {
            base.AddObject("Trucks", truckType);
        }
        /// <summary>
        /// There are no comments for VehicleGPSSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToVehicleGPSSet(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType vehicleGPSType)
        {
            base.AddObject("VehicleGPSSet", vehicleGPSType);
        }
        /// <summary>
        /// There are no comments for DerivedVehicleGPSSet in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToDerivedVehicleGPSSet(DerivedVehicleGPSType derivedVehicleGPSType)
        {
            base.AddObject("DerivedVehicleGPSSet", derivedVehicleGPSType);
        }
        /// <summary>
        /// There are no comments for VehicleGPSSetInGPS in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToVehicleGPSSetInGPS(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType vehicleGPSType)
        {
            base.AddObject("VehicleGPSSetInGPS", vehicleGPSType);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Collections.Generic.Dictionary<string, string> ReferencesMap = new global::System.Collections.Generic.Dictionary<string, string>()
                {
                    {@"CoreTerms.csdl", @"<edmx:Edmx xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"" Version=""4.0"">
  <edmx:DataServices>
    <Schema xmlns=""http://docs.oasis-open.org/odata/ns/edm"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Core.V1"" Alias=""Core"">
      <Term Name=""Description"" Type=""Edm.String"">
        <Annotation Term=""Core.Description"" String=""A brief description of a model element"" />
        <Annotation Term=""Core.IsLanguageDependent"" Bool=""true"" />
      </Term>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>"},
                    {@"DeviceModelTerms.csdl", @"<edmx:Edmx xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"" Version=""4.0"">
  <edmx:Reference Uri=""http.localhost/odata/CoreTerms.csdl"">
    <edmx:Include Alias=""Core"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Core.V1"" />
  </edmx:Reference>
  <edmx:DataServices>
    <Schema xmlns=""http://docs.oasis-open.org/odata/ns/edm"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1"" Alias=""Self"">
      <Term Name=""IsEvent"" Type=""Edm.Boolean"" AppliesTo=""Property"" />
      <Term Name=""Settable"" Type=""Edm.Boolean"" AppliesTo=""Property"" />
      <Term Name=""IsAlarm"" Type=""Edm.Boolean"" AppliesTo=""ComplexType"" />
      <Term Name=""IsAttachmentPointer"" Type=""Edm.Boolean"" AppliesTo=""Property"" />
      <Term Name=""Timestamp"" Type=""Edm.DateTimeOffset"" />
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>"},
                    {@"GPS.csdl", @"<edmx:Edmx xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"" Version=""4.0"">
  <edmx:Reference Uri=""Location.csdl"">
    <edmx:Include Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Location"" Alias=""Loc"" />
  </edmx:Reference>
  <edmx:Reference Uri=""Map.csdl"">
    <edmx:Include Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Map"" Alias=""Map"" />
  </edmx:Reference>
  <edmx:Reference Uri=""TruckDemo.csdl"">
    <edmx:Include Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo"" Alias=""TruckDemo"" />
  </edmx:Reference>
  <edmx:Reference Uri=""DeviceModelTerms.csdl"">
    <edmx:Include Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1"" Alias=""IoTDeviceModel"" />
  </edmx:Reference>
  <edmx:DataServices>
    <Schema xmlns=""http://docs.oasis-open.org/odata/ns/edm"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS"" Alias=""Self"">
      <ComplexType Name=""GPSLostSignalAlarmType"">
        <Annotation Term=""IoTDeviceModel.IsAlarm"" Bool=""true"" />
        <Property Name=""Severity"" Type=""Edm.Int32"" />
        <Property Name=""LastKnownLocation"" Type=""Loc.GeoLocation"" />
      </ComplexType>
      <EntityType Name=""VehicleGPSType"">
        <Key>
          <PropertyRef Name=""Key"" />
        </Key>
        <Property Name=""Key"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""VehicleSpeed"" Type=""Edm.Double"" />
        <Property Name=""StartLocation"" Type=""Loc.GeoLocation"" />
        <Property Name=""EndLocation"" Type=""Loc.GeoLocation"" />
        <Property Name=""CurrentLocation"" Type=""Loc.GeoLocation"" />
        <Property Name=""Map"" Type=""Map.MapType"" />
        <Property Name=""LostSignalAlarm"" Type=""Self.GPSLostSignalAlarmType"">
          <Annotation Term=""IoTDeviceModel.IsEvent"" Bool=""true"" />
        </Property>
      </EntityType>
      <Action Name=""ResetVehicleSpeed"" IsBound=""true"">
        <Annotation Term=""Core.Description"" String=""Reset VehicleSpeed to Zero"" />
        <Parameter Name=""targetVehicleGPS"" Type=""Self.VehicleGPSType"" />
        <Parameter Name=""targetValue"" Type=""Edm.Double"" />
      </Action>
      <Function Name=""GetVehicleSpeed"" IsBound=""true"">
        <Parameter Name=""targetVehicleGPS"" Type=""Self.VehicleGPSType"" Nullable=""false"" />
        <ReturnType Type=""Edm.Double"" Nullable=""false"" />
      </Function>
      <Function Name=""GetDefaultOutsideGeoFenceAlarm"" IsComposable=""true"">
        <ReturnType Type=""Loc.OutsideGeoFenceAlarmType"" />
      </Function>
      <Action Name=""ResetVehicleSpeedToValue"">
        <ReturnType Type=""Collection(Self.VehicleGPSType)"" Nullable=""false"" />
        <Parameter Name=""targetValue"" Type=""Edm.Double"" />
      </Action>
      <EntityContainer Name=""GPSContainer"">
        <EntitySet Name=""VehicleGPSSetInGPS"" EntityType=""Self.VehicleGPSType"" />
        <ActionImport Name=""ResetVehicleSpeedToValue"" Action=""Self.ResetVehicleSpeedToValue"" EntitySet=""VehicleGPSSetInGPS"" />
        <FunctionImport Name=""GetDefaultOutsideGeoFenceAlarm"" Function=""Self.GetDefaultOutsideGeoFenceAlarm"" IncludeInServiceDocument=""true"" />
      </EntityContainer>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>"},
                    {@"Location.csdl", @"<edmx:Edmx xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"" Version=""4.0"">
  <edmx:Reference Uri=""DeviceModelTerms.csdl"">
    <edmx:Include Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1"" Alias=""IoTDeviceModel"" />
  </edmx:Reference>
  <edmx:DataServices>
    <Schema xmlns=""http://docs.oasis-open.org/odata/ns/edm"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Location"" Alias=""Self"">
      <ComplexType Name=""GeoLocation"">
        <Property Name=""Lat"" Type=""Edm.Double"" Nullable=""false"" />
        <Property Name=""Long"" Type=""Edm.Double"" Nullable=""false"" />
      </ComplexType>
      <ComplexType Name=""OutsideGeoFenceAlarmType"">
        <Annotation Term=""IoTDeviceModel.IsAlarm"" Bool=""true"" />
        <Property Name=""Severity"" Type=""Edm.Int32"" />
        <Property Name=""Location"" Type=""Self.GeoLocation"" />
      </ComplexType>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>"},
                    {@"Map.csdl", @"<edmx:Edmx xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"" Version=""4.0"">
  <edmx:DataServices>
    <Schema xmlns=""http://docs.oasis-open.org/odata/ns/edm"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Map"" Alias=""Self"">
      <ComplexType Name=""MapType"">
        <Property Name=""ProviderName"" Type=""Edm.String"" />
        <Property Name=""Uri"" Type=""Edm.String"" />
        <Property Name=""MBytesDownloaded"" Type=""Edm.Double"" />
      </ComplexType>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>"},
                };
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private const string filePath = @"ODataModelRefServiceCsdl.xml";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader getReferencedModelFromMap(global::System.Uri uri)
            {
                string referencedEdmx;
                if (ReferencesMap.TryGetValue(uri.OriginalString, out referencedEdmx))
                {
                    return CreateXmlReader(referencedEdmx);
                }

                return null;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                                global::System.Xml.XmlReader reader = CreateXmlReader();
                try
                {
                    return global::Microsoft.OData.Edm.Csdl.CsdlReader.Parse(reader, getReferencedModelFromMap);
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader()
            {
                try
                {
                    var assembly = global::System.Reflection.Assembly.GetExecutingAssembly();
                    // If multiple resource names end with the file name, select the shortest one.
                    var resourcePath = global::System.Linq.Enumerable.First(
                        global::System.Linq.Enumerable.OrderBy(
                            global::System.Linq.Enumerable.Where(assembly.GetManifestResourceNames(), name => name.EndsWith(filePath)),
                            filteredName => filteredName.Length));
                    global::System.IO.Stream stream = assembly.GetManifestResourceStream(resourcePath);
                    return global::System.Xml.XmlReader.Create(new global::System.IO.StreamReader(stream));
                }
                catch(global::System.Xml.XmlException e)
                {
                    throw new global::System.Xml.XmlException("Failed to create an XmlReader from the stream. Check if the resource exists.", e);
                }
            }
        }
        /// <summary>
        /// There are no comments for GetDefaultOutsideGeoFenceAlarm in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetDefaultOutsideGeoFenceAlarm")]
        public virtual global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.OutsideGeoFenceAlarmType> GetDefaultOutsideGeoFenceAlarm()
        {
            return this.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.OutsideGeoFenceAlarmType>("", "GetDefaultOutsideGeoFenceAlarm", true);
        }
        /// <summary>
        /// There are no comments for ResetDataSource in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("ResetDataSource")]
        public virtual global::Microsoft.OData.Client.DataServiceActionQuery ResetDataSource()
        {
            return new global::Microsoft.OData.Client.DataServiceActionQuery(this, this.BaseUri.OriginalString.Trim('/') + "/ResetDataSource");
        }
        /// <summary>
        /// There are no comments for ResetVehicleSpeedToValue in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("ResetVehicleSpeedToValue")]
        public virtual global::Microsoft.OData.Client.DataServiceActionQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> ResetVehicleSpeedToValue(global::System.Nullable<double> targetValue)
        {
            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType>(this, this.BaseUri.OriginalString.Trim('/') + "/ResetVehicleSpeedToValue", new global::Microsoft.OData.Client.BodyOperationParameter("targetValue", targetValue));
        }
    }
    /// <summary>
    /// There are no comments for LocationAndFuel in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("LocationAndFuel")]
    public partial class LocationAndFuel : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// There are no comments for Property FuelLevel in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("FuelLevel")]
        public virtual global::System.Nullable<double> FuelLevel
        {
            get
            {
                return this._FuelLevel;
            }
            set
            {
                this.OnFuelLevelChanging(value);
                this._FuelLevel = value;
                this.OnFuelLevelChanged();
                this.OnPropertyChanged("FuelLevel");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<double> _FuelLevel;
        partial void OnFuelLevelChanging(global::System.Nullable<double> value);
        partial void OnFuelLevelChanged();
        /// <summary>
        /// There are no comments for Property Location in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Location")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation Location
        {
            get
            {
                return this._Location;
            }
            set
            {
                this.OnLocationChanging(value);
                this._Location = value;
                this.OnLocationChanged();
                this.OnPropertyChanged("Location");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation _Location;
        partial void OnLocationChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation value);
        partial void OnLocationChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// Alarm: Truck Stopped!
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("TruckStoppedAlarmType")]
    public partial class TruckStoppedAlarmType : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// There are no comments for Property Severity in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Severity")]
        public virtual global::System.Nullable<int> Severity
        {
            get
            {
                return this._Severity;
            }
            set
            {
                this.OnSeverityChanging(value);
                this._Severity = value;
                this.OnSeverityChanged();
                this.OnPropertyChanged("Severity");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<int> _Severity = 3;
        partial void OnSeverityChanging(global::System.Nullable<int> value);
        partial void OnSeverityChanged();
        /// <summary>
        /// There are no comments for Property LocationAndFuel in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("LocationAndFuel")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.LocationAndFuel LocationAndFuel
        {
            get
            {
                return this._LocationAndFuel;
            }
            set
            {
                this.OnLocationAndFuelChanging(value);
                this._LocationAndFuel = value;
                this.OnLocationAndFuelChanged();
                this.OnPropertyChanged("LocationAndFuel");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.LocationAndFuel _LocationAndFuel;
        partial void OnLocationAndFuelChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.LocationAndFuel value);
        partial void OnLocationAndFuelChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for HeadUnitTypeSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("HeadUnitTypeSingle")]
    public partial class HeadUnitTypeSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<HeadUnitType>
    {
        /// <summary>
        /// Initialize a new HeadUnitTypeSingle object.
        /// </summary>
        public HeadUnitTypeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new HeadUnitTypeSingle object.
        /// </summary>
        public HeadUnitTypeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new HeadUnitTypeSingle object.
        /// </summary>
        public HeadUnitTypeSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<HeadUnitType> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for HeadUnitType in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SerialNo
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("SerialNo")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("HeadUnitType")]
    public partial class HeadUnitType : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new HeadUnitType object.
        /// </summary>
        /// <param name="serialNo">Initial value of SerialNo.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static HeadUnitType CreateHeadUnitType(string serialNo)
        {
            HeadUnitType headUnitType = new HeadUnitType();
            headUnitType.SerialNo = serialNo;
            return headUnitType;
        }
        /// <summary>
        /// There are no comments for Property SerialNo in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("SerialNo")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "SerialNo is required.")]
        public virtual string SerialNo
        {
            get
            {
                return this._SerialNo;
            }
            set
            {
                this.OnSerialNoChanging(value);
                this._SerialNo = value;
                this.OnSerialNoChanged();
                this.OnPropertyChanged("SerialNo");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _SerialNo;
        partial void OnSerialNoChanging(string value);
        partial void OnSerialNoChanged();
        /// <summary>
        /// There are no comments for Property DimmingLevel in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("DimmingLevel")]
        public virtual global::System.Nullable<double> DimmingLevel
        {
            get
            {
                return this._DimmingLevel;
            }
            set
            {
                this.OnDimmingLevelChanging(value);
                this._DimmingLevel = value;
                this.OnDimmingLevelChanged();
                this.OnPropertyChanged("DimmingLevel");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<double> _DimmingLevel;
        partial void OnDimmingLevelChanging(global::System.Nullable<double> value);
        partial void OnDimmingLevelChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for TruckTypeSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("TruckTypeSingle")]
    public partial class TruckTypeSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<TruckType>
    {
        /// <summary>
        /// Initialize a new TruckTypeSingle object.
        /// </summary>
        public TruckTypeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new TruckTypeSingle object.
        /// </summary>
        public TruckTypeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new TruckTypeSingle object.
        /// </summary>
        public TruckTypeSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<TruckType> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for HeadUnit in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("HeadUnit")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitTypeSingle HeadUnit
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._HeadUnit == null))
                {
                    this._HeadUnit = new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitTypeSingle(this.Context, GetPath("HeadUnit"));
                }
                return this._HeadUnit;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitTypeSingle _HeadUnit;
        /// <summary>
        /// There are no comments for VehicleGPS in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPS")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSTypeSingle VehicleGPS
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._VehicleGPS == null))
                {
                    this._VehicleGPS = new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSTypeSingle(this.Context, GetPath("VehicleGPS"));
                }
                return this._VehicleGPS;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSTypeSingle _VehicleGPS;
        /// <summary>
        /// There are no comments for VehicleGPSGroupFromGPS in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPSGroupFromGPS")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> VehicleGPSGroupFromGPS
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._VehicleGPSGroupFromGPS == null))
                {
                    this._VehicleGPSGroupFromGPS = Context.CreateQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType>(GetPath("VehicleGPSGroupFromGPS"));
                }
                return this._VehicleGPSGroupFromGPS;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _VehicleGPSGroupFromGPS;
        /// <summary>
        /// There are no comments for VehicleGPSGroup in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPSGroup")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> VehicleGPSGroup
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._VehicleGPSGroup == null))
                {
                    this._VehicleGPSGroup = Context.CreateQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType>(GetPath("VehicleGPSGroup"));
                }
                return this._VehicleGPSGroup;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _VehicleGPSGroup;
    }
    /// <summary>
    /// There are no comments for TruckType in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Key
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Key")]
    [global::Microsoft.OData.Client.EntitySet("Trucks")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("TruckType")]
    public partial class TruckType : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new TruckType object.
        /// </summary>
        /// <param name="key">Initial value of Key.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static TruckType CreateTruckType(string key)
        {
            TruckType truckType = new TruckType();
            truckType.Key = key;
            return truckType;
        }
        /// <summary>
        /// There are no comments for Property Key in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Key")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Key is required.")]
        public virtual string Key
        {
            get
            {
                return this._Key;
            }
            set
            {
                this.OnKeyChanging(value);
                this._Key = value;
                this.OnKeyChanged();
                this.OnPropertyChanged("Key");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Key;
        partial void OnKeyChanging(string value);
        partial void OnKeyChanged();
        /// <summary>
        /// There are no comments for Property VIN in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VIN")]
        public virtual string VIN
        {
            get
            {
                return this._VIN;
            }
            set
            {
                this.OnVINChanging(value);
                this._VIN = value;
                this.OnVINChanged();
                this.OnPropertyChanged("VIN");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _VIN;
        partial void OnVINChanging(string value);
        partial void OnVINChanged();
        /// <summary>
        /// There are no comments for Property FuelLevel in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("FuelLevel")]
        public virtual global::System.Nullable<double> FuelLevel
        {
            get
            {
                return this._FuelLevel;
            }
            set
            {
                this.OnFuelLevelChanging(value);
                this._FuelLevel = value;
                this.OnFuelLevelChanged();
                this.OnPropertyChanged("FuelLevel");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<double> _FuelLevel;
        partial void OnFuelLevelChanging(global::System.Nullable<double> value);
        partial void OnFuelLevelChanged();
        /// <summary>
        /// There are no comments for Property ACState in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("ACState")]
        public virtual global::System.Nullable<bool> ACState
        {
            get
            {
                return this._ACState;
            }
            set
            {
                this.OnACStateChanging(value);
                this._ACState = value;
                this.OnACStateChanged();
                this.OnPropertyChanged("ACState");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<bool> _ACState;
        partial void OnACStateChanging(global::System.Nullable<bool> value);
        partial void OnACStateChanged();
        /// <summary>
        /// There are no comments for Property TruckIsHomeFuelLevel in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("TruckIsHomeFuelLevel")]
        public virtual global::System.Nullable<double> TruckIsHomeFuelLevel
        {
            get
            {
                return this._TruckIsHomeFuelLevel;
            }
            set
            {
                this.OnTruckIsHomeFuelLevelChanging(value);
                this._TruckIsHomeFuelLevel = value;
                this.OnTruckIsHomeFuelLevelChanged();
                this.OnPropertyChanged("TruckIsHomeFuelLevel");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<double> _TruckIsHomeFuelLevel;
        partial void OnTruckIsHomeFuelLevelChanging(global::System.Nullable<double> value);
        partial void OnTruckIsHomeFuelLevelChanged();
        /// <summary>
        /// There are no comments for Property TruckStoppedAlarm in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("TruckStoppedAlarm")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckStoppedAlarmType TruckStoppedAlarm
        {
            get
            {
                return this._TruckStoppedAlarm;
            }
            set
            {
                this.OnTruckStoppedAlarmChanging(value);
                this._TruckStoppedAlarm = value;
                this.OnTruckStoppedAlarmChanged();
                this.OnPropertyChanged("TruckStoppedAlarm");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckStoppedAlarmType _TruckStoppedAlarm;
        partial void OnTruckStoppedAlarmChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckStoppedAlarmType value);
        partial void OnTruckStoppedAlarmChanged();
        /// <summary>
        /// There are no comments for Property OutsideGeoFenceAlarm in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("OutsideGeoFenceAlarm")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.OutsideGeoFenceAlarmType OutsideGeoFenceAlarm
        {
            get
            {
                return this._OutsideGeoFenceAlarm;
            }
            set
            {
                this.OnOutsideGeoFenceAlarmChanging(value);
                this._OutsideGeoFenceAlarm = value;
                this.OnOutsideGeoFenceAlarmChanged();
                this.OnPropertyChanged("OutsideGeoFenceAlarm");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.OutsideGeoFenceAlarmType _OutsideGeoFenceAlarm;
        partial void OnOutsideGeoFenceAlarmChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.OutsideGeoFenceAlarmType value);
        partial void OnOutsideGeoFenceAlarmChanged();
        /// <summary>
        /// There are no comments for Property HeadUnit in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("HeadUnit")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitType HeadUnit
        {
            get
            {
                return this._HeadUnit;
            }
            set
            {
                this.OnHeadUnitChanging(value);
                this._HeadUnit = value;
                this.OnHeadUnitChanged();
                this.OnPropertyChanged("HeadUnit");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitType _HeadUnit;
        partial void OnHeadUnitChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitType value);
        partial void OnHeadUnitChanged();
        /// <summary>
        /// There are no comments for Property VehicleGPS in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPS")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType VehicleGPS
        {
            get
            {
                return this._VehicleGPS;
            }
            set
            {
                this.OnVehicleGPSChanging(value);
                this._VehicleGPS = value;
                this.OnVehicleGPSChanged();
                this.OnPropertyChanged("VehicleGPS");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType _VehicleGPS;
        partial void OnVehicleGPSChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType value);
        partial void OnVehicleGPSChanged();
        /// <summary>
        /// There are no comments for Property VehicleGPSGroupFromGPS in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPSGroupFromGPS")]
        public virtual global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> VehicleGPSGroupFromGPS
        {
            get
            {
                return this._VehicleGPSGroupFromGPS;
            }
            set
            {
                this.OnVehicleGPSGroupFromGPSChanging(value);
                this._VehicleGPSGroupFromGPS = value;
                this.OnVehicleGPSGroupFromGPSChanged();
                this.OnPropertyChanged("VehicleGPSGroupFromGPS");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _VehicleGPSGroupFromGPS = new global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnVehicleGPSGroupFromGPSChanging(global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> value);
        partial void OnVehicleGPSGroupFromGPSChanged();
        /// <summary>
        /// There are no comments for Property VehicleGPSGroup in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPSGroup")]
        public virtual global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> VehicleGPSGroup
        {
            get
            {
                return this._VehicleGPSGroup;
            }
            set
            {
                this.OnVehicleGPSGroupChanging(value);
                this._VehicleGPSGroup = value;
                this.OnVehicleGPSGroupChanged();
                this.OnPropertyChanged("VehicleGPSGroup");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _VehicleGPSGroup = new global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnVehicleGPSGroupChanging(global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> value);
        partial void OnVehicleGPSGroupChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
        /// <summary>
        /// Set the AC state
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("SetACState")]
        public virtual global::Microsoft.OData.Client.DataServiceActionQuery SetACState(global::System.Nullable<bool> state)
        {
            global::Microsoft.OData.Client.EntityDescriptor resource = Context.EntityTracker.TryGetEntityDescriptor(this);
            if (resource == null)
            {
                throw new global::System.Exception("cannot find entity");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(this.Context, resource.EditLink.OriginalString.Trim('/') + "/Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo.SetACState", new global::Microsoft.OData.Client.BodyOperationParameter("state", state));
        }
        /// <summary>
        /// Turn off AC
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("TurnOffAC")]
        public virtual global::Microsoft.OData.Client.DataServiceActionQuery TurnOffAC()
        {
            global::Microsoft.OData.Client.EntityDescriptor resource = Context.EntityTracker.TryGetEntityDescriptor(this);
            if (resource == null)
            {
                throw new global::System.Exception("cannot find entity");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(this.Context, resource.EditLink.OriginalString.Trim('/') + "/Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo.TurnOffAC");
        }
    }
    /// <summary>
    /// There are no comments for DerivedVehicleGPSTypeSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("DerivedVehicleGPSTypeSingle")]
    public partial class DerivedVehicleGPSTypeSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<DerivedVehicleGPSType>
    {
        /// <summary>
        /// Initialize a new DerivedVehicleGPSTypeSingle object.
        /// </summary>
        public DerivedVehicleGPSTypeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new DerivedVehicleGPSTypeSingle object.
        /// </summary>
        public DerivedVehicleGPSTypeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new DerivedVehicleGPSTypeSingle object.
        /// </summary>
        public DerivedVehicleGPSTypeSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<DerivedVehicleGPSType> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for DerivedVehicleGPSType in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Key
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Key")]
    [global::Microsoft.OData.Client.EntitySet("DerivedVehicleGPSSet")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("DerivedVehicleGPSType")]
    public partial class DerivedVehicleGPSType : global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType
    {
        /// <summary>
        /// Create a new DerivedVehicleGPSType object.
        /// </summary>
        /// <param name="key">Initial value of Key.</param>
        /// <param name="displayName">Initial value of DisplayName.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static DerivedVehicleGPSType CreateDerivedVehicleGPSType(string key, string displayName)
        {
            DerivedVehicleGPSType derivedVehicleGPSType = new DerivedVehicleGPSType();
            derivedVehicleGPSType.Key = key;
            derivedVehicleGPSType.DisplayName = displayName;
            return derivedVehicleGPSType;
        }
        /// <summary>
        /// There are no comments for Property DisplayName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("DisplayName")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "DisplayName is required.")]
        public virtual string DisplayName
        {
            get
            {
                return this._DisplayName;
            }
            set
            {
                this.OnDisplayNameChanging(value);
                this._DisplayName = value;
                this.OnDisplayNameChanged();
                this.OnPropertyChanged("DisplayName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _DisplayName;
        partial void OnDisplayNameChanging(string value);
        partial void OnDisplayNameChanged();
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitType as global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitType as global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="serialNo">The value of serialNo</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitType> _source,
            string serialNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SerialNo", serialNo }
            };
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.HeadUnitTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckType as global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckType as global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="key">The value of key</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckType> _source,
            string key)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Key", key }
            };
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSType as global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSType as global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="key">The value of key</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSType> _source,
            string key)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Key", key }
            };
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Cast an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType to its derived type global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSType
        /// </summary>
        /// <param name="_source">source entity</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSTypeSingle CastToDerivedVehicleGPSType(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _source)
        {
            global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSType> query = _source.CastTo<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSType>();
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.DerivedVehicleGPSTypeSingle(_source.Context, query.GetPath(null));
        }
        /// <summary>
        /// Set the AC state
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("SetACState")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery SetACState(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckType> _source, global::System.Nullable<bool> state)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo.SetACState"), new global::Microsoft.OData.Client.BodyOperationParameter("state", state));
        }
        /// <summary>
        /// Turn off AC
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("TurnOffAC")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery TurnOffAC(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo.TruckType> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo.TurnOffAC"));
        }
    }
}
namespace Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Core.V1
{
}
namespace Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Vocabulary.V1
{
}
namespace Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS
{
    /// <summary>
    /// There are no comments for GPSContainer in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("GPSContainer")]
    public partial class GPSContainer : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new GPSContainer object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public GPSContainer(global::System.Uri serviceRoot) :
                this(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
        }

        /// <summary>
        /// Initialize a new GPSContainer object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public GPSContainer(global::System.Uri serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion protocolVersion) :
                base(serviceRoot, protocolVersion)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Vocabulary.V1");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Location", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Core.V1", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Core.V1");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Map", "Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Map");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            global::Microsoft.OData.Client.OriginalNameAttribute originalNameAttribute = (global::Microsoft.OData.Client.OriginalNameAttribute)global::System.Linq.Enumerable.SingleOrDefault(global::Microsoft.OData.Client.Utility.GetCustomAttributes(clientType, typeof(global::Microsoft.OData.Client.OriginalNameAttribute), true));
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Vocabulary.V1", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.TruckDemo", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Location.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Location.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Core.V1", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Core.V1.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Core.V1.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Map", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Map.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Map.", clientType.Name);
            }
            if (originalNameAttribute != null)
            {
                return clientType.Namespace + "." + originalNameAttribute.OriginalName;
            }
            return clientType.FullName;
        }
        /// <summary>
        /// There are no comments for VehicleGPSSetInGPS in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPSSetInGPS")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<VehicleGPSType> VehicleGPSSetInGPS
        {
            get
            {
                if ((this._VehicleGPSSetInGPS == null))
                {
                    this._VehicleGPSSetInGPS = base.CreateQuery<VehicleGPSType>("VehicleGPSSetInGPS");
                }
                return this._VehicleGPSSetInGPS;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<VehicleGPSType> _VehicleGPSSetInGPS;
        /// <summary>
        /// There are no comments for VehicleGPSSetInGPS in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToVehicleGPSSetInGPS(VehicleGPSType vehicleGPSType)
        {
            base.AddObject("VehicleGPSSetInGPS", vehicleGPSType);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Collections.Generic.Dictionary<string, string> ReferencesMap = new global::System.Collections.Generic.Dictionary<string, string>()
                {
                    {@"CoreTerms.csdl", @"<edmx:Edmx xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"" Version=""4.0"">
  <edmx:DataServices>
    <Schema xmlns=""http://docs.oasis-open.org/odata/ns/edm"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Core.V1"" Alias=""Core"">
      <Term Name=""Description"" Type=""Edm.String"">
        <Annotation Term=""Core.Description"" String=""A brief description of a model element"" />
        <Annotation Term=""Core.IsLanguageDependent"" Bool=""true"" />
      </Term>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>"},
                    {@"DeviceModelTerms.csdl", @"<edmx:Edmx xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"" Version=""4.0"">
  <edmx:Reference Uri=""http.localhost/odata/CoreTerms.csdl"">
    <edmx:Include Alias=""Core"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Core.V1"" />
  </edmx:Reference>
  <edmx:DataServices>
    <Schema xmlns=""http://docs.oasis-open.org/odata/ns/edm"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1"" Alias=""Self"">
      <Term Name=""IsEvent"" Type=""Edm.Boolean"" AppliesTo=""Property"" />
      <Term Name=""Settable"" Type=""Edm.Boolean"" AppliesTo=""Property"" />
      <Term Name=""IsAlarm"" Type=""Edm.Boolean"" AppliesTo=""ComplexType"" />
      <Term Name=""IsAttachmentPointer"" Type=""Edm.Boolean"" AppliesTo=""Property"" />
      <Term Name=""Timestamp"" Type=""Edm.DateTimeOffset"" />
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>"},
                    {@"GPS.csdl", @"<edmx:Edmx xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"" Version=""4.0"">
  <edmx:Reference Uri=""Location.csdl"">
    <edmx:Include Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Location"" Alias=""Loc"" />
  </edmx:Reference>
  <edmx:Reference Uri=""Map.csdl"">
    <edmx:Include Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Map"" Alias=""Map"" />
  </edmx:Reference>
  <edmx:Reference Uri=""TruckDemo.csdl"">
    <edmx:Include Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.TruckDemo"" Alias=""TruckDemo"" />
  </edmx:Reference>
  <edmx:Reference Uri=""DeviceModelTerms.csdl"">
    <edmx:Include Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1"" Alias=""IoTDeviceModel"" />
  </edmx:Reference>
  <edmx:DataServices>
    <Schema xmlns=""http://docs.oasis-open.org/odata/ns/edm"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS"" Alias=""Self"">
      <ComplexType Name=""GPSLostSignalAlarmType"">
        <Annotation Term=""IoTDeviceModel.IsAlarm"" Bool=""true"" />
        <Property Name=""Severity"" Type=""Edm.Int32"" />
        <Property Name=""LastKnownLocation"" Type=""Loc.GeoLocation"" />
      </ComplexType>
      <EntityType Name=""VehicleGPSType"">
        <Key>
          <PropertyRef Name=""Key"" />
        </Key>
        <Property Name=""Key"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""VehicleSpeed"" Type=""Edm.Double"" />
        <Property Name=""StartLocation"" Type=""Loc.GeoLocation"" />
        <Property Name=""EndLocation"" Type=""Loc.GeoLocation"" />
        <Property Name=""CurrentLocation"" Type=""Loc.GeoLocation"" />
        <Property Name=""Map"" Type=""Map.MapType"" />
        <Property Name=""LostSignalAlarm"" Type=""Self.GPSLostSignalAlarmType"">
          <Annotation Term=""IoTDeviceModel.IsEvent"" Bool=""true"" />
        </Property>
      </EntityType>
      <Action Name=""ResetVehicleSpeed"" IsBound=""true"">
        <Annotation Term=""Core.Description"" String=""Reset VehicleSpeed to Zero"" />
        <Parameter Name=""targetVehicleGPS"" Type=""Self.VehicleGPSType"" />
        <Parameter Name=""targetValue"" Type=""Edm.Double"" />
      </Action>
      <Function Name=""GetVehicleSpeed"" IsBound=""true"">
        <Parameter Name=""targetVehicleGPS"" Type=""Self.VehicleGPSType"" Nullable=""false"" />
        <ReturnType Type=""Edm.Double"" Nullable=""false"" />
      </Function>
      <Function Name=""GetDefaultOutsideGeoFenceAlarm"" IsComposable=""true"">
        <ReturnType Type=""Loc.OutsideGeoFenceAlarmType"" />
      </Function>
      <Action Name=""ResetVehicleSpeedToValue"">
        <ReturnType Type=""Collection(Self.VehicleGPSType)"" Nullable=""false"" />
        <Parameter Name=""targetValue"" Type=""Edm.Double"" />
      </Action>
      <EntityContainer Name=""GPSContainer"">
        <EntitySet Name=""VehicleGPSSetInGPS"" EntityType=""Self.VehicleGPSType"" />
        <ActionImport Name=""ResetVehicleSpeedToValue"" Action=""Self.ResetVehicleSpeedToValue"" EntitySet=""VehicleGPSSetInGPS"" />
        <FunctionImport Name=""GetDefaultOutsideGeoFenceAlarm"" Function=""Self.GetDefaultOutsideGeoFenceAlarm"" IncludeInServiceDocument=""true"" />
      </EntityContainer>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>"},
                    {@"Location.csdl", @"<edmx:Edmx xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"" Version=""4.0"">
  <edmx:Reference Uri=""DeviceModelTerms.csdl"">
    <edmx:Include Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Vocabulary.V1"" Alias=""IoTDeviceModel"" />
  </edmx:Reference>
  <edmx:DataServices>
    <Schema xmlns=""http://docs.oasis-open.org/odata/ns/edm"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Location"" Alias=""Self"">
      <ComplexType Name=""GeoLocation"">
        <Property Name=""Lat"" Type=""Edm.Double"" Nullable=""false"" />
        <Property Name=""Long"" Type=""Edm.Double"" Nullable=""false"" />
      </ComplexType>
      <ComplexType Name=""OutsideGeoFenceAlarmType"">
        <Annotation Term=""IoTDeviceModel.IsAlarm"" Bool=""true"" />
        <Property Name=""Severity"" Type=""Edm.Int32"" />
        <Property Name=""Location"" Type=""Self.GeoLocation"" />
      </ComplexType>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>"},
                    {@"Map.csdl", @"<edmx:Edmx xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"" Version=""4.0"">
  <edmx:DataServices>
    <Schema xmlns=""http://docs.oasis-open.org/odata/ns/edm"" Namespace=""Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.Map"" Alias=""Self"">
      <ComplexType Name=""MapType"">
        <Property Name=""ProviderName"" Type=""Edm.String"" />
        <Property Name=""Uri"" Type=""Edm.String"" />
        <Property Name=""MBytesDownloaded"" Type=""Edm.Double"" />
      </ComplexType>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>"},
                };
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private const string filePath = @"OData ServiceCsdl.xml";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader getReferencedModelFromMap(global::System.Uri uri)
            {
                string referencedEdmx;
                if (ReferencesMap.TryGetValue(uri.OriginalString, out referencedEdmx))
                {
                    return CreateXmlReader(referencedEdmx);
                }

                return null;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                                global::System.Xml.XmlReader reader = CreateXmlReader();
                try
                {
                    return global::Microsoft.OData.Edm.Csdl.CsdlReader.Parse(reader, getReferencedModelFromMap);
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader()
            {
                try
                {
                    var assembly = global::System.Reflection.Assembly.GetExecutingAssembly();
                    // If multiple resource names end with the file name, select the shortest one.
                    var resourcePath = global::System.Linq.Enumerable.First(
                        global::System.Linq.Enumerable.OrderBy(
                            global::System.Linq.Enumerable.Where(assembly.GetManifestResourceNames(), name => name.EndsWith(filePath)),
                            filteredName => filteredName.Length));
                    global::System.IO.Stream stream = assembly.GetManifestResourceStream(resourcePath);
                    return global::System.Xml.XmlReader.Create(new global::System.IO.StreamReader(stream));
                }
                catch(global::System.Xml.XmlException e)
                {
                    throw new global::System.Xml.XmlException("Failed to create an XmlReader from the stream. Check if the resource exists.", e);
                }
            }
        }
        /// <summary>
        /// There are no comments for GetDefaultOutsideGeoFenceAlarm in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetDefaultOutsideGeoFenceAlarm")]
        public virtual global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.OutsideGeoFenceAlarmType> GetDefaultOutsideGeoFenceAlarm()
        {
            return this.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.OutsideGeoFenceAlarmType>("", "GetDefaultOutsideGeoFenceAlarm", true);
        }
        /// <summary>
        /// There are no comments for ResetVehicleSpeedToValue in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("ResetVehicleSpeedToValue")]
        public virtual global::Microsoft.OData.Client.DataServiceActionQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> ResetVehicleSpeedToValue(global::System.Nullable<double> targetValue)
        {
            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType>(this, this.BaseUri.OriginalString.Trim('/') + "/ResetVehicleSpeedToValue", new global::Microsoft.OData.Client.BodyOperationParameter("targetValue", targetValue));
        }
    }
    /// <summary>
    /// There are no comments for GPSLostSignalAlarmType in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("GPSLostSignalAlarmType")]
    public partial class GPSLostSignalAlarmType : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// There are no comments for Property Severity in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Severity")]
        public virtual global::System.Nullable<int> Severity
        {
            get
            {
                return this._Severity;
            }
            set
            {
                this.OnSeverityChanging(value);
                this._Severity = value;
                this.OnSeverityChanged();
                this.OnPropertyChanged("Severity");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<int> _Severity;
        partial void OnSeverityChanging(global::System.Nullable<int> value);
        partial void OnSeverityChanged();
        /// <summary>
        /// There are no comments for Property LastKnownLocation in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("LastKnownLocation")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation LastKnownLocation
        {
            get
            {
                return this._LastKnownLocation;
            }
            set
            {
                this.OnLastKnownLocationChanging(value);
                this._LastKnownLocation = value;
                this.OnLastKnownLocationChanged();
                this.OnPropertyChanged("LastKnownLocation");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation _LastKnownLocation;
        partial void OnLastKnownLocationChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation value);
        partial void OnLastKnownLocationChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for VehicleGPSTypeSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPSTypeSingle")]
    public partial class VehicleGPSTypeSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<VehicleGPSType>
    {
        /// <summary>
        /// Initialize a new VehicleGPSTypeSingle object.
        /// </summary>
        public VehicleGPSTypeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new VehicleGPSTypeSingle object.
        /// </summary>
        public VehicleGPSTypeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new VehicleGPSTypeSingle object.
        /// </summary>
        public VehicleGPSTypeSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<VehicleGPSType> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for VehicleGPSType in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Key
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Key")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleGPSType")]
    public partial class VehicleGPSType : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new VehicleGPSType object.
        /// </summary>
        /// <param name="key">Initial value of Key.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static VehicleGPSType CreateVehicleGPSType(string key)
        {
            VehicleGPSType vehicleGPSType = new VehicleGPSType();
            vehicleGPSType.Key = key;
            return vehicleGPSType;
        }
        /// <summary>
        /// There are no comments for Property Key in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Key")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Key is required.")]
        public virtual string Key
        {
            get
            {
                return this._Key;
            }
            set
            {
                this.OnKeyChanging(value);
                this._Key = value;
                this.OnKeyChanged();
                this.OnPropertyChanged("Key");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Key;
        partial void OnKeyChanging(string value);
        partial void OnKeyChanged();
        /// <summary>
        /// There are no comments for Property VehicleSpeed in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("VehicleSpeed")]
        public virtual global::System.Nullable<double> VehicleSpeed
        {
            get
            {
                return this._VehicleSpeed;
            }
            set
            {
                this.OnVehicleSpeedChanging(value);
                this._VehicleSpeed = value;
                this.OnVehicleSpeedChanged();
                this.OnPropertyChanged("VehicleSpeed");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<double> _VehicleSpeed;
        partial void OnVehicleSpeedChanging(global::System.Nullable<double> value);
        partial void OnVehicleSpeedChanged();
        /// <summary>
        /// There are no comments for Property StartLocation in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("StartLocation")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation StartLocation
        {
            get
            {
                return this._StartLocation;
            }
            set
            {
                this.OnStartLocationChanging(value);
                this._StartLocation = value;
                this.OnStartLocationChanged();
                this.OnPropertyChanged("StartLocation");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation _StartLocation;
        partial void OnStartLocationChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation value);
        partial void OnStartLocationChanged();
        /// <summary>
        /// There are no comments for Property EndLocation in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("EndLocation")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation EndLocation
        {
            get
            {
                return this._EndLocation;
            }
            set
            {
                this.OnEndLocationChanging(value);
                this._EndLocation = value;
                this.OnEndLocationChanged();
                this.OnPropertyChanged("EndLocation");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation _EndLocation;
        partial void OnEndLocationChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation value);
        partial void OnEndLocationChanged();
        /// <summary>
        /// There are no comments for Property CurrentLocation in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CurrentLocation")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation CurrentLocation
        {
            get
            {
                return this._CurrentLocation;
            }
            set
            {
                this.OnCurrentLocationChanging(value);
                this._CurrentLocation = value;
                this.OnCurrentLocationChanged();
                this.OnPropertyChanged("CurrentLocation");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation _CurrentLocation;
        partial void OnCurrentLocationChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation value);
        partial void OnCurrentLocationChanged();
        /// <summary>
        /// There are no comments for Property Map in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Map")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Map.MapType Map
        {
            get
            {
                return this._Map;
            }
            set
            {
                this.OnMapChanging(value);
                this._Map = value;
                this.OnMapChanged();
                this.OnPropertyChanged("Map");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Map.MapType _Map;
        partial void OnMapChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Map.MapType value);
        partial void OnMapChanged();
        /// <summary>
        /// There are no comments for Property LostSignalAlarm in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("LostSignalAlarm")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.GPSLostSignalAlarmType LostSignalAlarm
        {
            get
            {
                return this._LostSignalAlarm;
            }
            set
            {
                this.OnLostSignalAlarmChanging(value);
                this._LostSignalAlarm = value;
                this.OnLostSignalAlarmChanged();
                this.OnPropertyChanged("LostSignalAlarm");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.GPSLostSignalAlarmType _LostSignalAlarm;
        partial void OnLostSignalAlarmChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.GPSLostSignalAlarmType value);
        partial void OnLostSignalAlarmChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
        /// <summary>
        /// There are no comments for GetVehicleSpeed in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetVehicleSpeed")]
        public virtual global::Microsoft.OData.Client.DataServiceQuerySingle<double> GetVehicleSpeed()
        {
            global::System.Uri requestUri;
            Context.TryGetUri(this, out requestUri);

            return this.Context.CreateFunctionQuerySingle<double>(string.Join("/", global::System.Linq.Enumerable.Select(global::System.Linq.Enumerable.Skip(requestUri.Segments, this.Context.BaseUri.Segments.Length), s => s.Trim('/'))), "Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS.GetVehicleSpeed", false);
        }
        /// <summary>
        /// Reset VehicleSpeed to Zero
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("ResetVehicleSpeed")]
        public virtual global::Microsoft.OData.Client.DataServiceActionQuery ResetVehicleSpeed(global::System.Nullable<double> targetValue)
        {
            global::Microsoft.OData.Client.EntityDescriptor resource = Context.EntityTracker.TryGetEntityDescriptor(this);
            if (resource == null)
            {
                throw new global::System.Exception("cannot find entity");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(this.Context, resource.EditLink.OriginalString.Trim('/') + "/Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS.ResetVehicleSpeed", new global::Microsoft.OData.Client.BodyOperationParameter("targetValue", targetValue));
        }
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType as global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType as global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="key">The value of key</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _source,
            string key)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Key", key }
            };
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// There are no comments for GetVehicleSpeed in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetVehicleSpeed")]
        public static global::Microsoft.OData.Client.DataServiceQuerySingle<double> GetVehicleSpeed(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuerySingle<double>("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS.GetVehicleSpeed", false);
        }
        /// <summary>
        /// Reset VehicleSpeed to Zero
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("ResetVehicleSpeed")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery ResetVehicleSpeed(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.GPS.VehicleGPSType> _source, global::System.Nullable<double> targetValue)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.OData.E2E.TestCommon.Common.Server.ODataModelRef.GPS.ResetVehicleSpeed"), new global::Microsoft.OData.Client.BodyOperationParameter("targetValue", targetValue));
        }
    }
}
namespace Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location
{
    /// <summary>
    /// There are no comments for GeoLocation in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("GeoLocation")]
    public partial class GeoLocation : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new GeoLocation object.
        /// </summary>
        /// <param name="lat">Initial value of Lat.</param>
        /// <param name="long">Initial value of Long.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static GeoLocation CreateGeoLocation(double lat, double @long)
        {
            GeoLocation geoLocation = new GeoLocation();
            geoLocation.Lat = lat;
            geoLocation.Long = @long;
            return geoLocation;
        }
        /// <summary>
        /// There are no comments for Property Lat in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Lat")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Lat is required.")]
        public virtual double Lat
        {
            get
            {
                return this._Lat;
            }
            set
            {
                this.OnLatChanging(value);
                this._Lat = value;
                this.OnLatChanged();
                this.OnPropertyChanged("Lat");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private double _Lat;
        partial void OnLatChanging(double value);
        partial void OnLatChanged();
        /// <summary>
        /// There are no comments for Property Long in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Long")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Long is required.")]
        public virtual double Long
        {
            get
            {
                return this._Long;
            }
            set
            {
                this.OnLongChanging(value);
                this._Long = value;
                this.OnLongChanged();
                this.OnPropertyChanged("Long");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private double _Long;
        partial void OnLongChanging(double value);
        partial void OnLongChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for OutsideGeoFenceAlarmType in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("OutsideGeoFenceAlarmType")]
    public partial class OutsideGeoFenceAlarmType : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// There are no comments for Property Severity in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Severity")]
        public virtual global::System.Nullable<int> Severity
        {
            get
            {
                return this._Severity;
            }
            set
            {
                this.OnSeverityChanging(value);
                this._Severity = value;
                this.OnSeverityChanged();
                this.OnPropertyChanged("Severity");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<int> _Severity;
        partial void OnSeverityChanging(global::System.Nullable<int> value);
        partial void OnSeverityChanged();
        /// <summary>
        /// There are no comments for Property Location in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Location")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation Location
        {
            get
            {
                return this._Location;
            }
            set
            {
                this.OnLocationChanging(value);
                this._Location = value;
                this.OnLocationChanged();
                this.OnPropertyChanged("Location");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation _Location;
        partial void OnLocationChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Location.GeoLocation value);
        partial void OnLocationChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
}
namespace Microsoft.OData.E2E.TestCommon.Common.Client.ODataModelRef.Map
{
    /// <summary>
    /// There are no comments for MapType in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("MapType")]
    public partial class MapType : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// There are no comments for Property ProviderName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("ProviderName")]
        public virtual string ProviderName
        {
            get
            {
                return this._ProviderName;
            }
            set
            {
                this.OnProviderNameChanging(value);
                this._ProviderName = value;
                this.OnProviderNameChanged();
                this.OnPropertyChanged("ProviderName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _ProviderName;
        partial void OnProviderNameChanging(string value);
        partial void OnProviderNameChanged();
        /// <summary>
        /// There are no comments for Property Uri in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Uri")]
        public virtual string Uri
        {
            get
            {
                return this._Uri;
            }
            set
            {
                this.OnUriChanging(value);
                this._Uri = value;
                this.OnUriChanged();
                this.OnPropertyChanged("Uri");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Uri;
        partial void OnUriChanging(string value);
        partial void OnUriChanged();
        /// <summary>
        /// There are no comments for Property MBytesDownloaded in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("MBytesDownloaded")]
        public virtual global::System.Nullable<double> MBytesDownloaded
        {
            get
            {
                return this._MBytesDownloaded;
            }
            set
            {
                this.OnMBytesDownloadedChanging(value);
                this._MBytesDownloaded = value;
                this.OnMBytesDownloadedChanged();
                this.OnPropertyChanged("MBytesDownloaded");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<double> _MBytesDownloaded;
        partial void OnMBytesDownloadedChanging(global::System.Nullable<double> value);
        partial void OnMBytesDownloadedChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
}
