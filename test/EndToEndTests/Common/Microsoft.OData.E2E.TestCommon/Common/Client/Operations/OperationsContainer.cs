//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 3/11/2025 3:09:52 PM
namespace Microsoft.OData.E2E.TestCommon.Common.Client.Operations
{
    /// <summary>
    /// There are no comments for Container in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Container")]
    public partial class Container : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new Container object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public Container(global::System.Uri serviceRoot) :
                this(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
        }

        /// <summary>
        /// Initialize a new Container object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public Container(global::System.Uri serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion protocolVersion) :
                base(serviceRoot, protocolVersion)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.E2E.TestCommon.Common.Server.Operations", "Microsoft.OData.E2E.TestCommon.Common.Client.Operations");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            global::Microsoft.OData.Client.OriginalNameAttribute originalNameAttribute = (global::Microsoft.OData.Client.OriginalNameAttribute)global::System.Linq.Enumerable.SingleOrDefault(global::Microsoft.OData.Client.Utility.GetCustomAttributes(clientType, typeof(global::Microsoft.OData.Client.OriginalNameAttribute), true));
            if (clientType.Namespace.Equals("Microsoft.OData.E2E.TestCommon.Common.Client.Operations", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.Operations.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.E2E.TestCommon.Common.Server.Operations.", clientType.Name);
            }
            if (originalNameAttribute != null)
            {
                return clientType.Namespace + "." + originalNameAttribute.OriginalName;
            }
            return clientType.FullName;
        }
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Customers")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<Customer> Customers
        {
            get
            {
                if ((this._Customers == null))
                {
                    this._Customers = base.CreateQuery<Customer>("Customers");
                }
                return this._Customers;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<Customer> _Customers;
        /// <summary>
        /// There are no comments for Orders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Orders")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<Order> Orders
        {
            get
            {
                if ((this._Orders == null))
                {
                    this._Orders = base.CreateQuery<Order>("Orders");
                }
                return this._Orders;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<Order> _Orders;
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
        /// <summary>
        /// There are no comments for Orders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private const string filePath = @"OperationsServiceCsdl.xml";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                global::System.Xml.XmlReader reader = CreateXmlReader();
                try
                {
                    global::System.Collections.Generic.IEnumerable<global::Microsoft.OData.Edm.Validation.EdmError> errors;
                    global::Microsoft.OData.Edm.IEdmModel edmModel;

                    if (!global::Microsoft.OData.Edm.Csdl.CsdlReader.TryParse(reader, true, out edmModel, out errors))
                    {
                        global::System.Text.StringBuilder errorMessages = new global::System.Text.StringBuilder();
                        foreach (var error in errors)
                        {
                            errorMessages.Append(error.ErrorMessage);
                            errorMessages.Append("; ");
                        }
                        throw new global::System.InvalidOperationException(errorMessages.ToString());
                    }

                    return edmModel;
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader()
            {
                try
                {
                    var assembly = global::System.Reflection.Assembly.GetExecutingAssembly();
                    // If multiple resource names end with the file name, select the shortest one.
                    var resourcePath = global::System.Linq.Enumerable.First(
                        global::System.Linq.Enumerable.OrderBy(
                            global::System.Linq.Enumerable.Where(assembly.GetManifestResourceNames(), name => name.EndsWith(filePath)),
                            filteredName => filteredName.Length));
                    global::System.IO.Stream stream = assembly.GetManifestResourceStream(resourcePath);
                    return global::System.Xml.XmlReader.Create(new global::System.IO.StreamReader(stream));
                }
                catch (global::System.Xml.XmlException e)
                {
                    throw new global::System.Xml.XmlException("Failed to create an XmlReader from the stream. Check if the resource exists.", e);
                }
            }
        }
        /// <summary>
        /// There are no comments for GetCustomersByOrders in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetCustomersByOrders")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> GetCustomersByOrders(global::System.Collections.Generic.ICollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> orders, bool useEntityReference = false)
        {
            return this.CreateFunctionQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>("", "GetCustomersByOrders", true, new global::Microsoft.OData.Client.UriEntityOperationParameter("orders", orders, useEntityReference));
        }
        /// <summary>
        /// There are no comments for GetCustomerByOrder in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetCustomerByOrder")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle GetCustomerByOrder(global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order order, bool useEntityReference = false)
        {
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(this.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>("", "GetCustomerByOrder", true, new global::Microsoft.OData.Client.UriEntityOperationParameter("order", order, useEntityReference)));
        }
        /// <summary>
        /// There are no comments for GetCustomerAddress in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetCustomerAddress")]
        public virtual global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address> GetCustomerAddress(global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer customer, bool useEntityReference = false)
        {
            return this.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address>("", "GetCustomerAddress", true, new global::Microsoft.OData.Client.UriEntityOperationParameter("customer", customer, useEntityReference));
        }
        /// <summary>
        /// There are no comments for ResetDefaultDataSource in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("ResetDefaultDataSource")]
        public virtual global::Microsoft.OData.Client.DataServiceActionQuery ResetDefaultDataSource()
        {
            return new global::Microsoft.OData.Client.DataServiceActionQuery(this, this.BaseUri.OriginalString.Trim('/') + "/ResetDefaultDataSource");
        }
    }
    /// <summary>
    /// There are no comments for CustomerSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("CustomerSingle")]
    public partial class CustomerSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Customer>
    {
        /// <summary>
        /// Initialize a new CustomerSingle object.
        /// </summary>
        public CustomerSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new CustomerSingle object.
        /// </summary>
        public CustomerSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new CustomerSingle object.
        /// </summary>
        public CustomerSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Customer> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for Orders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Orders")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> Orders
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Orders == null))
                {
                    this._Orders = Context.CreateQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order>(GetPath("Orders"));
                }
                return this._Orders;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> _Orders;
    }
    /// <summary>
    /// There are no comments for Customer in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CustomerID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("CustomerID")]
    [global::Microsoft.OData.Client.EntitySet("Customers")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Customer")]
    public partial class Customer : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="level">Initial value of Level.</param>
        /// <param name="updatedTime">Initial value of UpdatedTime.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Customer CreateCustomer(int customerID, global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerLevel level, global::System.DateTimeOffset updatedTime)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            customer.Level = level;
            customer.UpdatedTime = updatedTime;
            return customer;
        }
        /// <summary>
        /// There are no comments for Property CustomerID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CustomerID")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "CustomerID is required.")]
        public virtual int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                this.OnCustomerIDChanging(value);
                this._CustomerID = value;
                this.OnCustomerIDChanged();
                this.OnPropertyChanged("CustomerID");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _CustomerID;
        partial void OnCustomerIDChanging(int value);
        partial void OnCustomerIDChanged();
        /// <summary>
        /// There are no comments for Property FirstName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("FirstName")]
        public virtual string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                this.OnFirstNameChanging(value);
                this._FirstName = value;
                this.OnFirstNameChanged();
                this.OnPropertyChanged("FirstName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        /// <summary>
        /// There are no comments for Property LastName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("LastName")]
        public virtual string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                this.OnLastNameChanging(value);
                this._LastName = value;
                this.OnLastNameChanged();
                this.OnPropertyChanged("LastName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        /// <summary>
        /// There are no comments for Property Emails in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Emails")]
        public virtual global::System.Collections.ObjectModel.ObservableCollection<string> Emails
        {
            get
            {
                return this._Emails;
            }
            set
            {
                this.OnEmailsChanging(value);
                this._Emails = value;
                this.OnEmailsChanged();
                this.OnPropertyChanged("Emails");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.ObservableCollection<string> _Emails = new global::System.Collections.ObjectModel.ObservableCollection<string>();
        partial void OnEmailsChanging(global::System.Collections.ObjectModel.ObservableCollection<string> value);
        partial void OnEmailsChanged();
        /// <summary>
        /// There are no comments for Property Address in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Address")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                this.OnAddressChanging(value);
                this._Address = value;
                this.OnAddressChanged();
                this.OnPropertyChanged("Address");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address _Address;
        partial void OnAddressChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address value);
        partial void OnAddressChanged();
        /// <summary>
        /// There are no comments for Property Level in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Level")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Level is required.")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerLevel Level
        {
            get
            {
                return this._Level;
            }
            set
            {
                this.OnLevelChanging(value);
                this._Level = value;
                this.OnLevelChanged();
                this.OnPropertyChanged("Level");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerLevel _Level;
        partial void OnLevelChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerLevel value);
        partial void OnLevelChanged();
        /// <summary>
        /// There are no comments for Property UpdatedTime in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("UpdatedTime")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "UpdatedTime is required.")]
        public virtual global::System.DateTimeOffset UpdatedTime
        {
            get
            {
                return this._UpdatedTime;
            }
            set
            {
                this.OnUpdatedTimeChanging(value);
                this._UpdatedTime = value;
                this.OnUpdatedTimeChanged();
                this.OnPropertyChanged("UpdatedTime");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _UpdatedTime;
        partial void OnUpdatedTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdatedTimeChanged();
        /// <summary>
        /// There are no comments for Property Orders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Orders")]
        public virtual global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> Orders
        {
            get
            {
                return this._Orders;
            }
            set
            {
                this.OnOrdersChanging(value);
                this._Orders = value;
                this.OnOrdersChanged();
                this.OnPropertyChanged("Orders");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> _Orders = new global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnOrdersChanging(global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> value);
        partial void OnOrdersChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
        /// <summary>
        /// There are no comments for GetCustomerAddress in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetCustomerAddress")]
        public virtual global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address> GetCustomerAddress()
        {
            global::System.Uri requestUri;
            Context.TryGetUri(this, out requestUri);

            return this.Context.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address>(string.Join("/", global::System.Linq.Enumerable.Select(global::System.Linq.Enumerable.Skip(requestUri.Segments, this.Context.BaseUri.Segments.Length), s => s.Trim('/'))), "GetCustomerAddress", true);
        }
        /// <summary>
        /// There are no comments for VerifyCustomerAddress in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("VerifyCustomerAddress")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle VerifyCustomerAddress(global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address address)
        {
            global::System.Uri requestUri;
            Context.TryGetUri(this, out requestUri);

            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(this.Context.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>(string.Join("/", global::System.Linq.Enumerable.Select(global::System.Linq.Enumerable.Skip(requestUri.Segments, this.Context.BaseUri.Segments.Length), s => s.Trim('/'))), "VerifyCustomerAddress", true, new global::Microsoft.OData.Client.UriOperationParameter("address", address)));
        }
        /// <summary>
        /// There are no comments for VerifyCustomerByOrder in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("VerifyCustomerByOrder")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle VerifyCustomerByOrder(global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order order, bool useEntityReference = false)
        {
            global::System.Uri requestUri;
            Context.TryGetUri(this, out requestUri);

            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(this.Context.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>(string.Join("/", global::System.Linq.Enumerable.Select(global::System.Linq.Enumerable.Skip(requestUri.Segments, this.Context.BaseUri.Segments.Length), s => s.Trim('/'))), "VerifyCustomerByOrder", true, new global::Microsoft.OData.Client.UriEntityOperationParameter("order", order, useEntityReference)));
        }
        /// <summary>
        /// There are no comments for GetOrdersFromCustomerByNotes in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetOrdersFromCustomerByNotes")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> GetOrdersFromCustomerByNotes(global::System.Collections.Generic.ICollection<string> notes)
        {
            global::System.Uri requestUri;
            Context.TryGetUri(this, out requestUri);
            return this.Context.CreateFunctionQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order>(string.Join("/", global::System.Linq.Enumerable.Select(global::System.Linq.Enumerable.Skip(requestUri.Segments, this.Context.BaseUri.Segments.Length), s => s.Trim('/'))), "GetOrdersFromCustomerByNotes", true, new global::Microsoft.OData.Client.UriOperationParameter("notes", notes));
        }
    }
    /// <summary>
    /// There are no comments for OrderSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("OrderSingle")]
    public partial class OrderSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Order>
    {
        /// <summary>
        /// Initialize a new OrderSingle object.
        /// </summary>
        public OrderSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new OrderSingle object.
        /// </summary>
        public OrderSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new OrderSingle object.
        /// </summary>
        public OrderSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Order> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for Customer in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Customer")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle Customer
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Customer == null))
                {
                    this._Customer = new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(this.Context, GetPath("Customer"));
                }
                return this._Customer;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle _Customer;
    }
    /// <summary>
    /// There are no comments for Order in the schema.
    /// </summary>
    /// <KeyProperties>
    /// OrderID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("OrderID")]
    [global::Microsoft.OData.Client.EntitySet("Orders")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Order")]
    public partial class Order : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderID">Initial value of OrderID.</param>
        /// <param name="orderDate">Initial value of OrderDate.</param>
        /// <param name="updatedTime">Initial value of UpdatedTime.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Order CreateOrder(int orderID, global::System.DateTimeOffset orderDate, global::System.DateTimeOffset updatedTime)
        {
            Order order = new Order();
            order.OrderID = orderID;
            order.OrderDate = orderDate;
            order.UpdatedTime = updatedTime;
            return order;
        }
        /// <summary>
        /// There are no comments for Property OrderID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("OrderID")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "OrderID is required.")]
        public virtual int OrderID
        {
            get
            {
                return this._OrderID;
            }
            set
            {
                this.OnOrderIDChanging(value);
                this._OrderID = value;
                this.OnOrderIDChanged();
                this.OnPropertyChanged("OrderID");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _OrderID;
        partial void OnOrderIDChanging(int value);
        partial void OnOrderIDChanged();
        /// <summary>
        /// There are no comments for Property OrderDate in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("OrderDate")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "OrderDate is required.")]
        public virtual global::System.DateTimeOffset OrderDate
        {
            get
            {
                return this._OrderDate;
            }
            set
            {
                this.OnOrderDateChanging(value);
                this._OrderDate = value;
                this.OnOrderDateChanged();
                this.OnPropertyChanged("OrderDate");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTimeOffset value);
        partial void OnOrderDateChanged();
        /// <summary>
        /// There are no comments for Property Notes in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Notes")]
        public virtual global::System.Collections.ObjectModel.ObservableCollection<string> Notes
        {
            get
            {
                return this._Notes;
            }
            set
            {
                this.OnNotesChanging(value);
                this._Notes = value;
                this.OnNotesChanged();
                this.OnPropertyChanged("Notes");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.ObservableCollection<string> _Notes = new global::System.Collections.ObjectModel.ObservableCollection<string>();
        partial void OnNotesChanging(global::System.Collections.ObjectModel.ObservableCollection<string> value);
        partial void OnNotesChanged();
        /// <summary>
        /// There are no comments for Property OrderDetails in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("OrderDetails")]
        public virtual global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderDetail> OrderDetails
        {
            get
            {
                return this._OrderDetails;
            }
            set
            {
                this.OnOrderDetailsChanging(value);
                this._OrderDetails = value;
                this.OnOrderDetailsChanged();
                this.OnPropertyChanged("OrderDetails");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderDetail> _OrderDetails = new global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderDetail>();
        partial void OnOrderDetailsChanging(global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderDetail> value);
        partial void OnOrderDetailsChanged();
        /// <summary>
        /// There are no comments for Property InfoFromCustomer in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("InfoFromCustomer")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.InfoFromCustomer InfoFromCustomer
        {
            get
            {
                return this._InfoFromCustomer;
            }
            set
            {
                this.OnInfoFromCustomerChanging(value);
                this._InfoFromCustomer = value;
                this.OnInfoFromCustomerChanged();
                this.OnPropertyChanged("InfoFromCustomer");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.InfoFromCustomer _InfoFromCustomer;
        partial void OnInfoFromCustomerChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.InfoFromCustomer value);
        partial void OnInfoFromCustomerChanged();
        /// <summary>
        /// There are no comments for Property UpdatedTime in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("UpdatedTime")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "UpdatedTime is required.")]
        public virtual global::System.DateTimeOffset UpdatedTime
        {
            get
            {
                return this._UpdatedTime;
            }
            set
            {
                this.OnUpdatedTimeChanging(value);
                this._UpdatedTime = value;
                this.OnUpdatedTimeChanged();
                this.OnPropertyChanged("UpdatedTime");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _UpdatedTime;
        partial void OnUpdatedTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdatedTimeChanged();
        /// <summary>
        /// There are no comments for Property Customer in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Customer")]
        public virtual global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer Customer
        {
            get
            {
                return this._Customer;
            }
            set
            {
                this.OnCustomerChanging(value);
                this._Customer = value;
                this.OnCustomerChanged();
                this.OnPropertyChanged("Customer");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer _Customer;
        partial void OnCustomerChanging(global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer value);
        partial void OnCustomerChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for Address in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Address")]
    public partial class Address : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="updatedTime">Initial value of UpdatedTime.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Address CreateAddress(global::System.DateTimeOffset updatedTime)
        {
            Address address = new Address();
            address.UpdatedTime = updatedTime;
            return address;
        }
        /// <summary>
        /// There are no comments for Property Street in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Street")]
        public virtual string Street
        {
            get
            {
                return this._Street;
            }
            set
            {
                this.OnStreetChanging(value);
                this._Street = value;
                this.OnStreetChanged();
                this.OnPropertyChanged("Street");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Street;
        partial void OnStreetChanging(string value);
        partial void OnStreetChanged();
        /// <summary>
        /// There are no comments for Property City in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("City")]
        public virtual string City
        {
            get
            {
                return this._City;
            }
            set
            {
                this.OnCityChanging(value);
                this._City = value;
                this.OnCityChanged();
                this.OnPropertyChanged("City");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        /// <summary>
        /// There are no comments for Property PostalCode in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("PostalCode")]
        public virtual string PostalCode
        {
            get
            {
                return this._PostalCode;
            }
            set
            {
                this.OnPostalCodeChanging(value);
                this._PostalCode = value;
                this.OnPostalCodeChanged();
                this.OnPropertyChanged("PostalCode");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _PostalCode;
        partial void OnPostalCodeChanging(string value);
        partial void OnPostalCodeChanged();
        /// <summary>
        /// There are no comments for Property UpdatedTime in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("UpdatedTime")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "UpdatedTime is required.")]
        public virtual global::System.DateTimeOffset UpdatedTime
        {
            get
            {
                return this._UpdatedTime;
            }
            set
            {
                this.OnUpdatedTimeChanging(value);
                this._UpdatedTime = value;
                this.OnUpdatedTimeChanged();
                this.OnPropertyChanged("UpdatedTime");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _UpdatedTime;
        partial void OnUpdatedTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdatedTimeChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for CompanyAddress in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("CompanyAddress")]
    public partial class CompanyAddress : Address
    {
        /// <summary>
        /// Create a new CompanyAddress object.
        /// </summary>
        /// <param name="updatedTime">Initial value of UpdatedTime.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static CompanyAddress CreateCompanyAddress(global::System.DateTimeOffset updatedTime)
        {
            CompanyAddress companyAddress = new CompanyAddress();
            companyAddress.UpdatedTime = updatedTime;
            return companyAddress;
        }
        /// <summary>
        /// There are no comments for Property CompanyName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CompanyName")]
        public virtual string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                this.OnCompanyNameChanging(value);
                this._CompanyName = value;
                this.OnCompanyNameChanged();
                this.OnPropertyChanged("CompanyName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _CompanyName;
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
    }
    /// <summary>
    /// There are no comments for OrderDetail in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("OrderDetail")]
    public partial class OrderDetail : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new OrderDetail object.
        /// </summary>
        /// <param name="quantity">Initial value of Quantity.</param>
        /// <param name="unitPrice">Initial value of UnitPrice.</param>
        /// <param name="updatedTime">Initial value of UpdatedTime.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static OrderDetail CreateOrderDetail(int quantity, float unitPrice, global::System.DateTimeOffset updatedTime)
        {
            OrderDetail orderDetail = new OrderDetail();
            orderDetail.Quantity = quantity;
            orderDetail.UnitPrice = unitPrice;
            orderDetail.UpdatedTime = updatedTime;
            return orderDetail;
        }
        /// <summary>
        /// There are no comments for Property Quantity in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Quantity")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Quantity is required.")]
        public virtual int Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                this.OnQuantityChanging(value);
                this._Quantity = value;
                this.OnQuantityChanged();
                this.OnPropertyChanged("Quantity");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Quantity;
        partial void OnQuantityChanging(int value);
        partial void OnQuantityChanged();
        /// <summary>
        /// There are no comments for Property UnitPrice in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("UnitPrice")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "UnitPrice is required.")]
        public virtual float UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                this.OnUnitPriceChanging(value);
                this._UnitPrice = value;
                this.OnUnitPriceChanged();
                this.OnPropertyChanged("UnitPrice");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private float _UnitPrice;
        partial void OnUnitPriceChanging(float value);
        partial void OnUnitPriceChanged();
        /// <summary>
        /// There are no comments for Property UpdatedTime in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("UpdatedTime")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "UpdatedTime is required.")]
        public virtual global::System.DateTimeOffset UpdatedTime
        {
            get
            {
                return this._UpdatedTime;
            }
            set
            {
                this.OnUpdatedTimeChanging(value);
                this._UpdatedTime = value;
                this.OnUpdatedTimeChanged();
                this.OnPropertyChanged("UpdatedTime");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _UpdatedTime;
        partial void OnUpdatedTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdatedTimeChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for InfoFromCustomer in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("InfoFromCustomer")]
    public partial class InfoFromCustomer : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new InfoFromCustomer object.
        /// </summary>
        /// <param name="updatedTime">Initial value of UpdatedTime.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static InfoFromCustomer CreateInfoFromCustomer(global::System.DateTimeOffset updatedTime)
        {
            InfoFromCustomer infoFromCustomer = new InfoFromCustomer();
            infoFromCustomer.UpdatedTime = updatedTime;
            return infoFromCustomer;
        }
        /// <summary>
        /// There are no comments for Property CustomerMessage in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CustomerMessage")]
        public virtual string CustomerMessage
        {
            get
            {
                return this._CustomerMessage;
            }
            set
            {
                this.OnCustomerMessageChanging(value);
                this._CustomerMessage = value;
                this.OnCustomerMessageChanged();
                this.OnPropertyChanged("CustomerMessage");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _CustomerMessage;
        partial void OnCustomerMessageChanging(string value);
        partial void OnCustomerMessageChanged();
        /// <summary>
        /// There are no comments for Property UpdatedTime in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("UpdatedTime")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "UpdatedTime is required.")]
        public virtual global::System.DateTimeOffset UpdatedTime
        {
            get
            {
                return this._UpdatedTime;
            }
            set
            {
                this.OnUpdatedTimeChanging(value);
                this._UpdatedTime = value;
                this.OnUpdatedTimeChanged();
                this.OnPropertyChanged("UpdatedTime");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _UpdatedTime;
        partial void OnUpdatedTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdatedTimeChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for HomeAddress in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("HomeAddress")]
    public partial class HomeAddress : Address
    {
        /// <summary>
        /// Create a new HomeAddress object.
        /// </summary>
        /// <param name="updatedTime">Initial value of UpdatedTime.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static HomeAddress CreateHomeAddress(global::System.DateTimeOffset updatedTime)
        {
            HomeAddress homeAddress = new HomeAddress();
            homeAddress.UpdatedTime = updatedTime;
            return homeAddress;
        }
        /// <summary>
        /// There are no comments for Property FamilyName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("FamilyName")]
        public virtual string FamilyName
        {
            get
            {
                return this._FamilyName;
            }
            set
            {
                this.OnFamilyNameChanging(value);
                this._FamilyName = value;
                this.OnFamilyNameChanged();
                this.OnPropertyChanged("FamilyName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _FamilyName;
        partial void OnFamilyNameChanging(string value);
        partial void OnFamilyNameChanged();
    }
    /// <summary>
    /// There are no comments for CustomerLevel in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("CustomerLevel")]
    public enum CustomerLevel
    {
        [global::Microsoft.OData.Client.OriginalNameAttribute("Common")]
        Common = 0,
        [global::Microsoft.OData.Client.OriginalNameAttribute("Silver")]
        Silver = 1,
        [global::Microsoft.OData.Client.OriginalNameAttribute("Gold")]
        Gold = 2
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer as global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer as global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="customerID">The value of customerID</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source,
            int customerID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CustomerID", customerID }
            };
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order as global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order as global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="orderID">The value of orderID</param>
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> _source,
            int orderID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "OrderID", orderID }
            };
            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// There are no comments for GetCustomerForAddress in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetCustomerForAddress")]
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle GetCustomerForAddress(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source, global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address address)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(_source.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>("GetCustomerForAddress", true, new global::Microsoft.OData.Client.UriOperationParameter("address", address)));
        }
        /// <summary>
        /// There are no comments for GetCustomersForAddresses in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetCustomersForAddresses")]
        public static global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> GetCustomersForAddresses(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source, global::System.Collections.Generic.ICollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address> addresses)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>("GetCustomersForAddresses", true, new global::Microsoft.OData.Client.UriOperationParameter("addresses", addresses));
        }
        /// <summary>
        /// There are no comments for GetCustomerForAddresses in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetCustomerForAddresses")]
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle GetCustomerForAddresses(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source, global::System.Collections.Generic.ICollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address> addresses)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(_source.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>("GetCustomerForAddresses", true, new global::Microsoft.OData.Client.UriOperationParameter("addresses", addresses)));
        }
        /// <summary>
        /// There are no comments for GetCustomerAddress in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetCustomerAddress")]
        public static global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address> GetCustomerAddress(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address>("GetCustomerAddress", true);
        }
        /// <summary>
        /// There are no comments for VerifyCustomerAddress in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("VerifyCustomerAddress")]
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle VerifyCustomerAddress(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source, global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Address address)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(_source.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>("VerifyCustomerAddress", true, new global::Microsoft.OData.Client.UriOperationParameter("address", address)));
        }
        /// <summary>
        /// There are no comments for VerifyCustomerByOrder in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("VerifyCustomerByOrder")]
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle VerifyCustomerByOrder(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source, global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order order, bool useEntityReference = false)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(_source.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>("VerifyCustomerByOrder", true, new global::Microsoft.OData.Client.UriEntityOperationParameter("order", order, useEntityReference)));
        }
        /// <summary>
        /// There are no comments for GetOrdersFromCustomerByNotes in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetOrdersFromCustomerByNotes")]
        public static global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> GetOrdersFromCustomerByNotes(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source, global::System.Collections.Generic.ICollection<string> notes)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order>("GetOrdersFromCustomerByNotes", true, new global::Microsoft.OData.Client.UriOperationParameter("notes", notes));
        }
        /// <summary>
        /// There are no comments for GetOrdersByNote in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetOrdersByNote")]
        public static global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> GetOrdersByNote(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> _source, string note)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order>("GetOrdersByNote", true, new global::Microsoft.OData.Client.UriOperationParameter("note", note));
        }
        /// <summary>
        /// There are no comments for GetOrderByNote in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetOrderByNote")]
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderSingle GetOrderByNote(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> _source, global::System.Collections.Generic.ICollection<string> notes)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.OrderSingle(_source.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order>("GetOrderByNote", true, new global::Microsoft.OData.Client.UriOperationParameter("notes", notes)));
        }
        /// <summary>
        /// There are no comments for GetCustomersByOrders in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetCustomersByOrders")]
        public static global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> GetCustomersByOrders(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source, global::System.Collections.Generic.ICollection<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order> orders, bool useEntityReference = true)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>("GetCustomersByOrders", true, new global::Microsoft.OData.Client.UriEntityOperationParameter("orders", orders, useEntityReference));
        }
        /// <summary>
        /// There are no comments for GetCustomerByOrder in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetCustomerByOrder")]
        public static global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle GetCustomerByOrder(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer> _source, global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Order order, bool useEntityReference = false)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.CustomerSingle(_source.CreateFunctionQuerySingle<global::Microsoft.OData.E2E.TestCommon.Common.Client.Operations.Customer>("GetCustomerByOrder", true, new global::Microsoft.OData.Client.UriEntityOperationParameter("order", order, useEntityReference)));
        }
    }
}
