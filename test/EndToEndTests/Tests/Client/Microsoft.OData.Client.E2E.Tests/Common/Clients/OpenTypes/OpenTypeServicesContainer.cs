//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 7/15/2024 12:05:19 PM
namespace Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes
{
    /// <summary>
    /// There are no comments for RowSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("RowSingle")]
    public partial class RowSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Row>
    {
        /// <summary>
        /// Initialize a new RowSingle object.
        /// </summary>
        public RowSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new RowSingle object.
        /// </summary>
        public RowSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new RowSingle object.
        /// </summary>
        public RowSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Row> query)
            : base(query) { }

    }
    /// <summary>
    /// There are no comments for Row in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Row")]
    public partial class Row : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Row object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Row CreateRow(global::System.Guid ID)
        {
            Row row = new Row();
            row.Id = ID;
            return row;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Id")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Id is required.")]
        public virtual global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property DynamicProperties in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("DynamicProperties")]
        [global::Microsoft.OData.Client.ContainerProperty]
        public virtual global::System.Collections.Generic.IDictionary<string, object> DynamicProperties
        {
            get
            {
                return this._DynamicProperties;
            }
            set
            {
                this.OnDynamicPropertiesChanging(value);
                this._DynamicProperties = value;
                this.OnDynamicPropertiesChanged();
                this.OnPropertyChanged("DynamicProperties");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.Generic.IDictionary<string, object> _DynamicProperties = new global::System.Collections.Generic.Dictionary<string, object>();
        partial void OnDynamicPropertiesChanging(global::System.Collections.Generic.IDictionary<string, object> value);
        partial void OnDynamicPropertiesChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for RowIndexSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("RowIndexSingle")]
    public partial class RowIndexSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<RowIndex>
    {
        /// <summary>
        /// Initialize a new RowIndexSingle object.
        /// </summary>
        public RowIndexSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new RowIndexSingle object.
        /// </summary>
        public RowIndexSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new RowIndexSingle object.
        /// </summary>
        public RowIndexSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<RowIndex> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for Rows in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Rows")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow> Rows
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Rows == null))
                {
                    this._Rows = Context.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow>(GetPath("Rows"));
                }
                return this._Rows;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow> _Rows;
    }
    /// <summary>
    /// There are no comments for RowIndex in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("RowIndex")]
    public partial class RowIndex : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new RowIndex object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static RowIndex CreateRowIndex(int ID)
        {
            RowIndex rowIndex = new RowIndex();
            rowIndex.Id = ID;
            return rowIndex;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Id")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Id is required.")]
        public virtual int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Rows in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Rows")]
        public virtual global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow> Rows
        {
            get
            {
                return this._Rows;
            }
            set
            {
                this.OnRowsChanging(value);
                this._Rows = value;
                this.OnRowsChanged();
                this.OnPropertyChanged("Rows");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow> _Rows = new global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnRowsChanging(global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow> value);
        partial void OnRowsChanged();
        /// <summary>
        /// There are no comments for Property DynamicProperties in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("DynamicProperties")]
        [global::Microsoft.OData.Client.ContainerProperty]
        public virtual global::System.Collections.Generic.IDictionary<string, object> DynamicProperties
        {
            get
            {
                return this._DynamicProperties;
            }
            set
            {
                this.OnDynamicPropertiesChanging(value);
                this._DynamicProperties = value;
                this.OnDynamicPropertiesChanged();
                this.OnPropertyChanged("DynamicProperties");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.Generic.IDictionary<string, object> _DynamicProperties = new global::System.Collections.Generic.Dictionary<string, object>();
        partial void OnDynamicPropertiesChanging(global::System.Collections.Generic.IDictionary<string, object> value);
        partial void OnDynamicPropertiesChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for ContactDetails in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("ContactDetails")]
    public partial class ContactDetails : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new ContactDetails object.
        /// </summary>
        /// <param name="lastContacted">Initial value of LastContacted.</param>
        /// <param name="contacted">Initial value of Contacted.</param>
        /// <param name="gUID">Initial value of GUID.</param>
        /// <param name="preferedContactTime">Initial value of PreferedContactTime.</param>
        /// <param name="byte">Initial value of Byte.</param>
        /// <param name="signedByte">Initial value of SignedByte.</param>
        /// <param name="double">Initial value of Double.</param>
        /// <param name="single">Initial value of Single.</param>
        /// <param name="short">Initial value of Short.</param>
        /// <param name="int">Initial value of Int.</param>
        /// <param name="long">Initial value of Long.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static ContactDetails CreateContactDetails(global::System.DateTimeOffset lastContacted,
                    global::System.DateTimeOffset contacted,
                    global::System.Guid gUID,
                    global::System.TimeSpan preferedContactTime,
                    byte @byte,
                    sbyte signedByte,
                    double @double,
                    float single,
                    short @short,
                    int @int,
                    long @long)
        {
            ContactDetails contactDetails = new ContactDetails();
            contactDetails.LastContacted = lastContacted;
            contactDetails.Contacted = contacted;
            contactDetails.GUID = gUID;
            contactDetails.PreferedContactTime = preferedContactTime;
            contactDetails.Byte = @byte;
            contactDetails.SignedByte = signedByte;
            contactDetails.Double = @double;
            contactDetails.Single = single;
            contactDetails.Short = @short;
            contactDetails.Int = @int;
            contactDetails.Long = @long;
            return contactDetails;
        }
        /// <summary>
        /// There are no comments for Property FirstContacted in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("FirstContacted")]
        public virtual byte[] FirstContacted
        {
            get
            {
                return this._FirstContacted;
            }
            set
            {
                this.OnFirstContactedChanging(value);
                this._FirstContacted = value;
                this.OnFirstContactedChanged();
                this.OnPropertyChanged("FirstContacted");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private byte[] _FirstContacted;
        partial void OnFirstContactedChanging(byte[] value);
        partial void OnFirstContactedChanged();
        /// <summary>
        /// There are no comments for Property LastContacted in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("LastContacted")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "LastContacted is required.")]
        public virtual global::System.DateTimeOffset LastContacted
        {
            get
            {
                return this._LastContacted;
            }
            set
            {
                this.OnLastContactedChanging(value);
                this._LastContacted = value;
                this.OnLastContactedChanged();
                this.OnPropertyChanged("LastContacted");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _LastContacted;
        partial void OnLastContactedChanging(global::System.DateTimeOffset value);
        partial void OnLastContactedChanged();
        /// <summary>
        /// There are no comments for Property Contacted in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Contacted")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Contacted is required.")]
        public virtual global::System.DateTimeOffset Contacted
        {
            get
            {
                return this._Contacted;
            }
            set
            {
                this.OnContactedChanging(value);
                this._Contacted = value;
                this.OnContactedChanged();
                this.OnPropertyChanged("Contacted");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _Contacted;
        partial void OnContactedChanging(global::System.DateTimeOffset value);
        partial void OnContactedChanged();
        /// <summary>
        /// There are no comments for Property GUID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("GUID")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "GUID is required.")]
        public virtual global::System.Guid GUID
        {
            get
            {
                return this._GUID;
            }
            set
            {
                this.OnGUIDChanging(value);
                this._GUID = value;
                this.OnGUIDChanged();
                this.OnPropertyChanged("GUID");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
        /// <summary>
        /// There are no comments for Property PreferedContactTime in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("PreferedContactTime")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "PreferedContactTime is required.")]
        public virtual global::System.TimeSpan PreferedContactTime
        {
            get
            {
                return this._PreferedContactTime;
            }
            set
            {
                this.OnPreferedContactTimeChanging(value);
                this._PreferedContactTime = value;
                this.OnPreferedContactTimeChanged();
                this.OnPropertyChanged("PreferedContactTime");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.TimeSpan _PreferedContactTime;
        partial void OnPreferedContactTimeChanging(global::System.TimeSpan value);
        partial void OnPreferedContactTimeChanged();
        /// <summary>
        /// There are no comments for Property Byte in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Byte")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Byte is required.")]
        public virtual byte Byte
        {
            get
            {
                return this._Byte;
            }
            set
            {
                this.OnByteChanging(value);
                this._Byte = value;
                this.OnByteChanged();
                this.OnPropertyChanged("Byte");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private byte _Byte;
        partial void OnByteChanging(byte value);
        partial void OnByteChanged();
        /// <summary>
        /// There are no comments for Property SignedByte in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("SignedByte")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "SignedByte is required.")]
        public virtual sbyte SignedByte
        {
            get
            {
                return this._SignedByte;
            }
            set
            {
                this.OnSignedByteChanging(value);
                this._SignedByte = value;
                this.OnSignedByteChanged();
                this.OnPropertyChanged("SignedByte");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private sbyte _SignedByte;
        partial void OnSignedByteChanging(sbyte value);
        partial void OnSignedByteChanged();
        /// <summary>
        /// There are no comments for Property Double in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Double")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Double is required.")]
        public virtual double Double
        {
            get
            {
                return this._Double;
            }
            set
            {
                this.OnDoubleChanging(value);
                this._Double = value;
                this.OnDoubleChanged();
                this.OnPropertyChanged("Double");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private double _Double;
        partial void OnDoubleChanging(double value);
        partial void OnDoubleChanged();
        /// <summary>
        /// There are no comments for Property Single in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Single")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Single is required.")]
        public virtual float Single
        {
            get
            {
                return this._Single;
            }
            set
            {
                this.OnSingleChanging(value);
                this._Single = value;
                this.OnSingleChanged();
                this.OnPropertyChanged("Single");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private float _Single;
        partial void OnSingleChanging(float value);
        partial void OnSingleChanged();
        /// <summary>
        /// There are no comments for Property Short in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Short")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Short is required.")]
        public virtual short Short
        {
            get
            {
                return this._Short;
            }
            set
            {
                this.OnShortChanging(value);
                this._Short = value;
                this.OnShortChanged();
                this.OnPropertyChanged("Short");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private short _Short;
        partial void OnShortChanging(short value);
        partial void OnShortChanged();
        /// <summary>
        /// There are no comments for Property Int in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Int")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Int is required.")]
        public virtual int Int
        {
            get
            {
                return this._Int;
            }
            set
            {
                this.OnIntChanging(value);
                this._Int = value;
                this.OnIntChanged();
                this.OnPropertyChanged("Int");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Int;
        partial void OnIntChanging(int value);
        partial void OnIntChanged();
        /// <summary>
        /// There are no comments for Property Long in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Long")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Long is required.")]
        public virtual long Long
        {
            get
            {
                return this._Long;
            }
            set
            {
                this.OnLongChanging(value);
                this._Long = value;
                this.OnLongChanged();
                this.OnPropertyChanged("Long");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private long _Long;
        partial void OnLongChanging(long value);
        partial void OnLongChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for IndexedRowSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("IndexedRowSingle")]
    public partial class IndexedRowSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<IndexedRow>
    {
        /// <summary>
        /// Initialize a new IndexedRowSingle object.
        /// </summary>
        public IndexedRowSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new IndexedRowSingle object.
        /// </summary>
        public IndexedRowSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new IndexedRowSingle object.
        /// </summary>
        public IndexedRowSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<IndexedRow> query)
            : base(query) { }

    }
    /// <summary>
    /// There are no comments for IndexedRow in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("IndexedRow")]
    public partial class IndexedRow : Row
    {
        /// <summary>
        /// Create a new IndexedRow object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static IndexedRow CreateIndexedRow(global::System.Guid ID)
        {
            IndexedRow indexedRow = new IndexedRow();
            indexedRow.Id = ID;
            return indexedRow;
        }
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Row as global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Row> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Row as global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Row> _source,
            global::System.Guid id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndex as global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndexSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndexSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndex> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndexSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndex as global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndexSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndexSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndex> _source,
            int id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndexSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow as global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRowSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRowSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRowSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow as global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRowSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRowSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow> _source,
            global::System.Guid id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRowSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Cast an entity of type global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Row to its derived type global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow
        /// </summary>
        /// <param name="_source">source entity</param>
        public static global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRowSingle CastToIndexedRow(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Row> _source)
        {
            global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow> query = _source.CastTo<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRow>();
            return new global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.IndexedRowSingle(_source.Context, query.GetPath(null));
        }
    }
}
namespace Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Default
{
    /// <summary>
    /// There are no comments for Container in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Container")]
    public partial class Container : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new Container object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public Container(global::System.Uri serviceRoot) :
                this(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
        }

        /// <summary>
        /// Initialize a new Container object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public Container(global::System.Uri serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion protocolVersion) :
                base(serviceRoot, protocolVersion)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.Client.E2E.Tests.Common.Server.OpenTypes", "Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Default", "Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Default");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            global::Microsoft.OData.Client.OriginalNameAttribute originalNameAttribute = (global::Microsoft.OData.Client.OriginalNameAttribute)global::System.Linq.Enumerable.SingleOrDefault(global::Microsoft.OData.Client.Utility.GetCustomAttributes(clientType, typeof(global::Microsoft.OData.Client.OriginalNameAttribute), true));
            if (clientType.Namespace.Equals("Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Microsoft.OData.Client.E2E.Tests.Common.Server.OpenTypes.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Microsoft.OData.Client.E2E.Tests.Common.Server.OpenTypes.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Default", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Default.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Default.", clientType.Name);
            }
            if (originalNameAttribute != null)
            {
                return clientType.Namespace + "." + originalNameAttribute.OriginalName;
            }
            return clientType.FullName;
        }
        /// <summary>
        /// There are no comments for Row in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Row")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Row> Row
        {
            get
            {
                if ((this._Row == null))
                {
                    this._Row = base.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Row>("Row");
                }
                return this._Row;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Row> _Row;
        /// <summary>
        /// There are no comments for RowIndex in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("RowIndex")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndex> RowIndex
        {
            get
            {
                if ((this._RowIndex == null))
                {
                    this._RowIndex = base.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndex>("RowIndex");
                }
                return this._RowIndex;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndex> _RowIndex;
        /// <summary>
        /// There are no comments for Row in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToRow(global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.Row row)
        {
            base.AddObject("Row", row);
        }
        /// <summary>
        /// There are no comments for RowIndex in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToRowIndex(global::Microsoft.OData.Client.E2E.Tests.Common.Clients.OpenTypes.RowIndex rowIndex)
        {
            base.AddObject("RowIndex", rowIndex);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private const string filePath = @"OpenTypesODataServiceCsdl.xml";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                global::System.Xml.XmlReader reader = CreateXmlReader();
                try
                {
                    global::System.Collections.Generic.IEnumerable<global::Microsoft.OData.Edm.Validation.EdmError> errors;
                    global::Microsoft.OData.Edm.IEdmModel edmModel;

                    if (!global::Microsoft.OData.Edm.Csdl.CsdlReader.TryParse(reader, true, out edmModel, out errors))
                    {
                        global::System.Text.StringBuilder errorMessages = new global::System.Text.StringBuilder();
                        foreach (var error in errors)
                        {
                            errorMessages.Append(error.ErrorMessage);
                            errorMessages.Append("; ");
                        }
                        throw new global::System.InvalidOperationException(errorMessages.ToString());
                    }

                    return edmModel;
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader()
            {
                try
                {
                    var assembly = global::System.Reflection.Assembly.GetExecutingAssembly();
                    var resourcePath = global::System.Linq.Enumerable.Single(assembly.GetManifestResourceNames(), str => str.EndsWith(filePath));
                    global::System.IO.Stream stream = assembly.GetManifestResourceStream(resourcePath);
                    return global::System.Xml.XmlReader.Create(new global::System.IO.StreamReader(stream));
                }
                catch (global::System.Xml.XmlException e)
                {
                    throw new global::System.Xml.XmlException("Failed to create an XmlReader from the stream. Check if the resource exists.", e);
                }
            }
        }
    }
}
