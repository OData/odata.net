//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 6/20/2024 5:43:37 PM
namespace Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common
{
    /// <summary>
    /// There are no comments for PersonSingle in the schema.
    /// </summary>
    public partial class PersonSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Person>
    {
        /// <summary>
        /// Initialize a new PersonSingle object.
        /// </summary>
        public PersonSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new PersonSingle object.
        /// </summary>
        public PersonSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new PersonSingle object.
        /// </summary>
        public PersonSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Person> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle Parent
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Parent == null))
                {
                    this._Parent = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle(this.Context, GetPath("Parent"));
                }
                return this._Parent;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle _Parent;
    }
    /// <summary>
    /// There are no comments for Person in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PersonID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("PersonID")]
    public partial class Person : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personID">Initial value of PersonID.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="lastName">Initial value of LastName.</param>
        /// <param name="middleName">Initial value of MiddleName.</param>
        /// <param name="homeAddress">Initial value of HomeAddress.</param>
        /// <param name="home">Initial value of Home.</param>
        /// <param name="parent">Initial value of Parent.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Person CreatePerson(int personID,
                    string firstName,
                    string lastName,
                    string middleName,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address homeAddress,
                    global::Microsoft.Spatial.GeographyPoint home,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person parent)
        {
            Person person = new Person();
            person.PersonID = personID;
            person.FirstName = firstName;
            person.LastName = lastName;
            person.MiddleName = middleName;
            if ((homeAddress == null))
            {
                throw new global::System.ArgumentNullException("homeAddress");
            }
            person.HomeAddress = homeAddress;
            person.Home = home;
            if ((parent == null))
            {
                throw new global::System.ArgumentNullException("parent");
            }
            person.Parent = parent;
            return person;
        }
        /// <summary>
        /// There are no comments for Property PersonID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int PersonID
        {
            get
            {
                return this._PersonID;
            }
            set
            {
                this.OnPersonIDChanging(value);
                this._PersonID = value;
                this.OnPersonIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _PersonID;
        partial void OnPersonIDChanging(int value);
        partial void OnPersonIDChanged();
        /// <summary>
        /// There are no comments for Property FirstName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                this.OnFirstNameChanging(value);
                this._FirstName = value;
                this.OnFirstNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        /// <summary>
        /// There are no comments for Property LastName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                this.OnLastNameChanging(value);
                this._LastName = value;
                this.OnLastNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        /// <summary>
        /// There are no comments for Property MiddleName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string MiddleName
        {
            get
            {
                return this._MiddleName;
            }
            set
            {
                this.OnMiddleNameChanging(value);
                this._MiddleName = value;
                this.OnMiddleNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _MiddleName;
        partial void OnMiddleNameChanging(string value);
        partial void OnMiddleNameChanged();
        /// <summary>
        /// There are no comments for Property Numbers in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<string> Numbers
        {
            get
            {
                return this._Numbers;
            }
            set
            {
                this.OnNumbersChanging(value);
                this._Numbers = value;
                this.OnNumbersChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<string> _Numbers = new global::System.Collections.ObjectModel.Collection<string>();
        partial void OnNumbersChanging(global::System.Collections.ObjectModel.Collection<string> value);
        partial void OnNumbersChanged();
        /// <summary>
        /// There are no comments for Property Emails in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<string> Emails
        {
            get
            {
                return this._Emails;
            }
            set
            {
                this.OnEmailsChanging(value);
                this._Emails = value;
                this.OnEmailsChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<string> _Emails = new global::System.Collections.ObjectModel.Collection<string>();
        partial void OnEmailsChanging(global::System.Collections.ObjectModel.Collection<string> value);
        partial void OnEmailsChanged();
        /// <summary>
        /// There are no comments for Property Addresses in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address> Addresses
        {
            get
            {
                return this._Addresses;
            }
            set
            {
                this.OnAddressesChanging(value);
                this._Addresses = value;
                this.OnAddressesChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address> _Addresses = new global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address>();
        partial void OnAddressesChanging(global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address> value);
        partial void OnAddressesChanged();
        /// <summary>
        /// There are no comments for Property HomeAddress in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address HomeAddress
        {
            get
            {
                return this._HomeAddress;
            }
            set
            {
                this.OnHomeAddressChanging(value);
                this._HomeAddress = value;
                this.OnHomeAddressChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address _HomeAddress;
        partial void OnHomeAddressChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address value);
        partial void OnHomeAddressChanged();
        /// <summary>
        /// There are no comments for Property Home in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.Spatial.GeographyPoint Home
        {
            get
            {
                return this._Home;
            }
            set
            {
                this.OnHomeChanging(value);
                this._Home = value;
                this.OnHomeChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.Spatial.GeographyPoint _Home;
        partial void OnHomeChanging(global::Microsoft.Spatial.GeographyPoint value);
        partial void OnHomeChanged();
        /// <summary>
        /// There are no comments for Property Parent in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person Parent
        {
            get
            {
                return this._Parent;
            }
            set
            {
                this.OnParentChanging(value);
                this._Parent = value;
                this.OnParentChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person _Parent;
        partial void OnParentChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person value);
        partial void OnParentChanged();
    }
    /// <summary>
    /// There are no comments for Address in the schema.
    /// </summary>
    public partial class Address
    {
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="street">Initial value of Street.</param>
        /// <param name="city">Initial value of City.</param>
        /// <param name="postalCode">Initial value of PostalCode.</param>
        /// <param name="updatedTime">Initial value of UpdatedTime.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Address CreateAddress(string street, string city, string postalCode, global::System.DateTimeOffset updatedTime)
        {
            Address address = new Address();
            address.Street = street;
            address.City = city;
            address.PostalCode = postalCode;
            address.UpdatedTime = updatedTime;
            return address;
        }
        /// <summary>
        /// There are no comments for Property Street in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string Street
        {
            get
            {
                return this._Street;
            }
            set
            {
                this.OnStreetChanging(value);
                this._Street = value;
                this.OnStreetChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Street;
        partial void OnStreetChanging(string value);
        partial void OnStreetChanged();
        /// <summary>
        /// There are no comments for Property City in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string City
        {
            get
            {
                return this._City;
            }
            set
            {
                this.OnCityChanging(value);
                this._City = value;
                this.OnCityChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        /// <summary>
        /// There are no comments for Property PostalCode in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string PostalCode
        {
            get
            {
                return this._PostalCode;
            }
            set
            {
                this.OnPostalCodeChanging(value);
                this._PostalCode = value;
                this.OnPostalCodeChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _PostalCode;
        partial void OnPostalCodeChanging(string value);
        partial void OnPostalCodeChanged();
        /// <summary>
        /// There are no comments for Property UpdatedTime in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.DateTimeOffset UpdatedTime
        {
            get
            {
                return this._UpdatedTime;
            }
            set
            {
                this.OnUpdatedTimeChanging(value);
                this._UpdatedTime = value;
                this.OnUpdatedTimeChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _UpdatedTime;
        partial void OnUpdatedTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdatedTimeChanged();
    }
    /// <summary>
    /// There are no comments for CompanyAddress in the schema.
    /// </summary>
    public partial class CompanyAddress : Address
    {
        /// <summary>
        /// Create a new CompanyAddress object.
        /// </summary>
        /// <param name="street">Initial value of Street.</param>
        /// <param name="city">Initial value of City.</param>
        /// <param name="postalCode">Initial value of PostalCode.</param>
        /// <param name="updatedTime">Initial value of UpdatedTime.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static CompanyAddress CreateCompanyAddress(string street, string city, string postalCode, global::System.DateTimeOffset updatedTime, string companyName)
        {
            CompanyAddress companyAddress = new CompanyAddress();
            companyAddress.Street = street;
            companyAddress.City = city;
            companyAddress.PostalCode = postalCode;
            companyAddress.UpdatedTime = updatedTime;
            companyAddress.CompanyName = companyName;
            return companyAddress;
        }
        /// <summary>
        /// There are no comments for Property CompanyName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                this.OnCompanyNameChanging(value);
                this._CompanyName = value;
                this.OnCompanyNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _CompanyName;
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
    }
    /// <summary>
    /// There are no comments for HomeAddress in the schema.
    /// </summary>
    public partial class HomeAddress : Address
    {
        /// <summary>
        /// Create a new HomeAddress object.
        /// </summary>
        /// <param name="street">Initial value of Street.</param>
        /// <param name="city">Initial value of City.</param>
        /// <param name="postalCode">Initial value of PostalCode.</param>
        /// <param name="updatedTime">Initial value of UpdatedTime.</param>
        /// <param name="familyName">Initial value of FamilyName.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static HomeAddress CreateHomeAddress(string street, string city, string postalCode, global::System.DateTimeOffset updatedTime, string familyName)
        {
            HomeAddress homeAddress = new HomeAddress();
            homeAddress.Street = street;
            homeAddress.City = city;
            homeAddress.PostalCode = postalCode;
            homeAddress.UpdatedTime = updatedTime;
            homeAddress.FamilyName = familyName;
            return homeAddress;
        }
        /// <summary>
        /// There are no comments for Property FamilyName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string FamilyName
        {
            get
            {
                return this._FamilyName;
            }
            set
            {
                this.OnFamilyNameChanging(value);
                this._FamilyName = value;
                this.OnFamilyNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _FamilyName;
        partial void OnFamilyNameChanging(string value);
        partial void OnFamilyNameChanged();
    }
    /// <summary>
    /// There are no comments for CustomerSingle in the schema.
    /// </summary>
    public partial class CustomerSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Customer>
    {
        /// <summary>
        /// Initialize a new CustomerSingle object.
        /// </summary>
        public CustomerSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new CustomerSingle object.
        /// </summary>
        public CustomerSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new CustomerSingle object.
        /// </summary>
        public CustomerSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Customer> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for Company in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle Company
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Company == null))
                {
                    this._Company = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle(this.Context, GetPath("Company"));
                }
                return this._Company;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle _Company;
        /// <summary>
        /// There are no comments for Orders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order> Orders
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Orders == null))
                {
                    this._Orders = Context.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order>(GetPath("Orders"));
                }
                return this._Orders;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order> _Orders;
        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle Parent
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Parent == null))
                {
                    this._Parent = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle(this.Context, GetPath("Parent"));
                }
                return this._Parent;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle _Parent;
    }
    /// <summary>
    /// There are no comments for Customer in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PersonID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("PersonID")]
    public partial class Customer : Person
    {
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="personID">Initial value of PersonID.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="lastName">Initial value of LastName.</param>
        /// <param name="middleName">Initial value of MiddleName.</param>
        /// <param name="homeAddress">Initial value of HomeAddress.</param>
        /// <param name="home">Initial value of Home.</param>
        /// <param name="parent">Initial value of Parent.</param>
        /// <param name="city">Initial value of City.</param>
        /// <param name="birthday">Initial value of Birthday.</param>
        /// <param name="timeBetweenLastTwoOrders">Initial value of TimeBetweenLastTwoOrders.</param>
        /// <param name="company">Initial value of Company.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Customer CreateCustomer(int personID,
                    string firstName,
                    string lastName,
                    string middleName,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address homeAddress,
                    global::Microsoft.Spatial.GeographyPoint home,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person parent,
                    string city,
                    global::System.DateTimeOffset birthday,
                    global::System.TimeSpan timeBetweenLastTwoOrders,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company company)
        {
            Customer customer = new Customer();
            customer.PersonID = personID;
            customer.FirstName = firstName;
            customer.LastName = lastName;
            customer.MiddleName = middleName;
            if ((homeAddress == null))
            {
                throw new global::System.ArgumentNullException("homeAddress");
            }
            customer.HomeAddress = homeAddress;
            customer.Home = home;
            if ((parent == null))
            {
                throw new global::System.ArgumentNullException("parent");
            }
            customer.Parent = parent;
            customer.City = city;
            customer.Birthday = birthday;
            customer.TimeBetweenLastTwoOrders = timeBetweenLastTwoOrders;
            if ((company == null))
            {
                throw new global::System.ArgumentNullException("company");
            }
            customer.Company = company;
            return customer;
        }
        /// <summary>
        /// There are no comments for Property City in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string City
        {
            get
            {
                return this._City;
            }
            set
            {
                this.OnCityChanging(value);
                this._City = value;
                this.OnCityChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        /// <summary>
        /// There are no comments for Property Birthday in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.DateTimeOffset Birthday
        {
            get
            {
                return this._Birthday;
            }
            set
            {
                this.OnBirthdayChanging(value);
                this._Birthday = value;
                this.OnBirthdayChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _Birthday;
        partial void OnBirthdayChanging(global::System.DateTimeOffset value);
        partial void OnBirthdayChanged();
        /// <summary>
        /// There are no comments for Property TimeBetweenLastTwoOrders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.TimeSpan TimeBetweenLastTwoOrders
        {
            get
            {
                return this._TimeBetweenLastTwoOrders;
            }
            set
            {
                this.OnTimeBetweenLastTwoOrdersChanging(value);
                this._TimeBetweenLastTwoOrders = value;
                this.OnTimeBetweenLastTwoOrdersChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.TimeSpan _TimeBetweenLastTwoOrders;
        partial void OnTimeBetweenLastTwoOrdersChanging(global::System.TimeSpan value);
        partial void OnTimeBetweenLastTwoOrdersChanged();
        /// <summary>
        /// There are no comments for Property Company in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company Company
        {
            get
            {
                return this._Company;
            }
            set
            {
                this.OnCompanyChanging(value);
                this._Company = value;
                this.OnCompanyChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company _Company;
        partial void OnCompanyChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company value);
        partial void OnCompanyChanged();
        /// <summary>
        /// There are no comments for Property Orders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order> Orders
        {
            get
            {
                return this._Orders;
            }
            set
            {
                this.OnOrdersChanging(value);
                this._Orders = value;
                this.OnOrdersChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order> _Orders = new global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order>();
        partial void OnOrdersChanging(global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order> value);
        partial void OnOrdersChanged();
    }
    /// <summary>
    /// There are no comments for CompanySingle in the schema.
    /// </summary>
    public partial class CompanySingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Company>
    {
        /// <summary>
        /// Initialize a new CompanySingle object.
        /// </summary>
        public CompanySingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new CompanySingle object.
        /// </summary>
        public CompanySingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new CompanySingle object.
        /// </summary>
        public CompanySingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Company> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for Employees in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee> Employees
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Employees == null))
                {
                    this._Employees = Context.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee>(GetPath("Employees"));
                }
                return this._Employees;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee> _Employees;
        /// <summary>
        /// There are no comments for CoreDepartment in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle CoreDepartment
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._CoreDepartment == null))
                {
                    this._CoreDepartment = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle(this.Context, GetPath("CoreDepartment"));
                }
                return this._CoreDepartment;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle _CoreDepartment;
        /// <summary>
        /// There are no comments for VipCustomer in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle VipCustomer
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._VipCustomer == null))
                {
                    this._VipCustomer = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle(this.Context, GetPath("VipCustomer"));
                }
                return this._VipCustomer;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle _VipCustomer;
        /// <summary>
        /// There are no comments for Departments in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department> Departments
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Departments == null))
                {
                    this._Departments = Context.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department>(GetPath("Departments"));
                }
                return this._Departments;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department> _Departments;
    }
    /// <summary>
    /// There are no comments for Company in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("CompanyID")]
    public partial class Company : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="companyCategory">Initial value of CompanyCategory.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="address">Initial value of Address.</param>
        /// <param name="revenue">Initial value of Revenue.</param>
        /// <param name="coreDepartment">Initial value of CoreDepartment.</param>
        /// <param name="vipCustomer">Initial value of VipCustomer.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Company CreateCompany(int companyID,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanyCategory companyCategory,
                    string name,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address address,
                    long revenue,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department coreDepartment,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer vipCustomer)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.CompanyCategory = companyCategory;
            company.Name = name;
            if ((address == null))
            {
                throw new global::System.ArgumentNullException("address");
            }
            company.Address = address;
            company.Revenue = revenue;
            if ((coreDepartment == null))
            {
                throw new global::System.ArgumentNullException("coreDepartment");
            }
            company.CoreDepartment = coreDepartment;
            if ((vipCustomer == null))
            {
                throw new global::System.ArgumentNullException("vipCustomer");
            }
            company.VipCustomer = vipCustomer;
            return company;
        }
        /// <summary>
        /// There are no comments for Property CompanyID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int CompanyID
        {
            get
            {
                return this._CompanyID;
            }
            set
            {
                this.OnCompanyIDChanging(value);
                this._CompanyID = value;
                this.OnCompanyIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _CompanyID;
        partial void OnCompanyIDChanging(int value);
        partial void OnCompanyIDChanged();
        /// <summary>
        /// There are no comments for Property CompanyCategory in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanyCategory CompanyCategory
        {
            get
            {
                return this._CompanyCategory;
            }
            set
            {
                this.OnCompanyCategoryChanging(value);
                this._CompanyCategory = value;
                this.OnCompanyCategoryChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanyCategory _CompanyCategory;
        partial void OnCompanyCategoryChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanyCategory value);
        partial void OnCompanyCategoryChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property Address in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                this.OnAddressChanging(value);
                this._Address = value;
                this.OnAddressChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address _Address;
        partial void OnAddressChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address value);
        partial void OnAddressChanged();
        /// <summary>
        /// There are no comments for Property Revenue in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual long Revenue
        {
            get
            {
                return this._Revenue;
            }
            set
            {
                this.OnRevenueChanging(value);
                this._Revenue = value;
                this.OnRevenueChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private long _Revenue;
        partial void OnRevenueChanging(long value);
        partial void OnRevenueChanged();
        /// <summary>
        /// There are no comments for Property Employees in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee> Employees
        {
            get
            {
                return this._Employees;
            }
            set
            {
                this.OnEmployeesChanging(value);
                this._Employees = value;
                this.OnEmployeesChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee> _Employees = new global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee>();
        partial void OnEmployeesChanging(global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee> value);
        partial void OnEmployeesChanged();
        /// <summary>
        /// There are no comments for Property CoreDepartment in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department CoreDepartment
        {
            get
            {
                return this._CoreDepartment;
            }
            set
            {
                this.OnCoreDepartmentChanging(value);
                this._CoreDepartment = value;
                this.OnCoreDepartmentChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department _CoreDepartment;
        partial void OnCoreDepartmentChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department value);
        partial void OnCoreDepartmentChanged();
        /// <summary>
        /// There are no comments for Property VipCustomer in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer VipCustomer
        {
            get
            {
                return this._VipCustomer;
            }
            set
            {
                this.OnVipCustomerChanging(value);
                this._VipCustomer = value;
                this.OnVipCustomerChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer _VipCustomer;
        partial void OnVipCustomerChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer value);
        partial void OnVipCustomerChanged();
        /// <summary>
        /// There are no comments for Property Departments in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department> Departments
        {
            get
            {
                return this._Departments;
            }
            set
            {
                this.OnDepartmentsChanging(value);
                this._Departments = value;
                this.OnDepartmentsChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department> _Departments = new global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department>();
        partial void OnDepartmentsChanging(global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department> value);
        partial void OnDepartmentsChanged();
    }
    /// <summary>
    /// There are no comments for EmployeeSingle in the schema.
    /// </summary>
    public partial class EmployeeSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Employee>
    {
        /// <summary>
        /// Initialize a new EmployeeSingle object.
        /// </summary>
        public EmployeeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new EmployeeSingle object.
        /// </summary>
        public EmployeeSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new EmployeeSingle object.
        /// </summary>
        public EmployeeSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Employee> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for Company in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle Company
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Company == null))
                {
                    this._Company = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle(this.Context, GetPath("Company"));
                }
                return this._Company;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle _Company;
        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle Parent
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Parent == null))
                {
                    this._Parent = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle(this.Context, GetPath("Parent"));
                }
                return this._Parent;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle _Parent;
    }
    /// <summary>
    /// There are no comments for Employee in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PersonID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("PersonID")]
    public partial class Employee : Person
    {
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="personID">Initial value of PersonID.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="lastName">Initial value of LastName.</param>
        /// <param name="middleName">Initial value of MiddleName.</param>
        /// <param name="homeAddress">Initial value of HomeAddress.</param>
        /// <param name="home">Initial value of Home.</param>
        /// <param name="parent">Initial value of Parent.</param>
        /// <param name="dateHired">Initial value of DateHired.</param>
        /// <param name="office">Initial value of Office.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="company">Initial value of Company.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Employee CreateEmployee(int personID,
                    string firstName,
                    string lastName,
                    string middleName,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address homeAddress,
                    global::Microsoft.Spatial.GeographyPoint home,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person parent,
                    global::System.DateTimeOffset dateHired,
                    global::Microsoft.Spatial.GeographyPoint office,
                    int companyID,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company company)
        {
            Employee employee = new Employee();
            employee.PersonID = personID;
            employee.FirstName = firstName;
            employee.LastName = lastName;
            employee.MiddleName = middleName;
            if ((homeAddress == null))
            {
                throw new global::System.ArgumentNullException("homeAddress");
            }
            employee.HomeAddress = homeAddress;
            employee.Home = home;
            if ((parent == null))
            {
                throw new global::System.ArgumentNullException("parent");
            }
            employee.Parent = parent;
            employee.DateHired = dateHired;
            employee.Office = office;
            employee.CompanyID = companyID;
            if ((company == null))
            {
                throw new global::System.ArgumentNullException("company");
            }
            employee.Company = company;
            return employee;
        }
        /// <summary>
        /// There are no comments for Property DateHired in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.DateTimeOffset DateHired
        {
            get
            {
                return this._DateHired;
            }
            set
            {
                this.OnDateHiredChanging(value);
                this._DateHired = value;
                this.OnDateHiredChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _DateHired;
        partial void OnDateHiredChanging(global::System.DateTimeOffset value);
        partial void OnDateHiredChanged();
        /// <summary>
        /// There are no comments for Property Office in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.Spatial.GeographyPoint Office
        {
            get
            {
                return this._Office;
            }
            set
            {
                this.OnOfficeChanging(value);
                this._Office = value;
                this.OnOfficeChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.Spatial.GeographyPoint _Office;
        partial void OnOfficeChanging(global::Microsoft.Spatial.GeographyPoint value);
        partial void OnOfficeChanged();
        /// <summary>
        /// There are no comments for Property CompanyID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int CompanyID
        {
            get
            {
                return this._CompanyID;
            }
            set
            {
                this.OnCompanyIDChanging(value);
                this._CompanyID = value;
                this.OnCompanyIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _CompanyID;
        partial void OnCompanyIDChanging(int value);
        partial void OnCompanyIDChanged();
        /// <summary>
        /// There are no comments for Property Company in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company Company
        {
            get
            {
                return this._Company;
            }
            set
            {
                this.OnCompanyChanging(value);
                this._Company = value;
                this.OnCompanyChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company _Company;
        partial void OnCompanyChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company value);
        partial void OnCompanyChanged();
    }
    /// <summary>
    /// There are no comments for DepartmentSingle in the schema.
    /// </summary>
    public partial class DepartmentSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Department>
    {
        /// <summary>
        /// Initialize a new DepartmentSingle object.
        /// </summary>
        public DepartmentSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new DepartmentSingle object.
        /// </summary>
        public DepartmentSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new DepartmentSingle object.
        /// </summary>
        public DepartmentSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Department> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for Company in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle Company
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Company == null))
                {
                    this._Company = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle(this.Context, GetPath("Company"));
                }
                return this._Company;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle _Company;
    }
    /// <summary>
    /// There are no comments for Department in the schema.
    /// </summary>
    /// <KeyProperties>
    /// DepartmentID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("DepartmentID")]
    public partial class Department : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="departmentID">Initial value of DepartmentID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="departmentNO">Initial value of DepartmentNO.</param>
        /// <param name="company">Initial value of Company.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Department CreateDepartment(int departmentID, string name, string departmentNO, global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company company)
        {
            Department department = new Department();
            department.DepartmentID = departmentID;
            department.Name = name;
            department.DepartmentNO = departmentNO;
            if ((company == null))
            {
                throw new global::System.ArgumentNullException("company");
            }
            department.Company = company;
            return department;
        }
        /// <summary>
        /// There are no comments for Property DepartmentID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int DepartmentID
        {
            get
            {
                return this._DepartmentID;
            }
            set
            {
                this.OnDepartmentIDChanging(value);
                this._DepartmentID = value;
                this.OnDepartmentIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _DepartmentID;
        partial void OnDepartmentIDChanging(int value);
        partial void OnDepartmentIDChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property DepartmentNO in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string DepartmentNO
        {
            get
            {
                return this._DepartmentNO;
            }
            set
            {
                this.OnDepartmentNOChanging(value);
                this._DepartmentNO = value;
                this.OnDepartmentNOChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _DepartmentNO;
        partial void OnDepartmentNOChanging(string value);
        partial void OnDepartmentNOChanged();
        /// <summary>
        /// There are no comments for Property Company in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company Company
        {
            get
            {
                return this._Company;
            }
            set
            {
                this.OnCompanyChanging(value);
                this._Company = value;
                this.OnCompanyChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company _Company;
        partial void OnCompanyChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company value);
        partial void OnCompanyChanged();
    }
    /// <summary>
    /// There are no comments for PublicCompanySingle in the schema.
    /// </summary>
    public partial class PublicCompanySingle : global::Microsoft.OData.Client.DataServiceQuerySingle<PublicCompany>
    {
        /// <summary>
        /// Initialize a new PublicCompanySingle object.
        /// </summary>
        public PublicCompanySingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new PublicCompanySingle object.
        /// </summary>
        public PublicCompanySingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new PublicCompanySingle object.
        /// </summary>
        public PublicCompanySingle(global::Microsoft.OData.Client.DataServiceQuerySingle<PublicCompany> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for Assets in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset> Assets
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Assets == null))
                {
                    this._Assets = Context.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset>(GetPath("Assets"));
                }
                return this._Assets;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset> _Assets;
        /// <summary>
        /// There are no comments for Club in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ClubSingle Club
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Club == null))
                {
                    this._Club = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ClubSingle(this.Context, GetPath("Club"));
                }
                return this._Club;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ClubSingle _Club;
        /// <summary>
        /// There are no comments for LabourUnion in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnionSingle LabourUnion
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._LabourUnion == null))
                {
                    this._LabourUnion = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnionSingle(this.Context, GetPath("LabourUnion"));
                }
                return this._LabourUnion;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnionSingle _LabourUnion;
        /// <summary>
        /// There are no comments for Employees in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee> Employees
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Employees == null))
                {
                    this._Employees = Context.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee>(GetPath("Employees"));
                }
                return this._Employees;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee> _Employees;
        /// <summary>
        /// There are no comments for CoreDepartment in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle CoreDepartment
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._CoreDepartment == null))
                {
                    this._CoreDepartment = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle(this.Context, GetPath("CoreDepartment"));
                }
                return this._CoreDepartment;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle _CoreDepartment;
        /// <summary>
        /// There are no comments for VipCustomer in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle VipCustomer
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._VipCustomer == null))
                {
                    this._VipCustomer = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle(this.Context, GetPath("VipCustomer"));
                }
                return this._VipCustomer;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle _VipCustomer;
        /// <summary>
        /// There are no comments for Departments in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department> Departments
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Departments == null))
                {
                    this._Departments = Context.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department>(GetPath("Departments"));
                }
                return this._Departments;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department> _Departments;
    }
    /// <summary>
    /// There are no comments for PublicCompany in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("CompanyID")]
    public partial class PublicCompany : Company
    {
        /// <summary>
        /// Create a new PublicCompany object.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="companyCategory">Initial value of CompanyCategory.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="address">Initial value of Address.</param>
        /// <param name="revenue">Initial value of Revenue.</param>
        /// <param name="coreDepartment">Initial value of CoreDepartment.</param>
        /// <param name="vipCustomer">Initial value of VipCustomer.</param>
        /// <param name="stockExchange">Initial value of StockExchange.</param>
        /// <param name="club">Initial value of Club.</param>
        /// <param name="labourUnion">Initial value of LabourUnion.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static PublicCompany CreatePublicCompany(int companyID,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanyCategory companyCategory,
                    string name,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Address address,
                    long revenue,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department coreDepartment,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer vipCustomer,
                    string stockExchange,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Club club,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnion labourUnion)
        {
            PublicCompany publicCompany = new PublicCompany();
            publicCompany.CompanyID = companyID;
            publicCompany.CompanyCategory = companyCategory;
            publicCompany.Name = name;
            if ((address == null))
            {
                throw new global::System.ArgumentNullException("address");
            }
            publicCompany.Address = address;
            publicCompany.Revenue = revenue;
            if ((coreDepartment == null))
            {
                throw new global::System.ArgumentNullException("coreDepartment");
            }
            publicCompany.CoreDepartment = coreDepartment;
            if ((vipCustomer == null))
            {
                throw new global::System.ArgumentNullException("vipCustomer");
            }
            publicCompany.VipCustomer = vipCustomer;
            publicCompany.StockExchange = stockExchange;
            if ((club == null))
            {
                throw new global::System.ArgumentNullException("club");
            }
            publicCompany.Club = club;
            if ((labourUnion == null))
            {
                throw new global::System.ArgumentNullException("labourUnion");
            }
            publicCompany.LabourUnion = labourUnion;
            return publicCompany;
        }
        /// <summary>
        /// There are no comments for Property StockExchange in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string StockExchange
        {
            get
            {
                return this._StockExchange;
            }
            set
            {
                this.OnStockExchangeChanging(value);
                this._StockExchange = value;
                this.OnStockExchangeChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _StockExchange;
        partial void OnStockExchangeChanging(string value);
        partial void OnStockExchangeChanged();
        /// <summary>
        /// There are no comments for Property Assets in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset> Assets
        {
            get
            {
                return this._Assets;
            }
            set
            {
                this.OnAssetsChanging(value);
                this._Assets = value;
                this.OnAssetsChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset> _Assets = new global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset>();
        partial void OnAssetsChanging(global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset> value);
        partial void OnAssetsChanged();
        /// <summary>
        /// There are no comments for Property Club in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Club Club
        {
            get
            {
                return this._Club;
            }
            set
            {
                this.OnClubChanging(value);
                this._Club = value;
                this.OnClubChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Club _Club;
        partial void OnClubChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Club value);
        partial void OnClubChanged();
        /// <summary>
        /// There are no comments for Property LabourUnion in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnion LabourUnion
        {
            get
            {
                return this._LabourUnion;
            }
            set
            {
                this.OnLabourUnionChanging(value);
                this._LabourUnion = value;
                this.OnLabourUnionChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnion _LabourUnion;
        partial void OnLabourUnionChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnion value);
        partial void OnLabourUnionChanged();
    }
    /// <summary>
    /// There are no comments for AssetSingle in the schema.
    /// </summary>
    public partial class AssetSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Asset>
    {
        /// <summary>
        /// Initialize a new AssetSingle object.
        /// </summary>
        public AssetSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new AssetSingle object.
        /// </summary>
        public AssetSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new AssetSingle object.
        /// </summary>
        public AssetSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Asset> query)
            : base(query) { }

    }
    /// <summary>
    /// There are no comments for Asset in the schema.
    /// </summary>
    /// <KeyProperties>
    /// AssetID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("AssetID")]
    public partial class Asset : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new Asset object.
        /// </summary>
        /// <param name="assetID">Initial value of AssetID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="number">Initial value of Number.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Asset CreateAsset(int assetID, string name, int number)
        {
            Asset asset = new Asset();
            asset.AssetID = assetID;
            asset.Name = name;
            asset.Number = number;
            return asset;
        }
        /// <summary>
        /// There are no comments for Property AssetID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int AssetID
        {
            get
            {
                return this._AssetID;
            }
            set
            {
                this.OnAssetIDChanging(value);
                this._AssetID = value;
                this.OnAssetIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _AssetID;
        partial void OnAssetIDChanging(int value);
        partial void OnAssetIDChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property Number in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int Number
        {
            get
            {
                return this._Number;
            }
            set
            {
                this.OnNumberChanging(value);
                this._Number = value;
                this.OnNumberChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Number;
        partial void OnNumberChanging(int value);
        partial void OnNumberChanged();
    }
    /// <summary>
    /// There are no comments for ClubSingle in the schema.
    /// </summary>
    public partial class ClubSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Club>
    {
        /// <summary>
        /// Initialize a new ClubSingle object.
        /// </summary>
        public ClubSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new ClubSingle object.
        /// </summary>
        public ClubSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new ClubSingle object.
        /// </summary>
        public ClubSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Club> query)
            : base(query) { }

    }
    /// <summary>
    /// There are no comments for Club in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ClubID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("ClubID")]
    public partial class Club : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new Club object.
        /// </summary>
        /// <param name="clubID">Initial value of ClubID.</param>
        /// <param name="name">Initial value of Name.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Club CreateClub(int clubID, string name)
        {
            Club club = new Club();
            club.ClubID = clubID;
            club.Name = name;
            return club;
        }
        /// <summary>
        /// There are no comments for Property ClubID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int ClubID
        {
            get
            {
                return this._ClubID;
            }
            set
            {
                this.OnClubIDChanging(value);
                this._ClubID = value;
                this.OnClubIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _ClubID;
        partial void OnClubIDChanging(int value);
        partial void OnClubIDChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    }
    /// <summary>
    /// There are no comments for LabourUnionSingle in the schema.
    /// </summary>
    public partial class LabourUnionSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<LabourUnion>
    {
        /// <summary>
        /// Initialize a new LabourUnionSingle object.
        /// </summary>
        public LabourUnionSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new LabourUnionSingle object.
        /// </summary>
        public LabourUnionSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new LabourUnionSingle object.
        /// </summary>
        public LabourUnionSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<LabourUnion> query)
            : base(query) { }

    }
    /// <summary>
    /// There are no comments for LabourUnion in the schema.
    /// </summary>
    /// <KeyProperties>
    /// LabourUnionID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("LabourUnionID")]
    public partial class LabourUnion : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new LabourUnion object.
        /// </summary>
        /// <param name="labourUnionID">Initial value of LabourUnionID.</param>
        /// <param name="name">Initial value of Name.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static LabourUnion CreateLabourUnion(int labourUnionID, string name)
        {
            LabourUnion labourUnion = new LabourUnion();
            labourUnion.LabourUnionID = labourUnionID;
            labourUnion.Name = name;
            return labourUnion;
        }
        /// <summary>
        /// There are no comments for Property LabourUnionID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int LabourUnionID
        {
            get
            {
                return this._LabourUnionID;
            }
            set
            {
                this.OnLabourUnionIDChanging(value);
                this._LabourUnionID = value;
                this.OnLabourUnionIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _LabourUnionID;
        partial void OnLabourUnionIDChanging(int value);
        partial void OnLabourUnionIDChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    }
    /// <summary>
    /// There are no comments for OrderSingle in the schema.
    /// </summary>
    public partial class OrderSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Order>
    {
        /// <summary>
        /// Initialize a new OrderSingle object.
        /// </summary>
        public OrderSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new OrderSingle object.
        /// </summary>
        public OrderSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new OrderSingle object.
        /// </summary>
        public OrderSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Order> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for LoggedInEmployee in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle LoggedInEmployee
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._LoggedInEmployee == null))
                {
                    this._LoggedInEmployee = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle(this.Context, GetPath("LoggedInEmployee"));
                }
                return this._LoggedInEmployee;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle _LoggedInEmployee;
        /// <summary>
        /// There are no comments for CustomerForOrder in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle CustomerForOrder
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._CustomerForOrder == null))
                {
                    this._CustomerForOrder = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle(this.Context, GetPath("CustomerForOrder"));
                }
                return this._CustomerForOrder;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle _CustomerForOrder;
    }
    /// <summary>
    /// There are no comments for Order in the schema.
    /// </summary>
    /// <KeyProperties>
    /// OrderID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("OrderID")]
    public partial class Order : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderID">Initial value of OrderID.</param>
        /// <param name="orderDate">Initial value of OrderDate.</param>
        /// <param name="shipDate">Initial value of ShipDate.</param>
        /// <param name="shipTime">Initial value of ShipTime.</param>
        /// <param name="infoFromCustomer">Initial value of InfoFromCustomer.</param>
        /// <param name="loggedInEmployee">Initial value of LoggedInEmployee.</param>
        /// <param name="customerForOrder">Initial value of CustomerForOrder.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Order CreateOrder(int orderID,
                    global::System.DateTimeOffset orderDate,
                    global::Microsoft.OData.Edm.Date shipDate,
                    global::Microsoft.OData.Edm.TimeOfDay shipTime,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.InfoFromCustomer infoFromCustomer,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee loggedInEmployee,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer customerForOrder)
        {
            Order order = new Order();
            order.OrderID = orderID;
            order.OrderDate = orderDate;
            order.ShipDate = shipDate;
            order.ShipTime = shipTime;
            if ((infoFromCustomer == null))
            {
                throw new global::System.ArgumentNullException("infoFromCustomer");
            }
            order.InfoFromCustomer = infoFromCustomer;
            if ((loggedInEmployee == null))
            {
                throw new global::System.ArgumentNullException("loggedInEmployee");
            }
            order.LoggedInEmployee = loggedInEmployee;
            if ((customerForOrder == null))
            {
                throw new global::System.ArgumentNullException("customerForOrder");
            }
            order.CustomerForOrder = customerForOrder;
            return order;
        }
        /// <summary>
        /// There are no comments for Property OrderID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int OrderID
        {
            get
            {
                return this._OrderID;
            }
            set
            {
                this.OnOrderIDChanging(value);
                this._OrderID = value;
                this.OnOrderIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _OrderID;
        partial void OnOrderIDChanging(int value);
        partial void OnOrderIDChanged();
        /// <summary>
        /// There are no comments for Property OrderDate in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.DateTimeOffset OrderDate
        {
            get
            {
                return this._OrderDate;
            }
            set
            {
                this.OnOrderDateChanging(value);
                this._OrderDate = value;
                this.OnOrderDateChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTimeOffset value);
        partial void OnOrderDateChanged();
        /// <summary>
        /// There are no comments for Property ShelfLife in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Nullable<global::System.TimeSpan> ShelfLife
        {
            get
            {
                return this._ShelfLife;
            }
            set
            {
                this.OnShelfLifeChanging(value);
                this._ShelfLife = value;
                this.OnShelfLifeChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<global::System.TimeSpan> _ShelfLife;
        partial void OnShelfLifeChanging(global::System.Nullable<global::System.TimeSpan> value);
        partial void OnShelfLifeChanged();
        /// <summary>
        /// There are no comments for Property OrderShelfLifes in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<global::System.TimeSpan> OrderShelfLifes
        {
            get
            {
                return this._OrderShelfLifes;
            }
            set
            {
                this.OnOrderShelfLifesChanging(value);
                this._OrderShelfLifes = value;
                this.OnOrderShelfLifesChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<global::System.TimeSpan> _OrderShelfLifes = new global::System.Collections.ObjectModel.Collection<global::System.TimeSpan>();
        partial void OnOrderShelfLifesChanging(global::System.Collections.ObjectModel.Collection<global::System.TimeSpan> value);
        partial void OnOrderShelfLifesChanged();
        /// <summary>
        /// There are no comments for Property ShipDate in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Edm.Date ShipDate
        {
            get
            {
                return this._ShipDate;
            }
            set
            {
                this.OnShipDateChanging(value);
                this._ShipDate = value;
                this.OnShipDateChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Edm.Date _ShipDate;
        partial void OnShipDateChanging(global::Microsoft.OData.Edm.Date value);
        partial void OnShipDateChanged();
        /// <summary>
        /// There are no comments for Property ShipTime in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Edm.TimeOfDay ShipTime
        {
            get
            {
                return this._ShipTime;
            }
            set
            {
                this.OnShipTimeChanging(value);
                this._ShipTime = value;
                this.OnShipTimeChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Edm.TimeOfDay _ShipTime;
        partial void OnShipTimeChanging(global::Microsoft.OData.Edm.TimeOfDay value);
        partial void OnShipTimeChanged();
        /// <summary>
        /// There are no comments for Property InfoFromCustomer in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.InfoFromCustomer InfoFromCustomer
        {
            get
            {
                return this._InfoFromCustomer;
            }
            set
            {
                this.OnInfoFromCustomerChanging(value);
                this._InfoFromCustomer = value;
                this.OnInfoFromCustomerChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.InfoFromCustomer _InfoFromCustomer;
        partial void OnInfoFromCustomerChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.InfoFromCustomer value);
        partial void OnInfoFromCustomerChanged();
        /// <summary>
        /// There are no comments for Property OrderDetails in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.OrderDetail> OrderDetails
        {
            get
            {
                return this._OrderDetails;
            }
            set
            {
                this.OnOrderDetailsChanging(value);
                this._OrderDetails = value;
                this.OnOrderDetailsChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.OrderDetail> _OrderDetails = new global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.OrderDetail>();
        partial void OnOrderDetailsChanging(global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.OrderDetail> value);
        partial void OnOrderDetailsChanged();
        /// <summary>
        /// There are no comments for Property LoggedInEmployee in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee LoggedInEmployee
        {
            get
            {
                return this._LoggedInEmployee;
            }
            set
            {
                this.OnLoggedInEmployeeChanging(value);
                this._LoggedInEmployee = value;
                this.OnLoggedInEmployeeChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee _LoggedInEmployee;
        partial void OnLoggedInEmployeeChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee value);
        partial void OnLoggedInEmployeeChanged();
        /// <summary>
        /// There are no comments for Property CustomerForOrder in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer CustomerForOrder
        {
            get
            {
                return this._CustomerForOrder;
            }
            set
            {
                this.OnCustomerForOrderChanging(value);
                this._CustomerForOrder = value;
                this.OnCustomerForOrderChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer _CustomerForOrder;
        partial void OnCustomerForOrderChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer value);
        partial void OnCustomerForOrderChanged();
    }
    /// <summary>
    /// There are no comments for InfoFromCustomer in the schema.
    /// </summary>
    public partial class InfoFromCustomer
    {
        /// <summary>
        /// Create a new InfoFromCustomer object.
        /// </summary>
        /// <param name="customerMessage">Initial value of CustomerMessage.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static InfoFromCustomer CreateInfoFromCustomer(string customerMessage)
        {
            InfoFromCustomer infoFromCustomer = new InfoFromCustomer();
            infoFromCustomer.CustomerMessage = customerMessage;
            return infoFromCustomer;
        }
        /// <summary>
        /// There are no comments for Property CustomerMessage in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string CustomerMessage
        {
            get
            {
                return this._CustomerMessage;
            }
            set
            {
                this.OnCustomerMessageChanging(value);
                this._CustomerMessage = value;
                this.OnCustomerMessageChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _CustomerMessage;
        partial void OnCustomerMessageChanging(string value);
        partial void OnCustomerMessageChanged();
    }
    /// <summary>
    /// There are no comments for OrderDetail in the schema.
    /// </summary>
    public partial class OrderDetail
    {
        /// <summary>
        /// Create a new OrderDetail object.
        /// </summary>
        /// <param name="orderID">Initial value of OrderID.</param>
        /// <param name="productID">Initial value of ProductID.</param>
        /// <param name="orderPlaced">Initial value of OrderPlaced.</param>
        /// <param name="quantity">Initial value of Quantity.</param>
        /// <param name="unitPrice">Initial value of UnitPrice.</param>
        /// <param name="productOrdered">Initial value of ProductOrdered.</param>
        /// <param name="associatedOrder">Initial value of AssociatedOrder.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static OrderDetail CreateOrderDetail(int orderID,
                    int productID,
                    global::System.DateTimeOffset orderPlaced,
                    int quantity,
                    float unitPrice,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product productOrdered,
                    global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order associatedOrder)
        {
            OrderDetail orderDetail = new OrderDetail();
            orderDetail.OrderID = orderID;
            orderDetail.ProductID = productID;
            orderDetail.OrderPlaced = orderPlaced;
            orderDetail.Quantity = quantity;
            orderDetail.UnitPrice = unitPrice;
            if ((productOrdered == null))
            {
                throw new global::System.ArgumentNullException("productOrdered");
            }
            orderDetail.ProductOrdered = productOrdered;
            if ((associatedOrder == null))
            {
                throw new global::System.ArgumentNullException("associatedOrder");
            }
            orderDetail.AssociatedOrder = associatedOrder;
            return orderDetail;
        }
        /// <summary>
        /// There are no comments for Property OrderID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int OrderID
        {
            get
            {
                return this._OrderID;
            }
            set
            {
                this.OnOrderIDChanging(value);
                this._OrderID = value;
                this.OnOrderIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _OrderID;
        partial void OnOrderIDChanging(int value);
        partial void OnOrderIDChanged();
        /// <summary>
        /// There are no comments for Property ProductID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                this.OnProductIDChanging(value);
                this._ProductID = value;
                this.OnProductIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _ProductID;
        partial void OnProductIDChanging(int value);
        partial void OnProductIDChanged();
        /// <summary>
        /// There are no comments for Property OrderPlaced in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.DateTimeOffset OrderPlaced
        {
            get
            {
                return this._OrderPlaced;
            }
            set
            {
                this.OnOrderPlacedChanging(value);
                this._OrderPlaced = value;
                this.OnOrderPlacedChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.DateTimeOffset _OrderPlaced;
        partial void OnOrderPlacedChanging(global::System.DateTimeOffset value);
        partial void OnOrderPlacedChanged();
        /// <summary>
        /// There are no comments for Property Quantity in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                this.OnQuantityChanging(value);
                this._Quantity = value;
                this.OnQuantityChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Quantity;
        partial void OnQuantityChanging(int value);
        partial void OnQuantityChanged();
        /// <summary>
        /// There are no comments for Property UnitPrice in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual float UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                this.OnUnitPriceChanging(value);
                this._UnitPrice = value;
                this.OnUnitPriceChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private float _UnitPrice;
        partial void OnUnitPriceChanging(float value);
        partial void OnUnitPriceChanged();
        /// <summary>
        /// There are no comments for Property ProductOrdered in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product ProductOrdered
        {
            get
            {
                return this._ProductOrdered;
            }
            set
            {
                this.OnProductOrderedChanging(value);
                this._ProductOrdered = value;
                this.OnProductOrderedChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product _ProductOrdered;
        partial void OnProductOrderedChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product value);
        partial void OnProductOrderedChanged();
        /// <summary>
        /// There are no comments for Property AssociatedOrder in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order AssociatedOrder
        {
            get
            {
                return this._AssociatedOrder;
            }
            set
            {
                this.OnAssociatedOrderChanging(value);
                this._AssociatedOrder = value;
                this.OnAssociatedOrderChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order _AssociatedOrder;
        partial void OnAssociatedOrderChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order value);
        partial void OnAssociatedOrderChanged();
    }
    /// <summary>
    /// There are no comments for ProductSingle in the schema.
    /// </summary>
    public partial class ProductSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Product>
    {
        /// <summary>
        /// Initialize a new ProductSingle object.
        /// </summary>
        public ProductSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new ProductSingle object.
        /// </summary>
        public ProductSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new ProductSingle object.
        /// </summary>
        public ProductSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Product> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for Details in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail> Details
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Details == null))
                {
                    this._Details = Context.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail>(GetPath("Details"));
                }
                return this._Details;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail> _Details;
    }
    /// <summary>
    /// There are no comments for Product in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ProductID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("ProductID")]
    public partial class Product : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of ProductID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="quantityPerUnit">Initial value of QuantityPerUnit.</param>
        /// <param name="unitPrice">Initial value of UnitPrice.</param>
        /// <param name="quantityInStock">Initial value of QuantityInStock.</param>
        /// <param name="discontinued">Initial value of Discontinued.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Product CreateProduct(int productID,
                    string name,
                    string quantityPerUnit,
                    float unitPrice,
                    int quantityInStock,
                    bool discontinued)
        {
            Product product = new Product();
            product.ProductID = productID;
            product.Name = name;
            product.QuantityPerUnit = quantityPerUnit;
            product.UnitPrice = unitPrice;
            product.QuantityInStock = quantityInStock;
            product.Discontinued = discontinued;
            return product;
        }
        /// <summary>
        /// There are no comments for Property ProductID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                this.OnProductIDChanging(value);
                this._ProductID = value;
                this.OnProductIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _ProductID;
        partial void OnProductIDChanging(int value);
        partial void OnProductIDChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property QuantityPerUnit in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string QuantityPerUnit
        {
            get
            {
                return this._QuantityPerUnit;
            }
            set
            {
                this.OnQuantityPerUnitChanging(value);
                this._QuantityPerUnit = value;
                this.OnQuantityPerUnitChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _QuantityPerUnit;
        partial void OnQuantityPerUnitChanging(string value);
        partial void OnQuantityPerUnitChanged();
        /// <summary>
        /// There are no comments for Property UnitPrice in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual float UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                this.OnUnitPriceChanging(value);
                this._UnitPrice = value;
                this.OnUnitPriceChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private float _UnitPrice;
        partial void OnUnitPriceChanging(float value);
        partial void OnUnitPriceChanged();
        /// <summary>
        /// There are no comments for Property QuantityInStock in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int QuantityInStock
        {
            get
            {
                return this._QuantityInStock;
            }
            set
            {
                this.OnQuantityInStockChanging(value);
                this._QuantityInStock = value;
                this.OnQuantityInStockChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _QuantityInStock;
        partial void OnQuantityInStockChanging(int value);
        partial void OnQuantityInStockChanged();
        /// <summary>
        /// There are no comments for Property Discontinued in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual bool Discontinued
        {
            get
            {
                return this._Discontinued;
            }
            set
            {
                this.OnDiscontinuedChanging(value);
                this._Discontinued = value;
                this.OnDiscontinuedChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private bool _Discontinued;
        partial void OnDiscontinuedChanging(bool value);
        partial void OnDiscontinuedChanged();
        /// <summary>
        /// There are no comments for Property SkinColor in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Nullable<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Color> SkinColor
        {
            get
            {
                return this._SkinColor;
            }
            set
            {
                this.OnSkinColorChanging(value);
                this._SkinColor = value;
                this.OnSkinColorChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Color> _SkinColor;
        partial void OnSkinColorChanging(global::System.Nullable<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Color> value);
        partial void OnSkinColorChanged();
        /// <summary>
        /// There are no comments for Property CoverColors in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Color> CoverColors
        {
            get
            {
                return this._CoverColors;
            }
            set
            {
                this.OnCoverColorsChanging(value);
                this._CoverColors = value;
                this.OnCoverColorsChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Color> _CoverColors = new global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Color>();
        partial void OnCoverColorsChanging(global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Color> value);
        partial void OnCoverColorsChanged();
        /// <summary>
        /// There are no comments for Property UserAccess in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Nullable<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.AccessLevel> UserAccess
        {
            get
            {
                return this._UserAccess;
            }
            set
            {
                this.OnUserAccessChanging(value);
                this._UserAccess = value;
                this.OnUserAccessChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.AccessLevel> _UserAccess;
        partial void OnUserAccessChanging(global::System.Nullable<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.AccessLevel> value);
        partial void OnUserAccessChanged();
        /// <summary>
        /// There are no comments for Property Details in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail> Details
        {
            get
            {
                return this._Details;
            }
            set
            {
                this.OnDetailsChanging(value);
                this._Details = value;
                this.OnDetailsChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail> _Details = new global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail>();
        partial void OnDetailsChanging(global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail> value);
        partial void OnDetailsChanged();
    }
    /// <summary>
    /// There are no comments for ProductDetailSingle in the schema.
    /// </summary>
    public partial class ProductDetailSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<ProductDetail>
    {
        /// <summary>
        /// Initialize a new ProductDetailSingle object.
        /// </summary>
        public ProductDetailSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new ProductDetailSingle object.
        /// </summary>
        public ProductDetailSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new ProductDetailSingle object.
        /// </summary>
        public ProductDetailSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<ProductDetail> query)
            : base(query) { }

        /// <summary>
        /// There are no comments for RelatedProduct in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductSingle RelatedProduct
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._RelatedProduct == null))
                {
                    this._RelatedProduct = new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductSingle(this.Context, GetPath("RelatedProduct"));
                }
                return this._RelatedProduct;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductSingle _RelatedProduct;
    }
    /// <summary>
    /// There are no comments for ProductDetail in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ProductDetailID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("ProductDetailID")]
    public partial class ProductDetail : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new ProductDetail object.
        /// </summary>
        /// <param name="productDetailID">Initial value of ProductDetailID.</param>
        /// <param name="productName">Initial value of ProductName.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="relatedProduct">Initial value of RelatedProduct.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static ProductDetail CreateProductDetail(int productDetailID, string productName, string description, global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product relatedProduct)
        {
            ProductDetail productDetail = new ProductDetail();
            productDetail.ProductDetailID = productDetailID;
            productDetail.ProductName = productName;
            productDetail.Description = description;
            if ((relatedProduct == null))
            {
                throw new global::System.ArgumentNullException("relatedProduct");
            }
            productDetail.RelatedProduct = relatedProduct;
            return productDetail;
        }
        /// <summary>
        /// There are no comments for Property ProductDetailID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int ProductDetailID
        {
            get
            {
                return this._ProductDetailID;
            }
            set
            {
                this.OnProductDetailIDChanging(value);
                this._ProductDetailID = value;
                this.OnProductDetailIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _ProductDetailID;
        partial void OnProductDetailIDChanging(int value);
        partial void OnProductDetailIDChanged();
        /// <summary>
        /// There are no comments for Property ProductName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string ProductName
        {
            get
            {
                return this._ProductName;
            }
            set
            {
                this.OnProductNameChanging(value);
                this._ProductName = value;
                this.OnProductNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _ProductName;
        partial void OnProductNameChanging(string value);
        partial void OnProductNameChanged();
        /// <summary>
        /// There are no comments for Property Description in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                this.OnDescriptionChanging(value);
                this._Description = value;
                this.OnDescriptionChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        /// <summary>
        /// There are no comments for Property Reviews in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductReview> Reviews
        {
            get
            {
                return this._Reviews;
            }
            set
            {
                this.OnReviewsChanging(value);
                this._Reviews = value;
                this.OnReviewsChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductReview> _Reviews = new global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductReview>();
        partial void OnReviewsChanging(global::System.Collections.ObjectModel.Collection<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductReview> value);
        partial void OnReviewsChanged();
        /// <summary>
        /// There are no comments for Property RelatedProduct in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product RelatedProduct
        {
            get
            {
                return this._RelatedProduct;
            }
            set
            {
                this.OnRelatedProductChanging(value);
                this._RelatedProduct = value;
                this.OnRelatedProductChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product _RelatedProduct;
        partial void OnRelatedProductChanging(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product value);
        partial void OnRelatedProductChanged();
    }
    /// <summary>
    /// There are no comments for ProductReview in the schema.
    /// </summary>
    public partial class ProductReview
    {
        /// <summary>
        /// Create a new ProductReview object.
        /// </summary>
        /// <param name="productID">Initial value of ProductID.</param>
        /// <param name="productDetailID">Initial value of ProductDetailID.</param>
        /// <param name="reviewTitle">Initial value of ReviewTitle.</param>
        /// <param name="revisionID">Initial value of RevisionID.</param>
        /// <param name="comment">Initial value of Comment.</param>
        /// <param name="author">Initial value of Author.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static ProductReview CreateProductReview(int productID,
                    int productDetailID,
                    string reviewTitle,
                    int revisionID,
                    string comment,
                    string author)
        {
            ProductReview productReview = new ProductReview();
            productReview.ProductID = productID;
            productReview.ProductDetailID = productDetailID;
            productReview.ReviewTitle = reviewTitle;
            productReview.RevisionID = revisionID;
            productReview.Comment = comment;
            productReview.Author = author;
            return productReview;
        }
        /// <summary>
        /// There are no comments for Property ProductID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                this.OnProductIDChanging(value);
                this._ProductID = value;
                this.OnProductIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _ProductID;
        partial void OnProductIDChanging(int value);
        partial void OnProductIDChanged();
        /// <summary>
        /// There are no comments for Property ProductDetailID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int ProductDetailID
        {
            get
            {
                return this._ProductDetailID;
            }
            set
            {
                this.OnProductDetailIDChanging(value);
                this._ProductDetailID = value;
                this.OnProductDetailIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _ProductDetailID;
        partial void OnProductDetailIDChanging(int value);
        partial void OnProductDetailIDChanged();
        /// <summary>
        /// There are no comments for Property ReviewTitle in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string ReviewTitle
        {
            get
            {
                return this._ReviewTitle;
            }
            set
            {
                this.OnReviewTitleChanging(value);
                this._ReviewTitle = value;
                this.OnReviewTitleChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _ReviewTitle;
        partial void OnReviewTitleChanging(string value);
        partial void OnReviewTitleChanged();
        /// <summary>
        /// There are no comments for Property RevisionID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual int RevisionID
        {
            get
            {
                return this._RevisionID;
            }
            set
            {
                this.OnRevisionIDChanging(value);
                this._RevisionID = value;
                this.OnRevisionIDChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _RevisionID;
        partial void OnRevisionIDChanging(int value);
        partial void OnRevisionIDChanged();
        /// <summary>
        /// There are no comments for Property Comment in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnCommentChanging(value);
                this._Comment = value;
                this.OnCommentChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Comment;
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
        /// <summary>
        /// There are no comments for Property Author in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string Author
        {
            get
            {
                return this._Author;
            }
            set
            {
                this.OnAuthorChanging(value);
                this._Author = value;
                this.OnAuthorChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Author;
        partial void OnAuthorChanging(string value);
        partial void OnAuthorChanged();
    }
    /// <summary>
    /// There are no comments for CompanyCategory in the schema.
    /// </summary>
    public enum CompanyCategory
    {
        IT = 0,
        Communication = 1,
        Electronics = 2,
        Others = 4
    }
    /// <summary>
    /// There are no comments for Color in the schema.
    /// </summary>
    public enum Color
    {
        Red = 1,
        Green = 2,
        Blue = 4
    }
    /// <summary>
    /// There are no comments for AccessLevel in the schema.
    /// </summary>
    [global::System.Flags]
    public enum AccessLevel
    {
        None = 0,
        Read = 1,
        Write = 2,
        ReadWrite = 3,
        Execute = 4
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="personID">The value of personID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person> source,
            int personID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonID", personID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PersonSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="personID">The value of personID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer> source,
            int personID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonID", personID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Cast an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person to its derived type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer
        /// </summary>
        /// <param name="source">source entity</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle CastToCustomer(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person> source)
        {
            global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer> query = source.CastTo<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Customer>();
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CustomerSingle(source.Context, query.GetPath(null));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="companyID">The value of companyID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company> source,
            int companyID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CompanyID", companyID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.CompanySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="personID">The value of personID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee> source,
            int personID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonID", personID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Cast an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person to its derived type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee
        /// </summary>
        /// <param name="source">source entity</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle CastToEmployee(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person> source)
        {
            global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee> query = source.CastTo<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Employee>();
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.EmployeeSingle(source.Context, query.GetPath(null));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="departmentID">The value of departmentID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Department> source,
            int departmentID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DepartmentID", departmentID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.DepartmentSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompany as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompanySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompanySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompany> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompanySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompany as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompanySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="companyID">The value of companyID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompanySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompany> source,
            int companyID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CompanyID", companyID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompanySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Cast an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company to its derived type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompany
        /// </summary>
        /// <param name="source">source entity</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompanySingle CastToPublicCompany(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Company> source)
        {
            global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompany> query = source.CastTo<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompany>();
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.PublicCompanySingle(source.Context, query.GetPath(null));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.AssetSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.AssetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.AssetSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.AssetSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="assetID">The value of assetID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.AssetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Asset> source,
            int assetID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AssetID", assetID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.AssetSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Club as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ClubSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ClubSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Club> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ClubSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Club as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ClubSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="clubID">The value of clubID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ClubSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Club> source,
            int clubID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ClubID", clubID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ClubSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnion as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnionSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnion> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnionSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnion as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnionSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="labourUnionID">The value of labourUnionID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnion> source,
            int labourUnionID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LabourUnionID", labourUnionID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.LabourUnionSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.OrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.OrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.OrderSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.OrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="orderID">The value of orderID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.OrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Order> source,
            int orderID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "OrderID", orderID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.OrderSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="productID">The value of productID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Product> source,
            int productID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductID", productID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetailSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail as global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="productDetailID">The value of productDetailID</param>
        public static global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetail> source,
            int productDetailID)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductDetailID", productDetailID }
            };
            return new global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.ProductDetailSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
    }
}
namespace Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Default
{
    /// <summary>
    /// There are no comments for Container in the schema.
    /// </summary>
    public partial class Container : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new Container object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public Container(global::System.Uri serviceRoot) :
                base(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "Microsoft.OData.Client.E2E.Tests.Common", "Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Default", "Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Default");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            if (clientType.Namespace.Equals("Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common", global::System.StringComparison.Ordinal))
            {
                return string.Concat("Microsoft.OData.Client.E2E.Tests.Common.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Default", global::System.StringComparison.Ordinal))
            {
                return string.Concat("Default.", clientType.Name);
            }
            return clientType.FullName;
        }
        /// <summary>
        /// There are no comments for People in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person> People
        {
            get
            {
                if ((this._People == null))
                {
                    this._People = base.CreateQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person>("People");
                }
                return this._People;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person> _People;
        /// <summary>
        /// There are no comments for People in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToPeople(global::Microsoft.OData.Client.E2E.Tests.AsyncRequestTests.Client.Microsoft.OData.Client.E2E.Tests.Common.Person person)
        {
            base.AddObject("People", person);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private const string Edmx = @"<edmx:Edmx Version=""4.0"" xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"">
  <edmx:DataServices>
    <Schema Namespace=""Microsoft.OData.Client.E2E.Tests.Common"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">
      <EntityType Name=""Person"">
        <Key>
          <PropertyRef Name=""PersonID"" />
        </Key>
        <Property Name=""PersonID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""FirstName"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""LastName"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""MiddleName"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""Numbers"" Type=""Collection(Edm.String)"" />
        <Property Name=""Emails"" Type=""Collection(Edm.String)"" />
        <Property Name=""Addresses"" Type=""Collection(Microsoft.OData.Client.E2E.Tests.Common.Address)"" />
        <Property Name=""HomeAddress"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Address"" Nullable=""false"" />
        <Property Name=""Home"" Type=""Edm.GeographyPoint"" Nullable=""false"" />
        <NavigationProperty Name=""Parent"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Person"" Nullable=""false"">
          <ReferentialConstraint Property=""PersonID"" ReferencedProperty=""PersonID"" />
        </NavigationProperty>
      </EntityType>
      <ComplexType Name=""Address"">
        <Property Name=""Street"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""City"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""PostalCode"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""UpdatedTime"" Type=""Edm.DateTimeOffset"" Nullable=""false"" />
      </ComplexType>
      <ComplexType Name=""CompanyAddress"" BaseType=""Microsoft.OData.Client.E2E.Tests.Common.Address"">
        <Property Name=""CompanyName"" Type=""Edm.String"" Nullable=""false"" />
      </ComplexType>
      <ComplexType Name=""HomeAddress"" BaseType=""Microsoft.OData.Client.E2E.Tests.Common.Address"">
        <Property Name=""FamilyName"" Type=""Edm.String"" Nullable=""false"" />
      </ComplexType>
      <EntityType Name=""Customer"" BaseType=""Microsoft.OData.Client.E2E.Tests.Common.Person"">
        <Property Name=""City"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""Birthday"" Type=""Edm.DateTimeOffset"" Nullable=""false"" />
        <Property Name=""TimeBetweenLastTwoOrders"" Type=""Edm.Duration"" Nullable=""false"" />
        <NavigationProperty Name=""Company"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Company"" Nullable=""false"" />
        <NavigationProperty Name=""Orders"" Type=""Collection(Microsoft.OData.Client.E2E.Tests.Common.Order)"" />
      </EntityType>
      <EntityType Name=""Company"" OpenType=""true"">
        <Key>
          <PropertyRef Name=""CompanyID"" />
        </Key>
        <Property Name=""CompanyID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""CompanyCategory"" Type=""Microsoft.OData.Client.E2E.Tests.Common.CompanyCategory"" Nullable=""false"" />
        <Property Name=""Name"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""Address"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Address"" Nullable=""false"" />
        <Property Name=""Revenue"" Type=""Edm.Int64"" Nullable=""false"" />
        <NavigationProperty Name=""Employees"" Type=""Collection(Microsoft.OData.Client.E2E.Tests.Common.Employee)"" />
        <NavigationProperty Name=""CoreDepartment"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Department"" Nullable=""false"" />
        <NavigationProperty Name=""VipCustomer"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Customer"" Nullable=""false"" />
        <NavigationProperty Name=""Departments"" Type=""Collection(Microsoft.OData.Client.E2E.Tests.Common.Department)"" />
      </EntityType>
      <EntityType Name=""Employee"" BaseType=""Microsoft.OData.Client.E2E.Tests.Common.Person"">
        <Property Name=""DateHired"" Type=""Edm.DateTimeOffset"" Nullable=""false"" />
        <Property Name=""Office"" Type=""Edm.GeographyPoint"" Nullable=""false"" />
        <Property Name=""CompanyID"" Type=""Edm.Int32"" Nullable=""false"" />
        <NavigationProperty Name=""Company"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Company"" Nullable=""false"">
          <ReferentialConstraint Property=""CompanyID"" ReferencedProperty=""CompanyID"" />
        </NavigationProperty>
      </EntityType>
      <EntityType Name=""Department"">
        <Key>
          <PropertyRef Name=""DepartmentID"" />
        </Key>
        <Property Name=""DepartmentID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Name"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""DepartmentNO"" Type=""Edm.String"" Nullable=""false"" />
        <NavigationProperty Name=""Company"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Company"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""PublicCompany"" BaseType=""Microsoft.OData.Client.E2E.Tests.Common.Company"" OpenType=""true"">
        <Property Name=""StockExchange"" Type=""Edm.String"" Nullable=""false"" />
        <NavigationProperty Name=""Assets"" Type=""Collection(Microsoft.OData.Client.E2E.Tests.Common.Asset)"" />
        <NavigationProperty Name=""Club"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Club"" Nullable=""false"" />
        <NavigationProperty Name=""LabourUnion"" Type=""Microsoft.OData.Client.E2E.Tests.Common.LabourUnion"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""Asset"">
        <Key>
          <PropertyRef Name=""AssetID"" />
        </Key>
        <Property Name=""AssetID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Name"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""Number"" Type=""Edm.Int32"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""Club"">
        <Key>
          <PropertyRef Name=""ClubID"" />
        </Key>
        <Property Name=""ClubID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Name"" Type=""Edm.String"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""LabourUnion"">
        <Key>
          <PropertyRef Name=""LabourUnionID"" />
        </Key>
        <Property Name=""LabourUnionID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Name"" Type=""Edm.String"" Nullable=""false"" />
      </EntityType>
      <EntityType Name=""Order"">
        <Key>
          <PropertyRef Name=""OrderID"" />
        </Key>
        <Property Name=""OrderID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""OrderDate"" Type=""Edm.DateTimeOffset"" Nullable=""false"" />
        <Property Name=""ShelfLife"" Type=""Edm.Duration"" />
        <Property Name=""OrderShelfLifes"" Type=""Collection(Edm.Duration)"" Nullable=""false"" />
        <Property Name=""ShipDate"" Type=""Edm.Date"" Nullable=""false"" />
        <Property Name=""ShipTime"" Type=""Edm.TimeOfDay"" Nullable=""false"" />
        <Property Name=""InfoFromCustomer"" Type=""Microsoft.OData.Client.E2E.Tests.Common.InfoFromCustomer"" Nullable=""false"" />
        <Property Name=""OrderDetails"" Type=""Collection(Microsoft.OData.Client.E2E.Tests.Common.OrderDetail)"" />
        <NavigationProperty Name=""LoggedInEmployee"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Employee"" Nullable=""false"" />
        <NavigationProperty Name=""CustomerForOrder"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Customer"" Nullable=""false"" />
      </EntityType>
      <ComplexType Name=""InfoFromCustomer"">
        <Property Name=""CustomerMessage"" Type=""Edm.String"" Nullable=""false"" />
      </ComplexType>
      <ComplexType Name=""OrderDetail"">
        <Property Name=""OrderID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""ProductID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""OrderPlaced"" Type=""Edm.DateTimeOffset"" Nullable=""false"" />
        <Property Name=""Quantity"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""UnitPrice"" Type=""Edm.Single"" Nullable=""false"" />
        <NavigationProperty Name=""ProductOrdered"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Product"" Nullable=""false"" />
        <NavigationProperty Name=""AssociatedOrder"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Order"" Nullable=""false"" />
      </ComplexType>
      <EntityType Name=""Product"">
        <Key>
          <PropertyRef Name=""ProductID"" />
        </Key>
        <Property Name=""ProductID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Name"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""QuantityPerUnit"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""UnitPrice"" Type=""Edm.Single"" Nullable=""false"" />
        <Property Name=""QuantityInStock"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Discontinued"" Type=""Edm.Boolean"" Nullable=""false"" />
        <Property Name=""SkinColor"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Color"" />
        <Property Name=""CoverColors"" Type=""Collection(Microsoft.OData.Client.E2E.Tests.Common.Color)"" Nullable=""false"" />
        <Property Name=""UserAccess"" Type=""Microsoft.OData.Client.E2E.Tests.Common.AccessLevel"" />
        <NavigationProperty Name=""Details"" Type=""Collection(Microsoft.OData.Client.E2E.Tests.Common.ProductDetail)"" />
      </EntityType>
      <EntityType Name=""ProductDetail"">
        <Key>
          <PropertyRef Name=""ProductDetailID"" />
        </Key>
        <Property Name=""ProductDetailID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""ProductName"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""Description"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""Reviews"" Type=""Collection(Microsoft.OData.Client.E2E.Tests.Common.ProductReview)"" />
        <NavigationProperty Name=""RelatedProduct"" Type=""Microsoft.OData.Client.E2E.Tests.Common.Product"" Nullable=""false"" />
      </EntityType>
      <ComplexType Name=""ProductReview"">
        <Property Name=""ProductID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""ProductDetailID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""ReviewTitle"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""RevisionID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Comment"" Type=""Edm.String"" Nullable=""false"" />
        <Property Name=""Author"" Type=""Edm.String"" Nullable=""false"" />
      </ComplexType>
      <EnumType Name=""CompanyCategory"">
        <Member Name=""IT"" Value=""0"" />
        <Member Name=""Communication"" Value=""1"" />
        <Member Name=""Electronics"" Value=""2"" />
        <Member Name=""Others"" Value=""4"" />
      </EnumType>
      <EnumType Name=""Color"">
        <Member Name=""Red"" Value=""1"" />
        <Member Name=""Green"" Value=""2"" />
        <Member Name=""Blue"" Value=""4"" />
      </EnumType>
      <EnumType Name=""AccessLevel"" IsFlags=""true"">
        <Member Name=""None"" Value=""0"" />
        <Member Name=""Read"" Value=""1"" />
        <Member Name=""Write"" Value=""2"" />
        <Member Name=""ReadWrite"" Value=""3"" />
        <Member Name=""Execute"" Value=""4"" />
      </EnumType>
    </Schema>
    <Schema Namespace=""Default"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">
      <EntityContainer Name=""Container"">
        <EntitySet Name=""People"" EntityType=""Microsoft.OData.Client.E2E.Tests.Common.Person"">
          <NavigationPropertyBinding Path=""Parent"" Target=""People"" />
        </EntitySet>
      </EntityContainer>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                global::System.Xml.XmlReader reader = CreateXmlReader(Edmx);
                try
                {
                    global::System.Collections.Generic.IEnumerable<global::Microsoft.OData.Edm.Validation.EdmError> errors;
                    global::Microsoft.OData.Edm.IEdmModel edmModel;

                    if (!global::Microsoft.OData.Edm.Csdl.CsdlReader.TryParse(reader, false, out edmModel, out errors))
                    {
                        global::System.Text.StringBuilder errorMessages = new System.Text.StringBuilder();
                        foreach (var error in errors)
                        {
                            errorMessages.Append(error.ErrorMessage);
                            errorMessages.Append("; ");
                        }
                        throw new global::System.InvalidOperationException(errorMessages.ToString());
                    }

                    return edmModel;
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }

        }
    }
}
