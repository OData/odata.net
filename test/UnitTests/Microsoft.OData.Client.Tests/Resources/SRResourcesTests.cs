//---------------------------------------------------------------------
// <copyright file="SRResourcesTests.cs" company="Microsoft">
//      Copyright (C) Microsoft Corporation. All rights reserved. See License.txt in the project root for license information.
// </copyright>
//---------------------------------------------------------------------


using System.Linq;
using System.Text.RegularExpressions;
using Xunit;

namespace Microsoft.OData.Client.Tests.Resources;

public class SRResourcesTests
{
    [Theory]
    [InlineData("ALinq_AggregationMethodNotSupported", new object[] { "Value" })]
    [InlineData("ALinq_AnyAllNotSupportedInOrderBy", new object[] { "Value" })]
    [InlineData("ALinq_BinaryNotSupported", new object[] { "Value" })]
    [InlineData("ALinq_CannotAddCountOption", new object[] { })]
    [InlineData("ALinq_CannotAddCountOptionConflict", new object[] { })]
    [InlineData("ALinq_CannotConstructKnownEntityTypes", new object[] { })]
    [InlineData("ALinq_CannotCreateConstantEntity", new object[] { })]
    [InlineData("ALinq_CannotProjectWithExplicitExpansion", new object[] { })]
    [InlineData("ALinq_CannotUseTypeFiltersMultipleTimes", new object[] { })]
    [InlineData("ALinq_CanOnlyApplyOneKeyPredicate", new object[] { })]
    [InlineData("ALinq_CanOnlyProjectTheLeaf", new object[] { })]
    [InlineData("ALinq_CantAddAstoriaQueryOption", new object[] { "Value" })]
    [InlineData("ALinq_CantAddDuplicateQueryOption", new object[] { "Value" })]
    [InlineData("ALinq_CantAddQueryOption", new object[] { })]
    [InlineData("ALinq_CantAddQueryOptionStartingWithDollarSign", new object[] { "Value" })]
    [InlineData("ALinq_CantCastToUnsupportedPrimitive", new object[] { "Value" })]
    [InlineData("ALinq_CantExpand", new object[] { })]
    [InlineData("ALinq_CantNavigateWithoutKeyPredicate", new object[] { })]
    [InlineData("ALinq_CantReferToPublicField", new object[] { "Value" })]
    [InlineData("ALinq_CantTranslateExpression", new object[] { "Value" })]
    [InlineData("ALinq_CollectionMemberAccessNotSupportedInNavigation", new object[] { "Value" })]
    [InlineData("ALinq_CollectionPropertyNotSupportedInOrderBy", new object[] { "Value" })]
    [InlineData("ALinq_CollectionPropertyNotSupportedInWhere", new object[] { "Value" })]
    [InlineData("ALinq_ConditionalNotSupported", new object[] { })]
    [InlineData("ALinq_ConstantNotSupported", new object[] { "Value" })]
    [InlineData("ALinq_ContainsNotValidOnEmptyCollection", new object[] { })]
    [InlineData("ALinq_CouldNotConvert", new object[] { "Value" })]
    [InlineData("ALinq_ExpressionCannotEndWithTypeAs", new object[] { "Value", "Value" })]
    [InlineData("ALinq_ExpressionNotSupportedInProjection", new object[] { "Value", "Value" })]
    [InlineData("ALinq_ExpressionNotSupportedInProjectionToEntity", new object[] { "Value", "Value" })]
    [InlineData("ALinq_FormatQueryOptionNotSupported", new object[] { })]
    [InlineData("ALinq_IllegalPathStructure", new object[] { "Value" })]
    [InlineData("ALinq_IllegalSystemQueryOption", new object[] { "Value" })]
    [InlineData("ALinq_InvalidAggregateExpression", new object[] { "Value" })]
    [InlineData("ALinq_InvalidExpressionInNavigationPath", new object[] { "Value" })]
    [InlineData("ALinq_InvalidGroupByKeySelector", new object[] { "Value" })]
    [InlineData("ALinq_InvalidGroupingExpression", new object[] { "Value" })]
    [InlineData("ALinq_InvalidSourceForAnyAll", new object[] { "Value" })]
    [InlineData("ALinq_InvocationNotSupported", new object[] { })]
    [InlineData("ALinq_LambdaNotSupported", new object[] { })]
    [InlineData("ALinq_LinkPropertyNotSupportedInExpression", new object[] { "Value" })]
    [InlineData("ALinq_ListInitNotSupported", new object[] { })]
    [InlineData("ALinq_MemberAccessNotSupported", new object[] { "Value" })]
    [InlineData("ALinq_MemberInitNotSupported", new object[] { })]
    [InlineData("ALinq_MethodNotSupported", new object[] { "Value" })]
    [InlineData("ALinq_NewArrayNotSupported", new object[] { })]
    [InlineData("ALinq_NewNotSupported", new object[] { })]
    [InlineData("ALinq_OfTypeArgumentNotAvailable", new object[] { })]
    [InlineData("ALinq_ParameterNotSupported", new object[] { })]
    [InlineData("ALinq_ProjectionCanOnlyHaveOneProjection", new object[] { })]
    [InlineData("ALinq_ProjectionMemberAssignmentMismatch", new object[] { "Value", "Value", "Value" })]
    [InlineData("ALinq_ProjectionOnlyAllowedOnLeafNodes", new object[] { })]
    [InlineData("ALinq_PropertyNamesMustMatchInProjections", new object[] { "Value", "Value" })]
    [InlineData("ALinq_QueryOptionNotSupported", new object[] { "Value" })]
    [InlineData("ALinq_QueryOptionOutOfOrder", new object[] { "Value", "Value" })]
    [InlineData("ALinq_QueryOptionsOnlyAllowedOnLeafNodes", new object[] { })]
    [InlineData("ALinq_QueryOptionsOnlyAllowedOnSingletons", new object[] { })]
    [InlineData("ALinq_TranslationError", new object[] { "Value" })]
    [InlineData("ALinq_TypeAsArgumentNotEntityType", new object[] { "Value" })]
    [InlineData("ALinq_TypeAsNotSupportedForMaxDataServiceVersionLessThan3", new object[] { })]
    [InlineData("ALinq_TypeBinaryNotSupported", new object[] { })]
    [InlineData("ALinq_TypeTokenWithNoTrailingNavProp", new object[] { "Value" })]
    [InlineData("ALinq_UnaryNotSupported", new object[] { "Value" })]
    [InlineData("ALinq_UnsupportedExpression", new object[] { "Value" })]
    [InlineData("Batch_ExpectedContentType", new object[] { "Value" })]
    [InlineData("Batch_ExpectedResponse", new object[] { "Value" })]
    [InlineData("Batch_IncompleteResponseCount", new object[] { })]
    [InlineData("Batch_UnexpectedContent", new object[] { "Value" })]
    [InlineData("ClientType_Ambiguous", new object[] { "Value", "Value" })]
    [InlineData("ClientType_CollectionOfCollectionNotSupported", new object[] { })]
    [InlineData("ClientType_KeysMustBeSimpleTypes", new object[] { "Value", "Value", "Value" })]
    [InlineData("ClientType_KeysOnDifferentDeclaredType", new object[] { "Value" })]
    [InlineData("ClientType_MissingMediaEntryProperty", new object[] { "Value", "Value" })]
    [InlineData("ClientType_MissingMimeTypeDataProperty", new object[] { "Value", "Value" })]
    [InlineData("ClientType_MissingMimeTypeProperty", new object[] { "Value", "Value" })]
    [InlineData("ClientType_MissingOpenProperty", new object[] { "Value", "Value" })]
    [InlineData("ClientType_MissingProperty", new object[] { "Value", "Value" })]
    [InlineData("ClientType_MultipleImplementationNotSupported", new object[] { })]
    [InlineData("Clienttype_MultipleOpenProperty", new object[] { "Value" })]
    [InlineData("ClientType_MultipleTypesWithSameName", new object[] { "Value" })]
    [InlineData("ClientType_NoSettableFields", new object[] { "Value" })]
    [InlineData("ClientType_NullOpenProperties", new object[] { "Value" })]
    [InlineData("ClientType_UnsupportedType", new object[] { "Value" })]
    [InlineData("ClientTypeCache_NonEntityTypeCannotContainEntityProperties", new object[] { "Value", "Value" })]
    [InlineData("Collection_CollectionTypesInCollectionOfPrimitiveTypesNotAllowed", new object[] { })]
    [InlineData("Collection_NullCollectionItemsNotSupported", new object[] { })]
    [InlineData("Collection_NullCollectionNotSupported", new object[] { "Value" })]
    [InlineData("Collection_NullCollectionReference", new object[] { "Value", "Value" })]
    [InlineData("Collection_NullNonPropertyCollectionNotSupported", new object[] { "Value" })]
    [InlineData("Collection_PrimitiveTypesInCollectionOfComplexTypesNotAllowed", new object[] { })]
    [InlineData("Content_EntityIsNotEntityType", new object[] { })]
    [InlineData("Content_EntityWithoutKey", new object[] { })]
    [InlineData("Context_AddLinkCollectionOnly", new object[] { })]
    [InlineData("Context_AddRelatedObjectCollectionOnly", new object[] { })]
    [InlineData("Context_AddRelatedObjectSourceDeleted", new object[] { })]
    [InlineData("Context_AsyncAlreadyDone", new object[] { })]
    [InlineData("Context_BaseUri", new object[] { })]
    [InlineData("Context_BaseUriRequired", new object[] { })]
    [InlineData("Context_BatchExecuteError", new object[] { })]
    [InlineData("Context_BatchNotSupportedForMediaLink", new object[] { })]
    [InlineData("Context_BatchNotSupportedForNamedStreams", new object[] { })]
    [InlineData("Context_BodyOperationParametersNotAllowedWithGet", new object[] { })]
    [InlineData("Context_BothLocationAndIdMustBeSpecified", new object[] { })]
    [InlineData("Context_CannotChangeStateIfAdded", new object[] { "Value" })]
    [InlineData("Context_CannotChangeStateToAdded", new object[] { })]
    [InlineData("Context_CannotChangeStateToModifiedIfNotUnchanged", new object[] { })]
    [InlineData("Context_CannotConvertKey", new object[] { "Value" })]
    [InlineData("Context_ChildResourceExists", new object[] { })]
    [InlineData("Context_ContentTypeRequiredForNamedStream", new object[] { })]
    [InlineData("Context_DeepInsertDeletedOrModified", new object[] { "Value" })]
    [InlineData("Context_DeepInsertOneTopLevelEntity", new object[] { })]
    [InlineData("Context_DidNotOriginateAsync", new object[] { })]
    [InlineData("Context_DifferentEntityAlreadyContained", new object[] { })]
    [InlineData("Context_DuplicateBodyOperationParameterName", new object[] { })]
    [InlineData("Context_DuplicateUriOperationParameterName", new object[] { })]
    [InlineData("Context_EndExecuteExpectedVoidResponse", new object[] { })]
    [InlineData("Context_EntityAlreadyContained", new object[] { })]
    [InlineData("Context_EntityDoesNotContainNamedStream", new object[] { "Value" })]
    [InlineData("Context_EntityInNonTrackedContextLacksMediaLinks", new object[] { })]
    [InlineData("Context_EntityMediaLinksNotTrackedInEntity", new object[] { })]
    [InlineData("Context_EntityMetadataBuilderIsRequired", new object[] { })]
    [InlineData("Context_EntityNotContained", new object[] { })]
    [InlineData("Context_EntityNotMediaLinkEntry", new object[] { })]
    [InlineData("Context_EntitySetName", new object[] { })]
    [InlineData("Context_ExecuteExpectedVoidResponse", new object[] { })]
    [InlineData("Context_ExecuteExpectsGetOrPostOrDelete", new object[] { })]
    [InlineData("Context_InternalError", new object[] { "Value" })]
    [InlineData("Context_LinkResourceInsertFailure", new object[] { })]
    [InlineData("Context_LocationHeaderExpectsAbsoluteUri", new object[] { })]
    [InlineData("Context_MissingOperationParameterName", new object[] { })]
    [InlineData("Context_MissingSelfAndEditLinkForNamedStream", new object[] { "Value" })]
    [InlineData("Context_MLEWithoutSaveStream", new object[] { "Value" })]
    [InlineData("Context_MustBeUsedWith", new object[] { "Value", "Value" })]
    [InlineData("Context_NoContentTypeForMediaLink", new object[] { "Value", "Value" })]
    [InlineData("Context_NoLoadWithInsertEnd", new object[] { })]
    [InlineData("Context_NoRelationWithDeleteEnd", new object[] { })]
    [InlineData("Context_NoRelationWithInsertEnd", new object[] { })]
    [InlineData("Context_NullElementInOperationParameterArray", new object[] { })]
    [InlineData("Context_NullKeysAreNotSupported", new object[] { "Value" })]
    [InlineData("Context_OnMessageCreatingReturningNull", new object[] { })]
    [InlineData("Context_OperationCanceled", new object[] { })]
    [InlineData("Context_PropertyNotSupportedForMaxDataServiceVersionGreaterThanX", new object[] { "Value", "Value" })]
    [InlineData("Context_RelationAlreadyContained", new object[] { })]
    [InlineData("Context_RelationNotRefOrCollection", new object[] { })]
    [InlineData("Context_RequestUriIsRelativeBaseUriRequired", new object[] { })]
    [InlineData("Context_RequestVersionIsBiggerThanProtocolVersion", new object[] { "Value", "Value" })]
    [InlineData("Context_ResolveEntitySetOrBaseUriRequired", new object[] { "Value" })]
    [InlineData("Context_ResolveReturnedInvalidUri", new object[] { })]
    [InlineData("Context_ResponseVersionIsBiggerThanProtocolVersion", new object[] { "Value", "Value" })]
    [InlineData("Context_SendingRequest_InvalidWhenUsingOnMessageCreating", new object[] { })]
    [InlineData("Context_SendingRequestEventArgsNotHttp", new object[] { })]
    [InlineData("Context_SetLinkReferenceOnly", new object[] { })]
    [InlineData("Context_SetRelatedObjectLinkNonCollectionOnly", new object[] { })]
    [InlineData("Context_SetRelatedObjectLinkSourceDeleted", new object[] { })]
    [InlineData("Context_SetRelatedObjectNonCollectionOnly", new object[] { })]
    [InlineData("Context_SetRelatedObjectSourceDeleted", new object[] { })]
    [InlineData("Context_SetSaveStreamOnInvalidEntityState", new object[] { "Value" })]
    [InlineData("Context_SetSaveStreamOnMediaEntryProperty", new object[] { "Value" })]
    [InlineData("Context_SetSaveStreamWithoutEditMediaLink", new object[] { })]
    [InlineData("Context_SetSaveStreamWithoutNamedStreamEditLink", new object[] { "Value" })]
    [InlineData("Context_TrackingExpectsAbsoluteUri", new object[] { })]
    [InlineData("Context_UnexpectedZeroRawRead", new object[] { })]
    [InlineData("Context_UpdateRelatedObjectNonCollectionOnly", new object[] { })]
    [InlineData("Context_VersionNotSupported", new object[] { "Value", "Value" })]
    [InlineData("DataBinding_BindingOperation_ArrayItemNotEntity", new object[] { "Value" })]
    [InlineData("DataBinding_BindingOperation_ArrayItemNull", new object[] { "Value" })]
    [InlineData("DataBinding_BindingOperation_DetachedSource", new object[] { })]
    [InlineData("DataBinding_CollectionAssociatedWithMultipleEntities", new object[] { "Value" })]
    [InlineData("DataBinding_CollectionChangedUnknownActionCollection", new object[] { "Value", "Value" })]
    [InlineData("DataBinding_CollectionPropertySetterValueHasObserver", new object[] { "Value", "Value" })]
    [InlineData("DataBinding_ComplexObjectAssociatedWithMultipleEntities", new object[] { "Value" })]
    [InlineData("DataBinding_DataServiceCollectionArgumentMustHaveEntityType", new object[] { "Value" })]
    [InlineData("DataBinding_DataServiceCollectionChangedUnknownActionCollection", new object[] { "Value" })]
    [InlineData("DataBinding_EntityAlreadyInCollection", new object[] { "Value" })]
    [InlineData("DataBinding_NotifyCollectionChangedNotImpl", new object[] { "Value" })]
    [InlineData("DataBinding_NotifyPropertyChangedNotImpl", new object[] { "Value" })]
    [InlineData("DataBinding_Util_UnknownEntitySetName", new object[] { "Value" })]
    [InlineData("DataServiceClientFormat_LoadServiceModelRequired", new object[] { })]
    [InlineData("DataServiceClientFormat_ValidServiceModelRequiredForJson", new object[] { })]
    [InlineData("DataServiceCollection_CannotDetermineContextFromItems", new object[] { })]
    [InlineData("DataServiceCollection_CannotStopTrackingChildCollection", new object[] { })]
    [InlineData("DataServiceCollection_InsertIntoTrackedButNotLoadedCollection", new object[] { })]
    [InlineData("DataServiceCollection_LoadAsyncNoParamsWithoutParentEntity", new object[] { })]
    [InlineData("DataServiceCollection_LoadAsyncRequiresDataServiceQuery", new object[] { })]
    [InlineData("DataServiceCollection_LoadRequiresTargetCollectionObserved", new object[] { })]
    [InlineData("DataServiceCollection_MultipleLoadAsyncOperationsAtTheSameTime", new object[] { })]
    [InlineData("DataServiceCollection_OperationForTrackedOnly", new object[] { })]
    [InlineData("DataServiceException_GeneralError", new object[] { })]
    [InlineData("DataServiceQuery_EnumerationNotSupported", new object[] { })]
    [InlineData("DataServiceRequest_FailGetCount", new object[] { })]
    [InlineData("DataServiceRequest_FailGetValue", new object[] { })]
    [InlineData("Deserialize_Current", new object[] { "Value", "Value" })]
    [InlineData("Deserialize_ExpectingSimpleValue", new object[] { })]
    [InlineData("Deserialize_GetEnumerator", new object[] { })]
    [InlineData("Deserialize_MismatchEntryLinkEntryPropertyIsCollection", new object[] { "Value" })]
    [InlineData("Deserialize_MismatchEntryLinkFeedPropertyNotCollection", new object[] { "Value" })]
    [InlineData("Deserialize_MismatchEntryLinkLocalSimple", new object[] { })]
    [InlineData("Deserialize_MissingIdElement", new object[] { })]
    [InlineData("Deserialize_MixedTextWithComment", new object[] { })]
    [InlineData("Deserialize_NoLocationHeader", new object[] { })]
    [InlineData("Deserialize_ServerException", new object[] { "Value" })]
    [InlineData("DSKAttribute_MustSpecifyAtleastOnePropertyName", new object[] { })]
    [InlineData("EdmValueUtils_CannotConvertTypeToClrValue", new object[] { "Value" })]
    [InlineData("EdmValueUtils_IncorrectPrimitiveTypeKind", new object[] { "Value", "Value", "Value" })]
    [InlineData("EdmValueUtils_IncorrectPrimitiveTypeKindNoTypeName", new object[] { "Value", "Value" })]
    [InlineData("EdmValueUtils_UnsupportedPrimitiveType", new object[] { "Value" })]
    [InlineData("EntityDescriptor_MissingSelfEditLink", new object[] { "Value" })]
    [InlineData("General_InternalError", new object[] { "Value" })]
    [InlineData("HttpProcessUtility_ClosingQuoteNotFound", new object[] { "Value" })]
    [InlineData("HttpProcessUtility_ContentTypeMissing", new object[] { })]
    [InlineData("HttpProcessUtility_EncodingNotSupported", new object[] { "Value" })]
    [InlineData("HttpProcessUtility_EscapeCharAtEnd", new object[] { "Value" })]
    [InlineData("HttpProcessUtility_EscapeCharWithoutQuotes", new object[] { "Value" })]
    [InlineData("HttpProcessUtility_MediaTypeMissingValue", new object[] { })]
    [InlineData("HttpProcessUtility_MediaTypeRequiresSemicolonBeforeParameter", new object[] { })]
    [InlineData("HttpProcessUtility_MediaTypeRequiresSlash", new object[] { })]
    [InlineData("HttpProcessUtility_MediaTypeRequiresSubType", new object[] { })]
    [InlineData("HttpProcessUtility_MediaTypeUnspecified", new object[] { })]
    [InlineData("MaterializeFromObject_CollectionKeyNotPresentInLinkTable", new object[] { })]
    [InlineData("MaterializeFromObject_CountNotPresent", new object[] { })]
    [InlineData("MaterializeFromObject_GetNestLinkForFlatCollection", new object[] { })]
    [InlineData("MaterializeFromObject_TopLevelLinkNotAvailable", new object[] { })]
    [InlineData("Materializer_CannotAssignNull", new object[] { "Value", "Value" })]
    [InlineData("Materializer_CollectionExpectedCollection", new object[] { "Value" })]
    [InlineData("Materializer_DataServiceCollectionNotSupportedForNonEntities", new object[] { })]
    [InlineData("Materializer_EntryIntoCollectionMismatch", new object[] { "Value", "Value" })]
    [InlineData("Materializer_EntryToAccessIsNull", new object[] { "Value" })]
    [InlineData("Materializer_EntryToInitializeIsNull", new object[] { "Value" })]
    [InlineData("Materializer_InvalidCollectionItem", new object[] { "Value" })]
    [InlineData("Materializer_InvalidContentTypeEncountered", new object[] { "Value" })]
    [InlineData("Materializer_InvalidEntityType", new object[] { "Value" })]
    [InlineData("Materializer_InvalidNonEntityType", new object[] { "Value" })]
    [InlineData("Materializer_InvalidResponsePayload", new object[] { "Value" })]
    [InlineData("Materializer_MaterializationTypeError", new object[] { "Value" })]
    [InlineData("Materializer_NoParameterlessCtorForCollectionProperty", new object[] { "Value", "Value" })]
    [InlineData("Materializer_ProjectEntityTypeMismatch", new object[] { "Value", "Value", "Value" })]
    [InlineData("Materializer_PropertyMissing", new object[] { "Value" })]
    [InlineData("Materializer_PropertyNotExpectedEntry", new object[] { "Value" })]
    [InlineData("Materializer_ResetAfterEnumeratorCreationError", new object[] { })]
    [InlineData("Materializer_TypeShouldBeCollectionError", new object[] { "Value" })]
    [InlineData("ODataMetadataBuilder_MissingEntityInstanceUri", new object[] { "Value" })]
    [InlineData("ODataMetadataBuilder_MissingEntitySetUri", new object[] { "Value" })]
    [InlineData("ODataMetadataBuilder_MissingSegmentForEntitySetUriSuffix", new object[] { "Value", "Value" })]
    [InlineData("ODataRequestMessage_GetStreamMethodNotSupported", new object[] { })]
    [InlineData("Parser_SingleEntry_ExpectedFeedOrEntry", new object[] { })]
    [InlineData("Parser_SingleEntry_MultipleFound", new object[] { })]
    [InlineData("Parser_SingleEntry_NoneFound", new object[] { })]
    [InlineData("PlatformHelper_DateTimeOffsetMustContainTimeZone", new object[] { "Value" })]
    [InlineData("Serializer_InvalidCollectionParameterItemType", new object[] { "Value", "Value" })]
    [InlineData("Serializer_InvalidEnumMemberValue", new object[] { "Value", "Value" })]
    [InlineData("Serializer_InvalidParameterType", new object[] { "Value", "Value" })]
    [InlineData("Serializer_LoopsNotAllowedInComplexTypes", new object[] { "Value" })]
    [InlineData("Serializer_LoopsNotAllowedInNonPropertyComplexTypes", new object[] { "Value" })]
    [InlineData("Serializer_NullCollectionParameterItemValue", new object[] { "Value" })]
    [InlineData("Serializer_UriDoesNotContainParameterAlias", new object[] { "Value" })]
    [InlineData("Util_EmptyArray", new object[] { })]
    [InlineData("Util_EmptyString", new object[] { })]
    [InlineData("Util_NullArrayElement", new object[] { })]
    [InlineData("ValueParser_InvalidDuration", new object[] { "Value" })]
    [InlineData("WebUtil_TypeMismatchInCollection", new object[] { "Value" })]
    [InlineData("WebUtil_TypeMismatchInNonPropertyCollection", new object[] { "Value" })]
    public void ResourceKey_ShouldFormatWithoutException(string resourceKey, object[] formatArgs)
    {
        // Arrange
        var resourceValue = SRResources.ResourceManager.GetString(resourceKey, SRResources.Culture);
        Assert.NotNull(resourceValue); // Ensure the resource exists

        // Act & Assert
        var exception = Record.Exception(() => Error.Format(resourceValue, formatArgs));
        Assert.Null(exception); // Ensure no Exception is thrown

        // Match numbers of arguments required in the resource string and validate against formatArgs
        var matches = Regex.Matches(resourceValue, @"\{\d+\}").Select(m => m.Value).Distinct();
        Assert.Equal(matches.Count(), formatArgs.Length);

        var formattedValue = Error.Format(resourceValue, formatArgs);
        Assert.NotNull(formattedValue);
    }
}
