namespace GeneratorV3
{
    using System.Collections.Generic;
    
    public sealed class firstⲻrule
    {
        public firstⲻrule(GeneratorV3.secondⲻrule secondⲻrule_1)
        {
            this.secondⲻrule_1 = secondⲻrule_1;
        }
        
        public GeneratorV3.secondⲻrule secondⲻrule_1 { get; }
    }
    
    public abstract class secondⲻrule
    {
        private secondⲻrule()
        {
        }
        
        protected abstract TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context);
        
        public abstract class Visitor<TResult, TContext>
        {
            public TResult Visit(secondⲻrule node, TContext context)
            {
                return node.Dispatch(this, context);
            }
            
            protected internal abstract TResult Accept(secondⲻrule.firstⲻrule node, TContext context);
            protected internal abstract TResult Accept(secondⲻrule.firstⲻrule_firstⲻrule node, TContext context);
            protected internal abstract TResult Accept(secondⲻrule.firstⲻrule_жCfirstⲻrule_꘡firstⲻrule꘡Ↄ_ж꘡firstⲻrule_firstⲻrule꘡_ж1firstⲻrule_1жfirstⲻrule node, TContext context);
            protected internal abstract TResult Accept(secondⲻrule.CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ node, TContext context);
            protected internal abstract TResult Accept(secondⲻrule.firstⲻrule_Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_꘡firstⲻrule_firstⲻrule꘡ node, TContext context);
        }
        
        public sealed class firstⲻrule : secondⲻrule
        {
            public firstⲻrule(GeneratorV3.firstⲻrule firstⲻrule_1)
            {
                this.firstⲻrule_1 = firstⲻrule_1;
            }
            
            public GeneratorV3.firstⲻrule firstⲻrule_1 { get; }
            
            protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
            {
                return visitor.Accept(this, context);
            }
        }
        
        public sealed class firstⲻrule_firstⲻrule : secondⲻrule
        {
            public firstⲻrule_firstⲻrule(GeneratorV3.firstⲻrule firstⲻrule_1, GeneratorV3.firstⲻrule firstⲻrule_2)
            {
                this.firstⲻrule_1 = firstⲻrule_1;
                this.firstⲻrule_2 = firstⲻrule_2;
            }
            
            public GeneratorV3.firstⲻrule firstⲻrule_1 { get; }
            public GeneratorV3.firstⲻrule firstⲻrule_2 { get; }
            
            protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
            {
                return visitor.Accept(this, context);
            }
        }
        
        public sealed class firstⲻrule_жCfirstⲻrule_꘡firstⲻrule꘡Ↄ_ж꘡firstⲻrule_firstⲻrule꘡_ж1firstⲻrule_1жfirstⲻrule : secondⲻrule
        {
            public firstⲻrule_жCfirstⲻrule_꘡firstⲻrule꘡Ↄ_ж꘡firstⲻrule_firstⲻrule꘡_ж1firstⲻrule_1жfirstⲻrule(GeneratorV3.firstⲻrule firstⲻrule_1, IEnumerable<Inners.Cfirstⲻrule_꘡firstⲻrule꘡Ↄ> Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1, IEnumerable<Inners.firstⲻrule_firstⲻrule?> firstⲻrule_firstⲻrule_1, IEnumerable<GeneratorV3.firstⲻrule> firstⲻrule_2, IEnumerable<GeneratorV3.firstⲻrule> firstⲻrule_3)
            {
                this.firstⲻrule_1 = firstⲻrule_1;
                this.Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1 = Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1;
                this.firstⲻrule_firstⲻrule_1 = firstⲻrule_firstⲻrule_1;
                this.firstⲻrule_2 = firstⲻrule_2;
                this.firstⲻrule_3 = firstⲻrule_3;
            }
            
            public GeneratorV3.firstⲻrule firstⲻrule_1 { get; }
            public IEnumerable<Inners.Cfirstⲻrule_꘡firstⲻrule꘡Ↄ> Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1 { get; }
            public IEnumerable<Inners.firstⲻrule_firstⲻrule?> firstⲻrule_firstⲻrule_1 { get; }
            public IEnumerable<GeneratorV3.firstⲻrule> firstⲻrule_2 { get; }
            public IEnumerable<GeneratorV3.firstⲻrule> firstⲻrule_3 { get; }
            
            protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
            {
                return visitor.Accept(this, context);
            }
        }
        
        public sealed class CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ : secondⲻrule
        {
            public CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ(Inners.CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ_1)
            {
                this.CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ_1 = CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ_1;
            }
            
            public Inners.CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ_1 { get; }
            
            protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
            {
                return visitor.Accept(this, context);
            }
        }
        
        public sealed class firstⲻrule_Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_꘡firstⲻrule_firstⲻrule꘡ : secondⲻrule
        {
            public firstⲻrule_Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_꘡firstⲻrule_firstⲻrule꘡(GeneratorV3.firstⲻrule firstⲻrule_1, Inners.Cfirstⲻrule_꘡firstⲻrule꘡Ↄ Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1, Inners.firstⲻrule_firstⲻrule? firstⲻrule_firstⲻrule_1)
            {
                this.firstⲻrule_1 = firstⲻrule_1;
                this.Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1 = Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1;
                this.firstⲻrule_firstⲻrule_1 = firstⲻrule_firstⲻrule_1;
            }
            
            public GeneratorV3.firstⲻrule firstⲻrule_1 { get; }
            public Inners.Cfirstⲻrule_꘡firstⲻrule꘡Ↄ Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1 { get; }
            public Inners.firstⲻrule_firstⲻrule? firstⲻrule_firstⲻrule_1 { get; }
            
            protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
            {
                return visitor.Accept(this, context);
            }
        }
    }
    
    public sealed class Inners
    {
        public sealed class firstⲻrule
        {
            public firstⲻrule(GeneratorV3.firstⲻrule firstⲻrule_1)
            {
                this.firstⲻrule_1 = firstⲻrule_1;
            }
            
            public GeneratorV3.firstⲻrule firstⲻrule_1 { get; }
        }
        
        public sealed class firstⲻrule_꘡firstⲻrule꘡
        {
            public firstⲻrule_꘡firstⲻrule꘡(GeneratorV3.firstⲻrule firstⲻrule_1, Inners.firstⲻrule? firstⲻrule_2)
            {
                this.firstⲻrule_1 = firstⲻrule_1;
                this.firstⲻrule_2 = firstⲻrule_2;
            }
            
            public GeneratorV3.firstⲻrule firstⲻrule_1 { get; }
            public Inners.firstⲻrule? firstⲻrule_2 { get; }
        }
        
        public sealed class Cfirstⲻrule_꘡firstⲻrule꘡Ↄ
        {
            public Cfirstⲻrule_꘡firstⲻrule꘡Ↄ(Inners.firstⲻrule_꘡firstⲻrule꘡ firstⲻrule_꘡firstⲻrule꘡_1)
            {
                this.firstⲻrule_꘡firstⲻrule꘡_1 = firstⲻrule_꘡firstⲻrule꘡_1;
            }
            
            public firstⲻrule_꘡firstⲻrule꘡ firstⲻrule_꘡firstⲻrule꘡_1 { get; }
        }
        
        public sealed class firstⲻrule_firstⲻrule
        {
            public firstⲻrule_firstⲻrule(GeneratorV3.firstⲻrule firstⲻrule_1, GeneratorV3.firstⲻrule firstⲻrule_2)
            {
                this.firstⲻrule_1 = firstⲻrule_1;
                this.firstⲻrule_2 = firstⲻrule_2;
            }
            
            public GeneratorV3.firstⲻrule firstⲻrule_1 { get; }
            public GeneratorV3.firstⲻrule firstⲻrule_2 { get; }
        }
        
        public abstract class firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ
        {
            private firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ()
            {
            }
            
            protected abstract TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context);
            
            public abstract class Visitor<TResult, TContext>
            {
                public TResult Visit(firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ node, TContext context)
                {
                    return node.Dispatch(this, context);
                }
                
                protected internal abstract TResult Accept(firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ.firstⲻrule node, TContext context);
                protected internal abstract TResult Accept(firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ.Cfirstⲻrule_꘡firstⲻrule꘡Ↄ node, TContext context);
            }
            
            public sealed class firstⲻrule : firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ
            {
                public firstⲻrule(GeneratorV3.firstⲻrule firstⲻrule_1)
                {
                    this.firstⲻrule_1 = firstⲻrule_1;
                }
                
                public GeneratorV3.firstⲻrule firstⲻrule_1 { get; }
                
                protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
                {
                    return visitor.Accept(this, context);
                }
            }
            
            public sealed class Cfirstⲻrule_꘡firstⲻrule꘡Ↄ : firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ
            {
                public Cfirstⲻrule_꘡firstⲻrule꘡Ↄ(Inners.Cfirstⲻrule_꘡firstⲻrule꘡Ↄ Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1)
                {
                    this.Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1 = Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1;
                }
                
                public Inners.Cfirstⲻrule_꘡firstⲻrule꘡Ↄ Cfirstⲻrule_꘡firstⲻrule꘡Ↄ_1 { get; }
                
                protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
                {
                    return visitor.Accept(this, context);
                }
            }
        }
        
        public sealed class CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ
        {
            public CfirstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡ↃↃ(Inners.firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ_1)
            {
                this.firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ_1 = firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ_1;
            }
            
            public firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ firstⲻruleⳆCfirstⲻrule_꘡firstⲻrule꘡Ↄ_1 { get; }
        }
    }
    
}
