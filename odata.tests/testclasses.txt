public sealed class rulewithnameFIRST_RULE
{
    public rulewithnameFIRST_RULE(rulewithnameSECOND_RULE rulewithnameSECOND_RULE1)
    {
        this.rulewithnameSECOND_RULE1 = rulewithnameSECOND_RULE1;
    }
    
    public rulewithnameSECOND_RULE rulewithnameSECOND_RULE1 { get; }
}

public abstract class rulewithnameSECOND_RULE
{
    private rulewithnameSECOND_RULE()
    {
    }
    
    protected abstract TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context);
    
    public abstract class Visitor<TResult, TContext>
    {
        public TResult Visit(rulewithnameSECOND_RULE node, TContext context)
        {
            return node.Dispatch(this, context);
        }
        
        protected internal abstract TResult Accept(FIRST_RULE node, TContext context);
        protected internal abstract TResult Accept(FIRST_RULEfollowedbyFIRST_RULE node, TContext context);
        protected internal abstract TResult Accept(FIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULE node, TContext context);
        protected internal abstract TResult Accept(FIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ node, TContext context);
        protected internal abstract TResult Accept(FIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ node, TContext context);
    }

    public sealed class groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ
    {
        public groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1, rulewithnameFIRST_RULE rulewithnameFIRST_RULE2)
        {
            this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
            this.rulewithnameFIRST_RULE2 = rulewithnameFIRST_RULE2;
        }

        public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
        public rulewithnameFIRST_RULE rulewithnameFIRST_RULE2 { get; }
    }

    public sealed class groupingofᴖFIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULEᴖ
    {
        public groupingofᴖFIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULEᴖ(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1, IEnumerable<groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ> groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1, IEnumerable<groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ> groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1, IEnumerable<rulewithnameFIRST_RULE> rulewithnameFIRST_RULE2, IEnumerable<rulewithnameFIRST_RULE> rulewithnameFIRST_RULE3)
        {
            this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
            this.groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1 = groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1;
            this.groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1 = groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1;
            this.rulewithnameFIRST_RULE2 = rulewithnameFIRST_RULE2;
            this.rulewithnameFIRST_RULE3 = rulewithnameFIRST_RULE3;
        }

        public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
        public IEnumerable<groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ> groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1 { get; }
        public IEnumerable<groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ> groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1 { get; }
        public IEnumerable<rulewithnameFIRST_RULE> rulewithnameFIRST_RULE2 { get; }
        public IEnumerable<rulewithnameFIRST_RULE> rulewithnameFIRST_RULE3 { get; }

        public abstract class groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ
        {
            private groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ()
            {
            }

            protected abstract TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context);

            public abstract class Visitor<TResult, TContext>
            {
                public TResult Visit(groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ node, TContext context)
                {
                    return node.Dispatch(this, context);
                }

                protected internal abstract TResult Accept(FIRST_RULEfollowedbyoneFIRST_RULE node, TContext context);
                protected internal abstract TResult Accept(FIRST_RULEfollowedbynoFIRST_RULE node, TContext context);
            }

            public sealed class FIRST_RULEfollowedbyoneFIRST_RULE : groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ
            {
                public FIRST_RULEfollowedbyoneFIRST_RULE(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1, rulewithnameFIRST_RULE rulewithnameFIRST_RULE2)
                {
                    this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
                    this.rulewithnameFIRST_RULE2 = rulewithnameFIRST_RULE2;
                }

                public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
                public rulewithnameFIRST_RULE rulewithnameFIRST_RULE2 { get; }

                protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
                {
                    return visitor.Accept(this, context);
                }
            }

            public sealed class FIRST_RULEfollowedbynoFIRST_RULE : groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ
            {
                public FIRST_RULEfollowedbynoFIRST_RULE(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1)
                {
                    this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
                }

                public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }

                protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
                {
                    return visitor.Accept(this, context);
                }
            }
        }

        public sealed class groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ
        {
            public groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1, rulewithnameFIRST_RULE rulewithnameFIRST_RULE2)
            {
                this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
                this.rulewithnameFIRST_RULE2 = rulewithnameFIRST_RULE2;
            }

            public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
            public rulewithnameFIRST_RULE rulewithnameFIRST_RULE2 { get; }
        }
    }

    public abstract class groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ
    {
        private groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ()
        {
        }

        protected abstract TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context);

        public abstract class Visitor<TResult, TContext>
        {
            public TResult Visit(groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ node, TContext context)
            {
                return node.Dispatch(this, context);
            }

            protected internal abstract TResult Accept(FIRST_RULE node, TContext context);
            protected internal abstract TResult Accept(FIRST_RULEfollowedbyoptionalFIRST_RULE node, TContext context);
        }

        public abstract class groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ
        {
            private groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ()
            {
            }

            protected abstract TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context);

            public abstract class Visitor<TResult, TContext>
            {
                public TResult Visit(groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ node, TContext context)
                {
                    return node.Dispatch(this, context);
                }

                protected internal abstract TResult Accept(FIRST_RULEfollowedbyoneFIRST_RULE node, TContext context);
                protected internal abstract TResult Accept(FIRST_RULEfollowedbynoFIRST_RULE node, TContext context);
            }

            public sealed class FIRST_RULEfollowedbyoneFIRST_RULE : groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ
            {
                public FIRST_RULEfollowedbyoneFIRST_RULE(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1, rulewithnameFIRST_RULE rulewithnameFIRST_RULE2)
                {
                    this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
                    this.rulewithnameFIRST_RULE2 = rulewithnameFIRST_RULE2;
                }

                public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
                public rulewithnameFIRST_RULE rulewithnameFIRST_RULE2 { get; }

                protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
                {
                    return visitor.Accept(this, context);
                }
            }

            public sealed class FIRST_RULEfollowedbynoFIRST_RULE : groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ
            {
                public FIRST_RULEfollowedbynoFIRST_RULE(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1)
                {
                    this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
                }

                public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }

                protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
                {
                    return visitor.Accept(this, context);
                }
            }
        }

        public sealed class FIRST_RULE : groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ
        {
            public FIRST_RULE(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1)
            {
                this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
            }

            public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }

            protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
            {
                return visitor.Accept(this, context);
            }
        }

        public sealed class FIRST_RULEfollowedbyoptionalFIRST_RULE : groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ
        {
            public FIRST_RULEfollowedbyoptionalFIRST_RULE(groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1)
            {
                this.groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1 = groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1;
            }

            public groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1 { get; }

            protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
            {
                return visitor.Accept(this, context);
            }
        }
    }

    //// TODO these grouping classes that immediately take in a DU could just directly be a DU
    public abstract class groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ
    {
        private groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ()
        {
        }

        protected abstract TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context);

        public abstract class Visitor<TResult, TContext>
        {
            public TResult Visit(groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ node, TContext context)
            {
                return node.Dispatch(this, context);
            }

            protected internal abstract TResult Accept(FIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyonegroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ node, TContext context);
            protected internal abstract TResult Accept(FIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbynogroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ node, TContext context);
        }

        public sealed class groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ
        {
            public groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ(FIRST_RULEfollowedbyoptionalFIRST_RULE FIRST_RULEfollowedbyoptionalFIRST_RULE1)
            {
                this.FIRST_RULEfollowedbyoptionalFIRST_RULE1 = FIRST_RULEfollowedbyoptionalFIRST_RULE1;
            }

            public FIRST_RULEfollowedbyoptionalFIRST_RULE FIRST_RULEfollowedbyoptionalFIRST_RULE1 { get; }

            public abstract class FIRST_RULEfollowedbyoptionalFIRST_RULE
            {
                private FIRST_RULEfollowedbyoptionalFIRST_RULE()
                {
                }

                protected abstract TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context);

                public abstract class Visitor<TResult, TContext>
                {
                    public TResult Visit(FIRST_RULEfollowedbyoptionalFIRST_RULE node, TContext context)
                    {
                        return node.Dispatch(this, context);
                    }

                    protected internal abstract TResult Accept(FIRST_RULEfollowedbyoneFIRST_RULE node, TContext context);
                    protected internal abstract TResult Accept(FIRST_RULEfollwedbynoFIRST_RULE node, TContext context);
                }

                public sealed class FIRST_RULEfollowedbyoneFIRST_RULE : FIRST_RULEfollowedbyoptionalFIRST_RULE
                {
                    public FIRST_RULEfollowedbyoneFIRST_RULE(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1, rulewithnameFIRST_RULE rulewithnameFIRST_RULE2)
                    {
                        this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
                        this.rulewithnameFIRST_RULE2 = rulewithnameFIRST_RULE2;
                    }

                    public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
                    public rulewithnameFIRST_RULE rulewithnameFIRST_RULE2 { get; }

                    protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
                    {
                        return visitor.Accept(this, context);
                    }
                }

                public sealed class FIRST_RULEfollwedbynoFIRST_RULE : FIRST_RULEfollowedbyoptionalFIRST_RULE
                {
                    public FIRST_RULEfollwedbynoFIRST_RULE(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1, rulewithnameFIRST_RULE rulewithnameFIRST_RULE2)
                    {
                        this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
                        this.rulewithnameFIRST_RULE2 = rulewithnameFIRST_RULE2;
                    }

                    public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
                    public rulewithnameFIRST_RULE rulewithnameFIRST_RULE2 { get; }

                    protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
                    {
                        return visitor.Accept(this, context);
                    }
                }
            }
        }

        public sealed class groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ
        {
            public groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1, rulewithnameFIRST_RULE rulewithnameFIRST_RULE2)
            {
                this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
                this.rulewithnameFIRST_RULE2 = rulewithnameFIRST_RULE2;
            }

            public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
            public rulewithnameFIRST_RULE rulewithnameFIRST_RULE2 { get; }
        }

        public sealed class FIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyonegroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ : groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ
        {
            public FIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyonegroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ(
                rulewithnameFIRST_RULE rulewithnameFIRST_RULE1,
                groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1,
                groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1)
            {
                this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
                this.groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1 = groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1;
                this.groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1 = groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1;
            }

            public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
            public groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1 { get; }
            public groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1 { get; }

            protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
            {
                return visitor.Accept(this, context);
            }
        }

        public sealed class FIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbynogroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ : groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ
        {
            public FIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbynogroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ(
                rulewithnameFIRST_RULE rulewithnameFIRST_RULE1,
                groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1)
            {
                this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
                this.groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1 = groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1;
            }

            public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
            public groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ1 { get; }

            protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
            {
                return visitor.Accept(this, context);
            }
        }
    }

    public sealed class FIRST_RULE : rulewithnameSECOND_RULE
    {
        public FIRST_RULE(rulewithnameFIRST_RULE rulewithnameFIRST_RULE1)
        {
            this.rulewithnameFIRST_RULE1 = rulewithnameFIRST_RULE1;
        }
        
        public rulewithnameFIRST_RULE rulewithnameFIRST_RULE1 { get; }
        
        protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
        {
            return visitor.Accept(this, context);
        }
    }
    
    public sealed class FIRST_RULEfollowedbyFIRST_RULE : rulewithnameSECOND_RULE
    {
        public FIRST_RULEfollowedbyFIRST_RULE(groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1)
        {
            this.groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1 = groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1;
        }
        
        public groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ1 { get; }
        
        protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
        {
            return visitor.Accept(this, context);
        }
    }
    
    public sealed class FIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULE : rulewithnameSECOND_RULE
    {
        public FIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULE(groupingofᴖFIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULEᴖ1)
        {
            this.groupingofᴖFIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULEᴖ1 = groupingofᴖFIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULEᴖ1;
        }
        
        public groupingofᴖFIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULEᴖ groupingofᴖFIRST_RULEfollowedbyanynumberofgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyanynumberofoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖfollowedbyatmostONEFIRST_RULEfollowedbyatleastONEFIRST_RULEᴖ1 { get; }
        
        protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
        {
            return visitor.Accept(this, context);
        }
    }
    
    public sealed class FIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ : rulewithnameSECOND_RULE
    {
        public FIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖ(groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ1)
        {
            this.groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ1 = groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ1;
        }
        
        public groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ groupingofᴖFIRST_RULEorgroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖᴖ1 { get; }
        
        protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
        {
            return visitor.Accept(this, context);
        }
    }
    
    public sealed class FIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ : rulewithnameSECOND_RULE
    {
        public FIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖ(groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ1)
        {
            this.groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ1 = groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ1;
        }
        
        public groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ groupingofᴖFIRST_RULEfollowedbygroupingofᴖFIRST_RULEfollowedbyoptionalFIRST_RULEᴖfollowedbyoptionalgroupingofᴖFIRST_RULEfollowedbyFIRST_RULEᴖᴖ1 { get; }
        
        protected sealed override TResult Dispatch<TResult, TContext>(Visitor<TResult, TContext> visitor, TContext context)
        {
            return visitor.Accept(this, context);
        }
    }
}

